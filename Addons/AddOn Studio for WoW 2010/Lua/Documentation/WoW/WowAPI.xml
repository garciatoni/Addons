<?xml version="1.0"?>
<doc xmlns="http://fallenworlds.org/addonstudio/schemas/xmldoc">
	<function name="SpellTargetItem" />
	<function name="GetNumPackages">
		<summary>Gets the number of packages.</summary>
		<return name="numPackages" type="number">Number of packages.</return>
	</function>
	<function name="TaxiNodeSetCurrent">
		<summary>Sets the "current" flight path node to a specific index</summary>
		<param name="slot" type="number">The internal index of a flight path node</param>
	</function>
	<function name="GetTrainerServiceTypeFilter">
		<summary>Queries the enabled state of a filter in the trainer window</summary>
		<param name="type" type="string">The filter type to query</param>
		<return name="isEnabled" apitype="onenil">1 if the filter is currently enabled, otherwise nil</return>
	</function>
	<function name="InCombatLockdown">
		<summary>Queries the game client to see if the user interface is currently in protected lockdown mode</summary>
		<return name="inLockdown" apitype="onenil">1 if the user interface is in protected lockdown mode as a result of combat, otherwise nil</return>
	</function>
	<function name="QueryAuctionItems">
		<summary>Queries the auction house's listings for the attributes specified</summary>
		<param name="name" type="string" optional="true">The name you want to search for. This is a substring match, not an exact one.</param>
		<param name="minLevel" type="number" optional="true">The minimum item use level you want returned</param>
		<param name="maxLevel" type="number" optional="true">The maximum item use level you want returned</param>
		<param name="invTypeIndex" type="number" optional="true">The inventory type you want to search for, this must be specified as an index according to the following table. The INVTYPE_* tokens are taken from the return values of GetItemInfo().</param>
		<param name="classIndex" type="number" optional="true">The auction item class index as returned by the GetAuctionItemClasses() function.</param>
		<param name="subclassIndex" type="number" optional="true">The auction item class index as returned by the GetAuctionItemSubClasses() function.</param>
		<param name="page" type="number" optional="true">The page of possibilities that you want returned. For example, if the query would return 1000 items, and you want items 300 to 350, then you would ask for page number 7.</param>
		<param name="isUsable" type="boolean" optional="true">True is the you only want items that you can use returned, false otherwise. use is defined as at or below your current character's level for items and at or below your current character's skill for recipes and schematics.</param>
		<param name="qualityIndex" type="number" optional="true">The quality of the items you want returned.</param>
		<param name="getAll" type="boolean" optional="true">True if you want all of the pages returned at once, false otherwise. This option can only be used once every 15 minutes.</param>
	</function>
	<function name="UnitRace">
		<summary>Retrieves the units race.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="race" type="string">The localized name of the queried unit's race</return>
		<return name="fileName" type="string">The English name of the queried unit's race, as used in the various artwork files.</return>
	</function>
	<function name="UnitClass">
		<summary>Queries a unit's class</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="class" type="string">The localized name of the queried unit's class</return>
		<return name="englishClass" type="string">The English name of the queried unit's class, as an uppercase string</return>
	</function>
	<function name="CancelLogout">
		<summary>Cancels a pending logout</summary>
	</function>
	<function name="CursorHasItem">
		<summary>Indicates if the cursor is currently holding an item</summary>
		<return name="hasItem" apitype="onenil">1 if the cursor is currently holding an item, otherwise nil</return>
	</function>
	<function name="EnableAddOn">
		<summary>Enables an addon for the current character</summary>
		<paramchoice>
			<param name="index" type="number">The index of the addon to be enabled</param>
			<param name="name" type="string">The name of the addon to be enabled</param>
		</paramchoice>
	</function>
	<function name="Screenshot">
		<summary>Takes a screenshot, displaying a message when done</summary>
	</function>
	<function name="GetBattlefieldArenaFaction" />
	<function name="IsCurrentItem">
		<summary>Returns true if the item is being used and nothing if it is not</summary>
		<paramchoice>
			<param name="itemID" type="number">An item's ID</param>
			<param name="itemName" type="string">An item's name</param>
			<param name="itemLink" type="string">An item's link</param>
		</paramchoice>
		<return name="isItem" apitype="onenil">1 if the item is being used or awaiting input (such as a targeted effect)</return>
	</function>
	<function name="GetVoiceStatus">
		<summary>Gets the voice enabled status of the queried player.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="status" apitype="onenil">1 if voice is enabled, nil if disabled.</return>
	</function>
	<function name="GetCursorInfo">
		<summary>Returns information about the object currently held by the cursor</summary>
		<return name="type" type="string">The type of object currently held by the cursor</return>
		<return name="id" type="number">The value depends on the return for "type", but corresponds to the amount of money in copper, the spell id, the item id, the macro index, or the index of the merchant item being held</return>
		<return name="subType" type="string">The subtype of the object being held, depending on the return of "type".  The spellbookType for the spell or the itemLink for the item being held</return>
	</function>
	<function name="GetSpellBonusHealing">
		<summary>Query player's bonus healing from equipment.</summary>
		<return name="bonusHealing">Sum of healing bonus on player's equipped items.</return>
	</function>
	<function name="UnitIsRaidOfficer">
		<summary>Returns whether or not the given unit is an officer in the raid</summary>
		<param />
		<return name="isOfficer" apitype="onenil">1 if the given unit is an officer in the raid, nil otherwise</return>
	</function>
	<function name="GetBlockChance">
		<summary>Returns your block percentage.</summary>
		<return name="chance" type="number">Percentage chance to block</return>
	</function>
	<function name="IsEquippedItem">
		<summary>Returns whether or not the supplied item is currently equipped by the player</summary>
		<paramchoice>
			<param name="name" type="string">A name of an item</param>
			<param name="itemId" type="number" apitype="itemid">A item's itemId</param>
		</paramchoice>
		<return name="isEquipped" apitype="onenil">1 if the item is equipped, otherwise nil</return>
	</function>
	<function name="GetTitleName">
		<summary>Retrieve a title string from a title ID</summary>
		<param name="titleMaskID">Index of the title name to query</param>
		<return name="titleName" type="string">The name of the title requested</return>
	</function>
	<function name="GetCurrentMapZone">
		<summary>Gets the number of the zone currently shown on the World Map</summary>
		<return name="zone" type="number">The number of the zone currently shown on the World Map</return>
	</function>
	<function name="CollapseFactionHeader">
		<summary>Collapses a given faction header</summary>
		<param name="index" type="number">The index of the faction header to collapse</param>
	</function>
	<function name="SelectGossipActiveQuest">
		<summary>Selects an active quest in the gossip dialog</summary>
		<param name="index" type="number">The index of an active quest in the gossip dialog</param>
	</function>
	<function name="GetChannelRosterInfo">
		<summary>Returns information about a user in a given channel</summary>
		<param name="id" type="number">The index of the channel the query</param>
		<param name="rosterIndex" type="number">The index of the player in the given channel</param>
		<return name="name" type="string">The name of the player</return>
		<return name="owner" apitype="onenil">1 if the player is the channel owner, otherwise nil</return>
		<return name="moderator" apitype="onenil">1 if the player is the channel moderator, otherwise nil</return>
		<return name="muted" apitype="onenil">1 if the player is muted, otherwise nil</return>
		<return name="active" apitype="onenil">1 if the player is currently speaking in the channel, otherwise nil</return>
		<return name="enabled" apitype="onenil">1 if the player has voice chat enabled in the channel, otherwise nil</return>
	</function>
	<function name="IsAddOnLoadOnDemand">
		<summary>Returns whether or not a given addon can be loaded on demand</summary>
		<param name="index" type="number">The index of the addon to query</param>
		<param name="name" type="string">The name of the addon to query</param>
		<return name="isLod" apitype="onenil">1 if the addon is capable of load on demand, otherwise nil</return>
	</function>
	<function name="SetArenaTeamRosterSelection">
		<summary>Selects a specific member from an arena team roster</summary>
		<param name="team" type="number">The index of the arena team</param>
		<param name="index" type="number">The index of the player to select</param>
	</function>
	<function name="RegisterCVar">
		<summary>Registers a configuration variable to be saved</summary>
		<param name="cvar" type="string">The name of a CVar to register</param>
		<param name="default" type="string">The default value of the CVar</param>
	</function>
	<function name="LoggingChat">
		<summary>Toggle logging of chat to Logs/WowChatLog.txt. Toggle = true to turn on logging, Toggle = false to turn off logging, nil to query logging status.</summary>
		<param name="toggle" type="boolean">Toggle on or off, defaults to nil.</param>
		<return name="isLogging" apitype="onenil">Chat logging flag.</return>
	</function>
	<function name="GetDailyQuestsCompleted">
		<summary>Gets the number of daily quests the player already completed today.</summary>
		<return name="dailyQuestsComplete" type="number">The number of daily quests the player completed.</return>
	</function>
	<function name="GetContainerItemCooldown">
		<summary>Returns information about the cooldown for an item in one of your bags</summary>
		<param name="index" type="number">The index of the container</param>
		<param name="slot" type="number">The slot within the given container</param>
		<return name="start" type="number">The time the cooldown started with millisecond precision.  This is the value of GetTime() at the moment the cooldown began.</return>
		<return name="duration" type="number">The duration of the cooldown in seconds</return>
		<return name="enable" apitype="onenil">1 if the item has a possible cooldown, otherwise 0</return>
	</function>
	<function name="PickupMacro">
		<summary>Simulates picking up a macro from the macro window, placing it on the cursor</summary>
		<paramchoice>
			<param name="macroId" type="number">The macroId of the macro to pick up</param>
			<param name="name" type="string">The name of a macro</param>
		</paramchoice>
	</function>
	<function name="GetExistingSocketInfo">
		<summary>Returns information about the jewel in a given socket for the item in the item socketing interface</summary>
		<param name="index" type="number">The index of the socket</param>
		<return name="name" type="string">The name of the jewel currently in the given socket (nil if no jewel is socketed in this socket)</return>
		<return name="texture" type="string">The texture of the icon of the jewel currently in the given socket (nil if no jewel is socketed in this socket)</return>
		<return name="name" apitype="onenil">1 if the jewel currently in the socket matches the socket's color (nil if no jewel is socketed in this socket)</return>
	</function>
	<function name="KBQuery_IsLoaded">
		<summary>Returns whether or not a knowledge base query was loaded successfully</summary>
		<return name="isLoaded" type="boolean">true is the previous knowledge base query was successful, otherwise false</return>
	</function>
	<function name="GetMinigameType">
		<summary>Gets the minigame type of the active minigame</summary>
		<return name="gameType" type="string">Gets the type of minigame used</return>
	</function>
	<function name="ClearTarget">
		<summary>Clears the player's current target</summary>
	</function>
	<function name="MovieRecording_GetViewportWidth">
		<summary>Queries the current width of the game's viewport</summary>
		<return name="width" type="number">The current width of the World of Warcraft viewport</return>
	</function>
	<function name="FollowUnit">
		<summary>Follows a specified player</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId of the player to follow</param>
			<param name="name" type="string">The name of a player to follow</param>
		</paramchoice>
	</function>
	<function name="ChannelVoiceOn">
		<summary>Enables voice chat in the given channel</summary>
		<param />
	</function>
	<function name="CommentatorSetPlayerIndex" />
	<function name="GetPetitionNameInfo">
		<summary>Gets the name of the player that has signed a given petition slot</summary>
		<param name="index" type="number">The signature slot in the open petition</param>
		<return name="name" type="string">The name of the player that has signed the given slot</return>
	</function>
	<function name="Sound_ChatSystem_GetOutputDriverNameByIndex">
		<summary>Gets the name of the given chat system sound output driver</summary>
		<param name="index" type="number">The desired index</param>
	</function>
	<function name="IsHarmfulSpell">
		<summary>Returns whether or not a given spell is harmful</summary>
		<param name="spell" type="string">The name of the spell to query</param>
		<return name="isHarmful" apitype="onenil">1 if the spell is harmful, otherwise nil</return>
	</function>
	<function name="ClickSendMailItemButton">
		<summary>Causes the item currently being held by the cursor to be placed in the mailbox send item slot</summary>
		<param name="index" type="number">The index of an item slot in the "Send Mail" panel (1-12).  This value defaults to the first available slot.  If an invalid index is specified or the item slots are full, an error message will be printed to the UIErrorsFrame.</param>
		<param name="autoReturn" type="boolean">If true, items picked up from item slots will automatically be returned to the player's bags, otherwise they will be placed on the cursor.</param>
	</function>
	<function name="UnitXPMax">
		<summary>Return the total amount of XP required to the next level.</summary>
		<param name="unit" type="string">The name of the unit to query.</param>
		<return name="playerMaxXP" type="number">The total amount of XP required to the next level.</return>
	</function>
	<function name="DeclineInvite">
		<summary>Declines a pending chat channel invitation</summary>
	</function>
	<function name="SetTradeSkillSubClassFilter">
		<summary>Enables or disables a given tradeskill subclass filter</summary>
		<param name="index" type="number">The index of a return from GetTradeSkillSubClasses()</param>
		<param name="enable" apitype="onenil">1 to enabled, nil to disable</param>
		<param name="exclusive" apitype="onenil">1 to disable all other filters when enabling this one, otherwise nil</param>
		<return name="isVisible" apitype="onenil">Whether items corresponding to the filter are visible (1) or not (nil)</return>
	</function>
	<function name="GetActionText">
		<summary>Gets the label for a given action slot.</summary>
		<param name="slot" type="number">The action slot to query</param>
		<return name="text" type="string">The label for the action slot, or nil</return>
	</function>
	<function name="AcceptResurrect">
		<summary>Accepts a pending resurrection spell</summary>
	</function>
	<function name="UnitCharacterPoints">
		<summary>Gets the number of unused talent points and profession slots for the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit of interest</param>
		<return name="talentPoints" type="number">The number unspent talent points for the unit</return>
		<return name="professionSlots" type="number">The number of available main profession slots for the unit</return>
	</function>
	<function name="AddTradeMoney">
		<summary>Adds the money currently on the cursor to the trade window</summary>
	</function>
	<function name="SetOverrideBindingItem">
		<summary>Sets an override binding to use a specific item</summary>
		<param name="owner" type="table">The frame responsible for setting the override</param>
		<param name="isPriority" type="boolean">Indicates that this is a priority override binding</param>
		<param name="key" type="string">The key to bind to the button (e.g. "CTRL-2")</param>
		<param name="itemName" type="string">The name of the item to use when the binding is triggered</param>
	</function>
	<function name="ComplainChat">
		<summary>Files a complaint about a given chat message</summary>
		<paramchoice>
			<param name="lineID" type="number">The unique lineID of a message in a ChatFrame.</param>
			<param name="name" type="string">The name of a player to complain about</param>
		</paramchoice>
	</function>
	<function name="GetChatWindowInfo">
		<summary>Retrieves information about a specific Chat window</summary>
		<param name="index" type="number">Index of the window you wish you get information on (starts at 1)</param>
		<return name="name" type="string">Name of the Chat window</return>
		<return name="fontSize" type="number">Font size of the text in Chat window</return>
		<return name="r" type="number">The red component of the window's background color [0.0, 1.0]</return>
		<return name="g" type="number">The green component of the window's background color [0.0, 1.0]</return>
		<return name="b" type="number">The blue component of the window's background color [0.0, 1.0]</return>
		<return name="alpha" type="number">The alpha level (opacity) of the window's background [0.0, 1.0]</return>
		<return name="shown" type="number">Returns 1 if the window is shown, 0 if it is hidden</return>
		<return name="locked" type="number">Returns 1 if the window is locked, 0 if it is movable</return>
		<return name="docked" type="number">Returns 1 if the window is docked, 0 if free</return>
	</function>
	<function name="SetActiveVoiceChannel">
		<summary>Sets the currently active voice channel</summary>
		<param name="index" type="number">The index of the channel in the channel display window.  These indices are offset by any headers that are displayed in this window.</param>
	</function>
	<function name="CommentatorAddPlayer" />
	<function name="AddMute">
		<summary>Mutes a player in voice chat</summary>
		<param name="fullname" type="string">The name of the player to be muted</param>
	</function>
	<function name="GetTradeSkillSubClassFilter">
		<summary>Returns whether or not a given tradeskill filter is enabled</summary>
		<param name="index" type="number">The index of a return from GetTradeSkillSubClasses(), or 0 for the "All" filter.</param>
		<return name="enabled" apitype="onenil">1 if the filter is enabled, otherwise nil</return>
	</function>
	<function name="GetItemGem">
		<summary>Gets the name and link for a gem in a specific item socket</summary>
		<paramchoice>
			<param name="name" type="string">The name of an item</param>
			<param name="itemLink" type="string">A valid item link</param>
		</paramchoice>
		<return name="name" type="string">The name of the gem in the socket, or nil</return>
		<return name="link" type="string">The item link for the gem in the socket</return>
	</function>
	<function name="GetVoiceSessionMemberInfoBySessionID">
		<summary>Returns information about a member of a given voice session.</summary>
		<param name="session" type="number">ID of the voice session</param>
		<param name="index" type="number">Index of the voice session member.</param>
		<return name="name" type="string">Name of the player.</return>
		<return name="voiceActive" apitype="onenil">1 if the player has voice active, nil otherwise.</return>
		<return name="sessionActive" apitype="onenil">1 if the players voice is set to this session, nil otherwise.</return>
		<return name="muted" apitype="onenil">1 if you muted that player, nil otherwise.</return>
		<return name="squelched" apitype="onenil">1 if the player was silenced by the channel moderator, nil otherwise.</return>
	</function>
	<function name="CloseItemText">
		<summary>Closes the item text display frame.</summary>
	</function>
	<function name="GetMoney">
		<summary>Return the amount of money the player currently possesses.</summary>
		<return name="money" type="number">Amount of money the player possesses - in copper.</return>
	</function>
	<function name="CommentatorSetCamera" />
	<function name="ClearInspectPlayer">
		<summary>Clears the data for the currently inspected player</summary>
	</function>
	<function name="SortAuctionApplySort">
		<summary>Applies the currently configured sort for the given auction type</summary>
		<param name="type" type="string">The auction listing type</param>
	</function>
	<function name="CheckPetUntrainerDist">
		<summary>Returns whether or not the player is in range of a Pet Trainer</summary>
		<return name="inRange" apitype="onenil">1 if you are in range of a Pet Trainer, otherwise nil.</return>
	</function>
	<function name="SetGuildInfoText">
		<summary>Sets the guild information text.</summary>
		<param name="text" type="string">The guild information text to be set</param>
	</function>
	<function name="GetZonePVPInfo">
		<summary>Returns PVP information about the current zone</summary>
		<return name="pvpType" type="string">The type of PVP zone</return>
		<return name="isSubZonePVP" apitype="onenil">1 if the current zone allows free-for-all PVP</return>
		<return name="factionName" type="string">The name of the faction that controls the zone, if the pvpType was friendly or hostile</return>
	</function>
	<function name="GetTradeTargetItemInfo">
		<summary>Returns information about an item in the trade window</summary>
		<param name="index" type="number">The index in the trade window</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="numItems" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality level of the item</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable by the player, otherwise nil</return>
		<return name="enchantment" type="string">The name of the enchantment being applied to the item, if applicable</return>
	</function>
	<function name="GetLootSlotInfo">
		<summary>Gets the information for a loot slot item</summary>
		<param name="slot" type="number">The index of the loot item</param>
		<return name="texture" type="string">The path of the graphical icon for the item</return>
		<return name="item" type="string">The name of the item</return>
		<return name="quantity" type="number">The quantity of the item in the stack. Quantity for coins is always 0</return>
		<return name="quality" type="number">The quality of the item</return>
		<return name="locked" type="boolean">Whether the item is locked by having an action run on it currently.</return>
	</function>
	<function name="DisableAddOn">
		<summary>Disables an addon by name or index</summary>
		<param name="name" type="string">The name of the addon to disable</param>
		<param name="index" type="number">The index of the addon in the addon listing</param>
	</function>
	<function name="ConfirmBinder">
		<summary>Confirms a new hearthstone location</summary>
	</function>
	<function name="UnitInBattleground">
		<summary>Returns whether or not a unit is in the player's battleground</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="raidNum" type="number">The raid index of the unit in your battleground, or nil.</return>
	</function>
	<function name="GetCVarDefault">
		<summary>Query the default value for a given CVar. Will error if CVar does not exist.</summary>
		<param name="CVar" type="string">CVar to query.</param>
		<return name="value" type="string">Default value of the CVar</return>
	</function>
	<function name="GetNumBankSlots">
		<summary>Returns information about purchased bank bag slots</summary>
		<return name="numSlots" type="number">The number of slots you have purchased</return>
		<return name="isFull" apitype="onenil">A flag indicating that you cannot purchase any more slots</return>
	</function>
	<function name="GetInventoryItemLink">
		<summary>Returns an item link for an inventory item</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<param name="inventoryID" type="number">The inventoryID to query</param>
		<return name="link" type="string">An item link for the given item</return>
	</function>
	<function name="GetQuestLogRewardSpell">
		<summary>Returns information about a quest reward spell</summary>
		<return name="texture" type="string">The path to the spell icon's texture</return>
		<return name="name" type="string">The name of the spell</return>
		<return name="isTradeskillSpell" apitype="onenil">1 if the spell is a tradeskill recipe, otherwise nil</return>
		<return name="idSpellLearned" apitype="onenil">1 if the reward spell will be learnt, otherwise nil</return>
	</function>
	<function name="SaveView">
		<summary>Saves the current camera view to one of the stored camera positions</summary>
		<param name="index" type="number">A camera index between 1 and 6</param>
	</function>
	<function name="PickupBagFromSlot">
		<summary>Picks up a bag from an inventory slot, or bank bag slot and holds it on the cursor</summary>
		<param name="inventoryID" type="number">The inventoryID of a bag slot</param>
	</function>
	<function name="AbandonSkill">
		<summary>Confirms abandoning a skill</summary>
		<param name="index" type="number">The index of the skill to abandon</param>
	</function>
	<function name="gcinfo">
		<summary>Gets the total addon memory usage in kilobytes.</summary>
		<return name="count" type="number">Addon Memory usage in kilobytes.</return>
	</function>
	<function name="MovieRecording_DataRate">
		<summary>Gets the data rate required per second for recording video.</summary>
	</function>
	<function name="GetAuctionHouseDepositRate">
		<summary>Gets the current auction house deposit rate</summary>
		<return name="rate" type="number">The current auction house deposit rate</return>
	</function>
	<function name="IsModifierKeyDown">
		<summary>Returns whether or not a modifier key is held down</summary>
		<return name="isDown" apitype="onenil">1 if any modifier key is held down, otherwise nil</return>
	</function>
	<function name="GetArenaTeamRosterShowOffline">
		<summary>Returns whether or not the "Show Offline Members" filter for arena teams is enabled</summary>
		<return name="showOffline" apitype="onenil">1 if the show offline filter for arena teams is enabled, otherwise nil</return>
	</function>
	<function name="GetTrainerServiceNumAbilityReq">
		<summary>Gets the number of ability requirements to learn a given spell.</summary>
		<param name="id" type="number">The index in the trainer window</param>
		<return name="numRequirements" type="number">The number of ability requirements that much be fulfilled in order to learn the given skill.  The details about each specific requirement can be queried using GetTrainerServiceAbilityReq.  An ability requirement is a pre-requisite spell that must be known in order to learn a future rank, such as Arcane Explosion(Rank 2)  which requires Arcane Explosion(Rank 1).</return>
	</function>
	<function name="CommentatorGetCurrentMapID" />
	<function name="GuildControlSetRankFlag">
		<summary>Sets the current rank permission to enabled or disabled.</summary>
		<param name="index" type="number">The index for the flag you wish to change.</param>
		<param name="enabled" type="boolean">Enables or disables the flag.</param>
	</function>
	<function name="GetDeathReleasePosition">
		<summary>Gets the location of the graveyard where your spirit will appear when it is released from your body</summary>
		<return name="x" type="number">X position on the map between 0 and 1</return>
		<return name="y" type="number">Y position on the map between 0 and 1</return>
	</function>
	<function name="GetNumGuildBankTransactions">
		<summary>Gets the number of transactions for the specified guild bank tab.</summary>
		<param name="tab" type="number">The index of the guild bank tab to query.</param>
		<return name="numTransactions" type="number">The number of transactions that happened on the selected guild bank tab.</return>
	</function>
	<function name="PickupInventoryItem">
		<summary>Picks an inventory item up and holds it on the cursor</summary>
		<param name="id" type="number">The id of an inventory slot</param>
	</function>
	<function name="GetQuestLogRewardHonor">
		<summary>Gets the amount of honor rewarded for completing the currently selected quest in the quest log</summary>
		<return name="honor" type="number">The amount of honor rewarded for completing the quest</return>
	</function>
	<function name="GetNumModifiedClickActions">
		<summary>Gets the number of registered modified click actions.</summary>
		<return name="num" type="number">The number of modified click actions. This function may return a nonsense value when there are no modified click actions loaded.</return>
	</function>
	<function name="SetArenaTeamRosterShowOffline">
		<summary>Enables or disables the showing of offline arena team members</summary>
		<param name="enable" type="boolean">Any true value other than 0 will enable showing offline members, 0, false or nil will disable.</param>
	</function>
	<function name="UnitDamage">
		<summary>Unit Damage returns information about your current damage stats.</summary>
		<param name="unit" type="string">UnitID to get information for.</param>
		<return name="minDamage" type="number">The unit's minimum melee damage</return>
		<return name="maxDamage" type="number">The unit's maximum melee damage</return>
		<return name="minOffHandDamage" type="number">The unit's minimum offhand melee damage</return>
		<return name="maxOffHandDamage" type="number">The unit's maximum offhand melee damage</return>
		<return name="physicalBonusPos" type="number">Positive physical bonus (should be &gt;= 0)</return>
		<return name="physicalBonusNeg" type="number">Negative physical bonus (should be &lt;= 0)</return>
		<return name="percent" type="number">Percentage modifier. Usually 1; 0.9 for warriors in defensive stance</return>
	</function>
	<function name="CombatLogResetFilter">
		<summary>Clears the combat log filter</summary>
	</function>
	<function name="UnitInParty">
		<summary>Returns whether or not a given unit is in the player's party.</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query for party membership</param>
		<return name="inParty" apitype="onenil">1 if the unit is in the player's party, otherwise nil.</return>
	</function>
	<function name="PickupAction">
		<summary>Picks up an action bar slot and holds it on the cursor</summary>
		<param name="slot" type="number">An actionbar slot</param>
	</function>
	<function name="GetBattlefieldInstanceExpiration">
		<summary>When a battleground match is over, returns the amount of time remaining before the instance is closed and all players are returned to the locations from which they entered it.</summary>
		<return name="timeLeft" type="number">If in a battleground after a finished match, the amount of time remaining (in milliseconds) before the instance shuts down; otherwise 0.</return>
	</function>
	<function name="ChannelBan">
		<summary>Bans a player from a given chat channel</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="fullname" type="string">The name of the player to be banned</param>
	</function>
	<function name="CommentatorGetMode" />
	<function name="ChannelMute">
		<summary>Turns off the specified player's ability to speak in the channel</summary>
		<param name="channel" type="string">The channel on which to mute the selected player</param>
		<param name="player" type="string">The name of the player to mute on the selected channel</param>
	</function>
	<function name="DelMute">
		<summary>Removes a voice mute for a given player</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId to be un-muted</param>
			<param name="fullname" type="string">The full name of a player to be muted</param>
		</paramchoice>
	</function>
	<function name="VoiceChat_IsPlayingLoopbackSound">
		<summary>Returns whether or not the loopsound sound is currently being played</summary>
		<param name="isPlaying" type="number">1 if the loopback sound is currently being played, otherwise nil</param>
	</function>
	<function name="PitchUpStop">
		<summary>Stops pitching the camera after PitchUpStart() has been called.</summary>
	</function>
	<function name="CombatLogSetRetentionTime">
		<summary>Sets the amount of time combat log entries will be stored</summary>
		<param name="seconds" type="number">The desired time</param>
	</function>
	<function name="VoiceSelectOutputDevice">
		<summary>Sets the voice chat output device.</summary>
		<param name="deviceName" type="string">The name of the device, as returned from VoiceEnumerateOutputDevices(index)</param>
	</function>
	<function name="GetSendMailItemLink">
		<summary>Returns an item link for an item in the send mail window.</summary>
		<param name="slot" type="number">The item slot in the send mail window.  If not specified, this value defaults to 1.</param>
		<return name="link" type="string">The item link for the given send mail item</return>
	</function>
	<function name="CanJoinBattlefieldAsGroup">
		<summary>Returns whether or not the currently displayed battlefield supports joining as a group</summary>
		<return name="canGroupJoin" apitype="onenil">1 if the currently displayed battlefield supports joining as a group</return>
	</function>
	<function name="ListChannelByName">
		<summary>Prints the members of a channel to ChatFrame1.</summary>
		<param name="channelName" type="string">The exact name of a channel to list</param>
	</function>
	<function name="GetBagName">
		<summary>Gets the name of a bag</summary>
		<param name="index" type="number">A bag index</param>
		<return name="name" type="string">The name of the bag, or nil</return>
	</function>
	<function name="SelectQuestLogEntry">
		<summary>Selects a quest from the quest log as the currently active quest to be shown in the details panel.</summary>
		<param name="index" type="number">The index of the quest to select.</param>
	</function>
	<function name="ClearLookingForGroup">
		<summary>Clears the player from any LFG/LFM listings or requests</summary>
	</function>
	<function name="BankButtonIDToInvSlotID">
		<summary>Returns an inventory slot Id mapped from a bank location</summary>
		<param name="buttonID" type="number">A button Id from the bank interface</param>
		<param name="isBag" apitype="onenil" optional="true">Indicates if the given slot is a bag</param>
		<return name="inventoryId" type="number">An inventory slot Id that can be used in the inventory functions.</return>
	</function>
	<function name="MovieRecording_IsRecording">
		<summary>Returns whether or not the client is currently recording a movie</summary>
		<return name="isRecording" apitype="onenil">1 if the client is currently recording, otherwise nil</return>
	</function>
	<function name="ShowBuybackSellCursor">
		<summary>Shows the buyback/sell cursor</summary>
		<param name="index" type="number">A slotId from the Merchant Buyback window</param>
	</function>
	<function name="ConfirmSummon">
		<summary>Accepts a summon spell</summary>
	</function>
	<function name="GetNumBattlefieldScores">
		<summary>Gets the number of scores available in the current battlefield</summary>
		<return name="numScores" type="number">Number of scores in the current battlefield, or 0 if not current in a battlefield,</return>
	</function>
	<function name="GetPetExperience">
		<summary>Gets the pet's current experience, and the amount required to level</summary>
		<return name="currXP" type="number">The current experience value for the pet</return>
		<return name="nextXP" type="number">The experience required to reach the next level</return>
	</function>
	<function name="GetTradeSkillItemNameFilter">
		<summary>Gets the text of the tradeskill item name filter</summary>
		<return name="text" type="string">The text of the tradeskill item name filter</return>
	</function>
	<function name="GetInboxItemLink">
		<summary>Gets the item link to the specified attachment.</summary>
		<param name="messageIndex" type="number">The index of the message in your mailbox.</param>
		<param name="attachIndex" type="number">The index of the attachment.</param>
		<return name="itemlink" type="string">The Itemlink to the attachment in question.</return>
	</function>
	<function name="SetBindingClick">
		<summary>Set a key binding directly to a Button object</summary>
		<param name="KEY" type="string">The key combination to bind</param>
		<param name="buttonName" type="string">The Button object to which to bind the key combination to</param>
		<param name="mouseButton" type="string" optional="true">The mousebutton to use as a trigger</param>
	</function>
	<function name="AddChatWindowChannel">
		<summary>Maps a channel in a specific chat frame to a numeric index.</summary>
		<param name="index" type="number">The index of a chat frame (1-7)</param>
		<param name="channel" type="number">The name of a chat channel</param>
		<return name="zoneChannel" type="number">0 for non-zone channels, otherwise a numeric index specific to that channel</return>
	</function>
	<function name="Sound_GameSystem_GetNumOutputDrivers">
		<summary>Gets the number of game sound output drivers</summary>
	</function>
	<function name="SetChatWindowColor">
		<summary>Sets the value of the chat window color in chat-cache.txt</summary>
		<param name="index" type="number">The index of the chat frame</param>
		<param name="r" type="number">The red value of the color (0.0 - 1.0)</param>
		<param name="g" type="number">The green value of the color (0.0 - 1.0)</param>
		<param name="b" type="number">The blue value of the color (0.0 - 1.0)</param>
	</function>
	<function name="ClickPetitionButton" />
	<function name="GetQuestLogLeaderBoard">
		<summary>Returns information about tracked quest objectives</summary>
		<param name="objective" type="number">The index of the objective to query</param>
		<param name="questIndex" type="number" optional="true">The index of the quest in the quest log.  If this isn't supplied, it defaults to the currently selected quest log entry.</param>
		<return name="text" type="string">The text of the objective</return>
		<return name="type" type="string">The type of objective</return>
		<return name="finished" apitype="onenil">1 if the objective is complete, otherwise nil</return>
	</function>
	<function name="GetSelectedDisplayChannel">
		<summary>Gets the channelID of the selected channel in the "Chat" interface</summary>
		<return name="channelID" type="number">The channelID of the channel selected in the "Chat" tab of the "Social" panel</return>
	</function>
	<function name="CanSendAuctionQuery">
		<summary>Returns whether or not the player can perform a given auction house query</summary>
		<param name="list" type="string">The type of auction listing</param>
		<return name="canQuery" apitype="onenil">1 if the player can submit an auction query, otherwise nil</return>
		<return name="canMassQuery" apitype="onenil">1 if the player can submit a mass auction query, otherwise nil.</return>
	</function>
	<function name="UninviteUnit">
		<summary>Removes the specified unit from the current group.</summary>
		<param name="unit" type="string">The name of the unit to un-invite.</param>
	</function>
	<function name="ClearChannelWatch" />
	<function name="GuildSetMOTD">
		<summary>Sets the guild message of the day.</summary>
		<param name="message" type="string">The message to set as the guild MOTD</param>
	</function>
	<function name="ResetInstances">
		<summary>Resets all non-saved instances</summary>
	</function>
	<function name="Sound_GameSystem_RestartSoundSystem">
		<summary>Restarts the game's sound systems</summary>
	</function>
	<function name="ClearLFGAutojoin">
		<summary>Clears the Autojoin functionality in the LFG tool</summary>
	</function>
	<function name="IsShiftKeyDown">
		<summary>Returns whether or not a Shift key on the keyboard is held down.</summary>
		<return name="isDown" apitype="onenil">1 if a Shift key on the keyboard is currently held down</return>
	</function>
	<function name="UnitReaction">
		<summary>Gets the reaction of one unit with regards to another as a number</summary>
		<param name="unit" type="string" apitype="unitid">The source unitid</param>
		<param name="otherUnit" type="string" apitype="unitid">The destination unitid</param>
		<return name="reaction" type="number">The reaction of the source unit with regards to the destination unit.  This reaction corresponds directly to faction level.</return>
	</function>
	<function name="CanSignPetition">
		<summary>Returns whether or not the player can sign the currently offered petition</summary>
		<return name="canSign" apitype="onenil">1 if the player can sign the currently offered petition, otherwise nil</return>
	</function>
	<function name="GetTrainerSkillLines">
		<summary>Gets the spell schools available at a given trainer</summary>
		<return name="..." type="string">A list of strings containing the names of the available trainer skill lines.  These are the "schools" that correspond to spellbook tabs, such as "Fire", "Arcane" and "Frost".</return>
	</function>
	<function name="UnitIsDead">
		<summary>Returns whether or not the given unit is dead</summary>
		<param name="unit" type="string" apitype="unitid">A unitId to query</param>
		<return name="isDead" apitype="onenil">1 if the unit is dead, otherwise nil</return>
	</function>
	<function name="GetExpertisePercent">
		<summary>Gets the reduced chance to be dodged or parried as a result of the expertise rating</summary>
		<return name="expertisePerc" type="number">The reduced chance to be dodged or parried granted by the current level of expertise rating</return>
	</function>
	<function name="Sound_GameSystem_GetNumInputDrivers">
		<summary>Gets the number of game sound input drivers</summary>
		<param name="index" type="number">The desired index</param>
	</function>
	<function name="GetEventCPUUsage">
		<summary>Returns information about the CPU usage of events</summary>
		<return name="timeSpent" type="number">The total amount of time spent while processing events, in seconds. If CPU profiling is disabled, this value will be 0.</return>
		<return name="numEvents" type="number">The number of events that have been fired this session</return>
	</function>
	<function name="SetChannelOwner">
		<summary>Gives channel ownership to another player.</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="newowner" type="string">The name of the player to give ownership</param>
	</function>
	<function name="GetMinimapZoneText">
		<summary>Gets the zone text for use on the Minimap.</summary>
		<return name="zoneText" type="string">The name of the area the player is current in.</return>
	</function>
	<function name="ExpandTrainerSkillLine">
		<summary>Expands a skill line in the trainer window.</summary>
		<param name="index" type="number">The index of the line to expand</param>
	</function>
	<function name="GetTargetTradeMoney">
		<summary>Gets the amount of money the target has placed in the trade window.</summary>
		<return name="money" type="number">The amount of money the target has placed in the trade window, in copper</return>
	</function>
	<function name="MovieRecording_GetAspectRatio">
		<summary>Gets the aspect ratio used in any movie recordings</summary>
		<return name="ratio" type="number">The aspect ratio of any resulting movie recordings.  This is calculated by dividing the height of the resulting video by the width.</return>
	</function>
	<function name="ResetView">
		<summary>Resets the given viewmode and switches to that viewmode.</summary>
		<param name="viewModeIndex" type="number">view mode index to reset to default. (2-5)</param>
	</function>
	<function name="IsSelectedSpell">
		<summary>Returns whether or not a specific spell is currently selected in the spellbook</summary>
		<param name="id" type="number">The index of a spell in the spellbook</param>
		<param name="bookType" type="string">The spellbook type</param>
		<return name="isSelected" apitype="onenil">1 if the given spell is currently selected, otherwise nil</return>
	</function>
	<function name="GetNumVoiceSessions">
		<summary>Gets the number of voice sessions the player is in</summary>
		<return name="count" type="number">The number of voice sessions</return>
	</function>
	<function name="CanViewOfficerNote">
		<summary>Returns whether or not the player can view officer notes</summary>
		<return name="canView" apitype="onenil">1 if the player can view officer notes, otherwise nil</return>
	</function>
	<function name="GetRefreshRates">
		<summary>Returns a list of all available refresh rates for the current system.</summary>
		<return name="..." type="number">A list of all available refresh rates.</return>
	</function>
	<function name="GetTalentPrereqs">
		<summary>Gets the prerequisites for a given talent.</summary>
		<param name="tabIndex" type="number">The index of the chosen tab</param>
		<param name="talentIndex" type="number">The index of the talent to query</param>
		<return name="tier" type="number">The tier of the required talent</return>
		<return name="column" type="number">The column of the required talent</return>
		<return name="isLearnable" apitype="onenil">1 if the talent is currently learnable, otherwise nil</return>
	</function>
	<function name="MoveViewDownStart" />
	<function name="DisplayChannelVoiceOff">
		<summary>Disables voice chat in a given channel</summary>
		<param name="displayIndex" type="number">The index of a channel in the chat display window.  These indices include the headers that are displayed in this window.</param>
	</function>
	<function name="DeclineQuest">
		<summary>Declines a quest.</summary>
	</function>
	<function name="GetTradeskillRepeatCount">
		<summary>Gets the number of times the current tradeskill recipe will repeat</summary>
		<return name="repeatCount" type="number">The amount of times the current recipe will be repeated until finished.  The start value of this is set when DoTradeSkill() is called, and is decremented each time a new item is finished.</return>
	</function>
	<function name="MusicPlayer_BackTrack">
		<summary>Goes back a track in iTunes</summary>
	</function>
	<function name="GetTotemTimeLeft">
		<summary>Gets the number of seconds left for the given totem (or 0 if no totem)</summary>
		<param name="slot" type="number">The element of the totem you want to query</param>
	</function>
	<function name="UnitCastingInfo">
		<summary>Returns information about the spell a unit is casting.</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="name" type="string">The name of the spell being cast</return>
		<return name="nameSubtext" type="string">The rank of the spell being cast, or other sub-text</return>
		<return name="text" type="string">The text to be displayed</return>
		<return name="texture" type="string">The path to the spell icon texture</return>
		<return name="startTime" type="number">The time the cast was started, in millisecond precision</return>
		<return name="endTime" type="number">The time the cast will be finished, in millisecond precision</return>
		<return name="isTradeSkill" apitype="onenil">1 if the spell being cast is a tradeskill, otherwise nil.</return>
	</function>
	<function name="GetCoinText">
		<summary>Return a localized string describing the amount.</summary>
		<param name="amount" type="number">Amount of money in copper</param>
		<param name="separator" type="string">Character to use as separator (',' is used if nil)</param>
		<return name="coin_text" type="string">Text description of the amount using localized version of 'Gold', 'Silver' and 'Copper'</return>
	</function>
	<function name="CanComplainInboxItem">
		<summary>Query an inbox mail item for complain status. This determines if you can report this mail as Spam. Returns 1 if you can, nil otherwise.  This function only works at the mailbox, and will return nil for anyone on your friends list</summary>
		<param name="mailID" type="number">The index of the message in the mailbox</param>
		<return name="complain" apitype="onenil">1 if the inbox item can be complained about, otherwise nil</return>
	</function>
	<function name="SetOverrideBindingSpell">
		<summary>Set an override binding to a specific spell</summary>
		<param name="owner" type="table">The frame responsible for setting the override</param>
		<param name="isPriority" type="boolean">Indicates that this is a priority override binding</param>
		<param name="key" type="string">The key to bind to the command (e.g. "CTRL-2")</param>
		<param name="spellname" type="string">The spell to cast or nil to remove the override binding</param>
	</function>
	<function name="GuildRosterSetPublicNote">
		<summary>Sets the public note of a guild member</summary>
		<param name="index" type="number">The position the member is on the guild roster</param>
		<param name="note" type="string">Text to be set as the public note of the index</param>
	</function>
	<function name="MoveViewInStart" />
	<function name="PutItemInBackpack">
		<summary>Puts the currently held item into the first open slot in the player's backpack.</summary>
	</function>
	<function name="CloseArenaTeamRoster">
		<summary>Closes the Arena Team Roster frame</summary>
	</function>
	<function name="TurnLeftStop" />
	<function name="SetOverrideBinding">
		<summary>Set an override binding to the given command.</summary>
		<param name="owner" type="table">The frame responsible for setting the override</param>
		<param name="isPriority" type="boolean">Indicates that this is a priority override binding</param>
		<param name="key" type="string">The key to bind to the command (e.g. "CTRL-2")</param>
		<param name="command" type="string">The binding command to execute or nil to remove the override binding.</param>
	</function>
	<function name="GetQuestLogItemLink">
		<summary>Gets the item link of a specific item in the quest log reward or progress frame.</summary>
		<param name="type" type="string">The type of item on the questlog frame.</param>
	</function>
	<function name="NotWhileDeadError">
		<summary>Fires a "UI_ERROR_MESSAGE" event, with the argument ERR_PLAYER_DEAD</summary>
	</function>
	<function name="GetPVPLifetimeStats">
		<summary>Returns lifetime honorable kills, and the highest PvP rank the player has attained.</summary>
		<return name="hk" type="number">The number of honorable kills the player has achieved</return>
		<return name="highestRank" type="number">The highest PvP rank the player has achieved</return>
	</function>
	<function name="CameraZoomOut">
		<summary>Zooms the camera out.</summary>
		<param name="distance" type="number">The distance to zoom out</param>
	</function>
	<function name="ResetChatColors">
		<summary>Resets the colors of the chat channels back to default.</summary>
	</function>
	<function name="ChannelUnSilenceAll">
		<summary>Unsilences a player for chat and voice on a given channel</summary>
		<paramchoice>
			<param name="channelName" type="string">The name of the channel</param>
			<param name="channelIndex" type="number">The index of the channel</param>
		</paramchoice>
	</function>
	<function name="GetSelectedFriend">
		<summary>Gets the friend index of the friend you have selected</summary>
		<return name="index" type="number">The index of your selected friend, or 0 if no friend is selected</return>
	</function>
	<function name="IsLinuxClient">
		<summary>Returns whether or not the game client is running on Linux</summary>
		<return name="IsLinux" apitype="onenil">1 if the client is a Linux client, otherwise nil</return>
	</function>
	<function name="ReportSuggestion" />
	<function name="GuildControlAddRank">
		<summary>Adds a new rank to the player's guild.</summary>
		<param name="name" type="string">The name of the new rank</param>
	</function>
	<function name="ArenaTeamInviteByName">
		<summary>Invites a player to one of the player's arena teams</summary>
		<param name="team" type="number">The index of the arena team</param>
		<param name="name" type="string">The name of the player to invite</param>
	</function>
	<function name="CommentatorGetCamera" />
	<function name="SetSelectedFriend">
		<summary>Sets the selection in the Friends list</summary>
		<param name="index" type="number">The index of a friend in the friend's listing</param>
	</function>
	<function name="DeclineLevelGrant">
		<summary>Declines a level that has been granted to you</summary>
	</function>
	<function name="GetRewardText">
		<summary>Gets the reward text of the quest at the quest completion frame</summary>
		<return name="text" type="string">The reward text of the quest that is waiting to be completed, or the empty string</return>
	</function>
	<function name="IsIgnored">
		<summary>Returns whether or not you are ignoring a specific unit.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="isIgnored" apitype="onenil">1 if the given player is being ignored, otherwise nil</return>
	</function>
	<function name="GetTradeSkillNumMade">
		<summary>Gets the number of items possibly created when crafting a tradeskill recipe</summary>
		<param name="index" type="number">The index of a tradeskill recipe in the trade skill window</param>
		<return name="minMade" type="number">The minimum number of items created when crafting</return>
		<return name="maxMade" type="number">The maximum number of items created when crafting</return>
	</function>
	<function name="UnitRangedAttack">
		<summary>Returns a unit's ranged weapon skill</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query.</param>
		<return name="rangedAttackBase" type="number">The base ranged weapon skill</return>
		<return name="rangedAttackMod" type="number">Any modifiers to the base ranged weapon skill</return>
	</function>
	<function name="GetGossipAvailableQuests">
		<summary>Gets a list of all available quests of the active gossip frame.</summary>
		<return name="title" type="string">The name of the quest.</return>
		<return name="level" type="number">The level of the quest.</return>
		<return name="isTrivial" apitype="onenil">1 if the quest is trivial (low level), nil otherwise.</return>
		<return name="...">A repeating list of all quests on the current gossip frame containing title, level, isTrivial.</return>
	</function>
	<function name="GetRunningMacro">
		<summary>Gets the index of the currently running macro.</summary>
		<return name="macroIdx" type="number">The index of the currently running macro, or nil</return>
	</function>
	<function name="BuyTrainerService">
		<summary>Purchases a service available at a trainer</summary>
		<param name="index" type="number">The index of a service available at a trainer</param>
	</function>
	<function name="HasInspectHonorData">
		<summary>Returns whether or not the client has honor data for the currently inspected player</summary>
		<return name="hasHonorData" apitype="onenil">1 if the client has honor data for the currently inspected player, otherwise nil</return>
	</function>
	<function name="GetItemIcon">
		<summary>Gets the texture path for the given item's icon</summary>
		<paramchoice>
			<param name="itemID" type="number">The item's ID</param>
			<param name="&quot;itemName&quot;" type="string">The item's name</param>
			<param name="&quot;itemLink&quot;" type="string">The item's link</param>
		</paramchoice>
	</function>
	<function name="GetSelectedStablePet">
		<summary>Gets the index of the currently selected stable pet</summary>
		<return name="selectedPet" type="number">The index of the currently selected stable pet</return>
	</function>
	<function name="GetBattlefieldInstanceRunTime">
		<summary>Returns how long the current battleground instance has been running in milliseconds</summary>
		<return name="time" type="number">The number of milliseconds since the currently battleground instance started.  This number can be converted to seconds by dividing by 1000, or converted to a text string by using SecondsToTime(GetBattlefieldInstanceRunTime()/1000).</return>
	</function>
	<function name="IsPartyLeader">
		<summary>Returns whether or not a unit is the current party leader</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isLeader" apitype="onenil">1 if the unit is the party leader, otherwise nil</return>
	</function>
	<function name="GetRaidTargetIndex">
		<summary>Gets the raid target on the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="raidTargetIndex" type="number">The index of the current raid target</return>
	</function>
	<function name="GetCurrentKeyBoardFocus">
		<summary>Gets the frame that currently has the keyboard focus</summary>
		<return name="frame" type="table">The frame that current has the keyboard focus or nil.  This is typically an EditBox frame, but could be any frame.</return>
	</function>
	<function name="GetNumStableSlots">
		<summary>Gets the number of stable slots the player has purchased.</summary>
		<return name="numSlots" type="number">The number of stable slots the player currently owns.</return>
	</function>
	<function name="GetNumTalents">
		<summary>Gets the number of talent spell options in a given tab.</summary>
		<param name="tabIndex" type="number">The index of the talent tab to query</param>
		<return name="numTalents" type="number">The number of talent spells in the given tab.  This function is used internally by the default interface to draw the talent trees.</return>
	</function>
	<function name="GetQuestLogSelection">
		<summary>Gets the index of the currently selected quest in the quest log.</summary>
		<return name="questID" type="number">The index of the quest that is currently selected</return>
	</function>
	<function name="UnitIsPVPSanctuary">
		<summary>Returns 1 if the unit in question is in a PVP sanctuary, nil otherwise.</summary>
		<param name="unit" type="string">The name of the unit to query.</param>
		<return name="state" apitype="onenil">1 if the unit is in a PVP Sanctuary, nil otherwise.</return>
	</function>
	<function name="CanEditOfficerNote">
		<summary>Returns whether or not the player can edit officer notes</summary>
		<return name="canEdit" apitype="onenil">1 if the player can edit officer notes, otherwise nil</return>
	</function>
	<function name="GetTrainerServiceStepIncrease">
		<param name="index" type="number">The index of the trainer service</param>
		<return name="increaseText" type="string">A string indicating how much skill increase will be gained by learning the skill.</return>
	</function>
	<function name="GetAuctionSort">
		<summary>Returns </summary>
		<param name="type" type="string">The type of auction listing</param>
		<param name="index" type="number">The index of an auction sort entry</param>
		<return name="existingSortColumn" type="string">The column to sort by</return>
		<return name="existingSortReverse" apitype="onenil">1 if the sort on the existing column is reversed, otherwise nil</return>
	</function>
	<function name="GMSurveyCommentSubmit">
		<summary>Submits a comment to the current GM survey</summary>
		<param name="comment" type="string">The comment made on the GM Survey</param>
	</function>
	<function name="CheckInbox">
		<summary>Requests the player's mailbox information from the server</summary>
	</function>
	<function name="IsArenaTeamCaptain">
		<summary>Returns whether or not the player is the team captain for a given arena team</summary>
		<param name="index" type="number">The index of an arena team</param>
		<return name="isCaptain" apitype="onenil">1 if the player is the captain of the given arena team or an invalid index is supplied, otherwise nil.</return>
	</function>
	<function name="GetInventoryItemsForSlot">
		<summary>Returns a list of items that can be equipped in a given inventory slot.</summary>
		<param name="slotId" type="number">An inventory slot id, as obtained from GetInventorySlotInfo()</param>
		<return name="availableItems" type="table">A table keyed by item location masks, with the item number as the value.</return>
	</function>
	<function name="DelIgnore">
		<summary>Removes a player from your ignore list</summary>
		<param name="name" type="string">The name of the player you wish to remove from your ignore list</param>
	</function>
	<function name="GuildLeave">
		<summary>Causes the player to leave their current guild without confirmation</summary>
	</function>
	<function name="GetChatTypeIndex">
		<summary>Converts a chat type string to a numeric chat type index.</summary>
		<param name="type" type="string">A string indicating the chat type to be converted.  This is the key in the table ChatTypeInfo.</param>
		<return name="index" type="number">The type index of the given chat type</return>
	</function>
	<function name="ExpandSkillHeader">
		<summary>Expands a skill header in the Skills window</summary>
		<param name="index" type="number">The index of the skill header to expand.</param>
	</function>
	<function name="PromoteToLeader">
		<summary>Promotes a player to party/raid leader</summary>
		<param name="name" type="string">The name of the player to promote</param>
	</function>
	<function name="MovieRecording_GetProgress">
		<summary>Returns information about the movie that is currently being compressed.</summary>
		<return name="recovering" type="boolean">If a previous compression was interrupted (such as WoW being forcefully closed or crashing) this value will be true, indicating that recovery is being attempted on the file.</return>
		<return name="progress" type="number">The progress of the compression process, as a number between 0 and 1.  This number can be converted to a percentage using math.floor(progress * 100).</return>
	</function>
	<function name="UnitIsUnit">
		<summary>Returns whether or not two unitIds refer to the same actual character.</summary>
		<param name="unit" type="string" apitype="unitid">The first unitId to compare</param>
		<param name="otherUnit" type="string" apitype="unitid">The second unitId to compare</param>
		<return name="isSame" apitype="onenil">Returns 1 if the units refer to the same character, otherwise nil</return>
	</function>
	<function name="CursorHasSpell">
		<summary>Returns whether or not the cursor currently holds a spell.</summary>
		<return name="hasSpell" apitype="onenil">Indicates if there is currently a spell attached to the cursor.</return>
	</function>
	<function name="GetGMTicketCategories">
		<summary>Returns a list of available GM ticket categories</summary>
		<return name="..." type="string">A variable number of categories</return>
	</function>
	<function name="UseSoulstone">
		<summary>This function causes you to use a Warlock's Soulstone or a Shaman's Resurrection spell when you die</summary>
	</function>
	<function name="CombatLogGetNumEntries">
		<summary>Gets the number of available combat log events</summary>
		<param name="ignoreFilter" type="boolean">Uses the entire unfiltered combat log history if true</param>
	</function>
	<function name="MoveBackwardStop" />
	<function name="GetMouseFocus">
		<summary>Gets the frame that is currently under the mouse, and has mouse input enabled.</summary>
		<return name="frame" type="table">The frame that currently has the mouse focus</return>
	</function>
	<function name="PetRename">
		<summary>Renames the currently controlled pet</summary>
		<param name="name" type="string">The name to give the pet</param>
	</function>
	<function name="GetFrameCPUUsage">
		<summary>Gets CPU time used and number of function calls for the frame and it's children depending on the includeChildren setting. includeChildren defaults to 'true'.</summary>
		<param name="frame" type="table">Frame to query.</param>
		<param name="includeChildren" type="boolean">Include children of this frame in query.</param>
		<return name="time" type="number">CPU time in milliseconds used.</return>
		<return name="calls" type="number">Number of function calls.</return>
	</function>
	<function name="GetFramesRegisteredForEvent">
		<summary>Returns all frames registered for a given event</summary>
		<param name="event" type="string">An event name</param>
		<return name="..." type="table">A list of all frames registered for the given event</return>
	</function>
	<function name="GetBattlefieldTeamInfo">
		<summary>Returns info about teams and their ratings in a rated arena match.</summary>
		<param name="index" type="number">Team Index</param>
		<return name="teamName" type="string">Team Name</return>
		<return name="teamRating" type="number">Rating the team started this match with.</return>
		<return name="newTeamRating" type="number">Rating for the team after this match.</return>
	</function>
	<function name="GetMacroItem">
		<summary>Returns information about a macro, if it's next action would be to use an item</summary>
		<paramchoice>
			<param name="macroIndex" type="number">The index of a macro to query</param>
			<param name="macroName" type="string">The name of a macro to query</param>
		</paramchoice>
		<return name="name" type="string">The name of the item that will be used by the given macro</return>
		<return name="link" type="string">An item link for the given item</return>
	</function>
	<function name="CreateWorldMapArrowFrame" />
	<function name="RemoveQuestWatch">
		<summary>Stops tracking objectives for a quest in the quest log</summary>
		<param name="questIndex" type="number">The index of a quest in the quest log</param>
	</function>
	<function name="GetTrainerServiceCost">
		<summary>Gets the cost of a given trainer service</summary>
		<param name="index" type="number">The index of a trainer service</param>
		<return name="moneyCost" type="number">The cost of the service, in copper</return>
		<return name="talentCost" type="number">The cost of the service, in talent points</return>
		<return name="skillCost" type="number">The cost of the service, of the available profession limit</return>
	</function>
	<function name="QueryGuildBankLog">
		<summary>Queries the server for a guild bank log for a specific tab</summary>
		<param name="tab" type="number">The index of a guild tab</param>
	</function>
	<function name="GetNumChannelMembers">
		<summary>Gets the number of members in a specific chat channel.</summary>
		<param name="id" type="number">Chat Channel ID</param>
		<return name="numMembers" type="number">Number of players in the queried chat channel.</return>
	</function>
	<function name="SetMacroItem">
		<summary>Sets a macro to use a specific item and target for visual updates</summary>
		<paramchoice>
			<param name="macroIndex" type="number">The index of a macro</param>
			<param name="macroName" type="string">The name of a macro</param>
		</paramchoice>
	</function>
	<function name="GetResSicknessDuration">
		<summary>Gets the duration of resurrection sickness at the player's current level</summary>
		<return name="resSicknessTime" type="string">The duration of resurrection sickness at the player's current level.  This function returns nil for players under level 10, since they cannot get resurrection sickness.</return>
	</function>
	<function name="GetCurrentBindingSet">
		<summary>Gets the type of key bindings in use</summary>
		<return name="bindingSet" type="number">The binding set currently in use</return>
	</function>
	<function name="GetExpertise">
		<summary>Gets the amount of expertise the player currently has</summary>
		<return name="expertise" type="number">The amount of expertise rating the player currently has</return>
	</function>
	<function name="GuildRoster">
		<summary>Initiates a guild roster update</summary>
	</function>
	<function name="GetQuestItemInfo">
		<summary>Returns basic information about the quest items for the quest currently shown in the gossip window.</summary>
		<param name="itemType" type="string">Type of quest item to filter on.</param>
		<param name="itemNum" type="number">The item number to get info on</param>
		<return name="name" type="string">The name of the quest item</return>
		<return name="texture" type="string">The path to the quest item's texture</return>
		<return name="numItems" type="number">How many of the quest item</return>
		<return name="quality" type="number">The quality of the quest item</return>
		<return name="isUsable" type="boolean">If the quest item is usable by the current player</return>
	</function>
	<function name="GetSocketItemInfo">
		<summary>Returns information about the item currently open in the socket UI.</summary>
		<return name="name" type="string">The name of the item.</return>
		<return name="icon" type="string">The icon of the item.</return>
		<return name="quality" type="number">The item's quality</return>
	</function>
	<function name="VoiceChat_IsRecordingLoopbackSound">
		<summary>Returns whether the player is recording a voice sample</summary>
		<return name="isRecording" type="number">1 if the player is recording a voice sample, otherwise 0</return>
	</function>
	<function name="ChannelSilenceAll">
		<summary>Removes both voice and chat permissions for the given player in the specified channel</summary>
		<param />
		<param name="name" type="string">The exact name of the player to silence</param>
	</function>
	<function name="GetComboPoints">
		<summary>Gets the number of combo points the player has</summary>
		<return name="comboPoints" type="number">The number of combo points</return>
	</function>
	<function name="TakeInboxTextItem">
		<summary>Sends a request to the server to retrieve the given message's text item</summary>
		<param name="index" type="number">The message index of the text item to retrieve</param>
	</function>
	<function name="SetBindingMacro">
		<summary>Assign a keybinding to a specific macro</summary>
		<paramchoice>
			<param name="macroName" type="string">The name of the macro. If Macros are named the same, it will return the first.</param>
			<param name="macroID" type="number">The MacroID of the macro required. 1-18 are the account wide ones, and 19-32 are character specific</param>
		</paramchoice>
	</function>
	<function name="GetBattlefieldMapIconScale">
		<summary>Gets the scale of the battleground map icons</summary>
		<return name="scale" type="number">The scale of the map icons from 0 to 1</return>
	</function>
	<function name="GetBattlefieldStatData">
		<summary>Returns battleground-specific statistics for a given player</summary>
		<param name="playerIndex" type="number">The index of the player whose stat you want to retrieve</param>
		<param name="statIndex" type="number">The column index of the stat you want to retrieve</param>
		<return name="columnData" type="number">The requested data. nil if either the playerIndex or statIndex are invalid.</return>
	</function>
	<function name="GetActionInfo">
		<summary>Returns information about a given actionbar slot</summary>
		<param name="slot" type="number">An action slot</param>
		<return name="type" type="string">The type of action bound to the slot</return>
		<return name="id" type="number">The identifier for the spell/macro/item</return>
		<return name="subType" type="string">The subtype of the action, otherwise nil</return>
	</function>
	<function name="GetAddOnMetadata">
		<summary>Gets the value of certain fields in an addon's TOC file</summary>
		<paramchoice>
			<param name="index" type="number">The index of the AddOn, must be in the range of 1 to GetNumAddOns().</param>
			<param name="name" type="string">The name of the AddOn as it appears in its folder name.</param>
		</paramchoice>
		<return name="data" type="string">The data available in the TOC for the variable queried, or nil if the variable is not queryable or not defined.</return>
	</function>
	<function name="MakeMinigameMove" />
	<function name="CanGrantLevel" />
	<function name="GetContainerItemDurability">
		<summary>Returns durability information for an item in one of your bags</summary>
		<param name="index" type="number">The index of the container</param>
		<param name="slot" type="number">The slot within the given container to query</param>
		<return name="minDurability" type="number">The minimum durability of the given item</return>
		<return name="curDurability" type="number">The current durability of the given item</return>
	</function>
	<function name="ResetTutorials">
		<summary>Resets tutorials from the beginning</summary>
	</function>
	<function name="CalculateAuctionDeposit">
		<summary>Gets the cost of an auction house deposit for a given runtime</summary>
		<param name="runTime" type="number">The runtime of the proposed auction</param>
		<return name="deposit" type="number">The cost of the deposit, in copper</return>
	</function>
	<function name="GetDamageBonusStat">
		<summary>This function will return the index of the stat that provides the most (not necessarily the only) bonus melee damage when increased for the player's class. Currently this is either 1 (Strength) or 2 (Agility).</summary>
		<return name="bonusStat" type="number">The index of the main stat that grants a damage bonus when increased</return>
	</function>
	<function name="DeleteFile">
		<summary>This is an internal function, calling it gives an "Access Denied" error message.</summary>
	</function>
	<function name="GetInstanceDifficulty">
		<summary>Returns your group's dungeon difficulty setting</summary>
		<return name="difficulty" type="number">The group's dungeon difficulty setting (1 to 3)</return>
	</function>
	<function name="ChannelKick">
		<summary>Kicks a player from the given channel</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="name" type="string">The name of the player to kick</param>
	</function>
	<function name="GetAvailableLevel" />
	<function name="GuildControlGetRankFlags">
		<summary>Returns a list of permission flags for a guild rank</summary>
		<return name="..." apitype="onenil">The list of permission flags</return>
	</function>
	<function name="GetQuestMoneyToGet">
		<summary>Gets the amount of money required for the currently displayed quest in the gossip frame</summary>
		<return name="money" type="number">The amount of money required for the currently displayed quest in the gossip frame</return>
	</function>
	<function name="GetSpellBonusDamage">
		<summary>Gets the spell damage bonus for a given school</summary>
		<param name="school" type="number">The spell school to query</param>
		<return name="minModifier" type="number">The spell damage bonus for a given school</return>
	</function>
	<function name="AddFriend">
		<summary>Adds a player or unit to the friend's list</summary>
		<paramchoice>
			<param name="name" type="string">The full name of a player to add to the friends list</param>
			<param name="unit" type="string" apitype="unitid">The unitid of the player to add to the friends list</param>
		</paramchoice>
	</function>
	<function name="GetTradeSkillLine">
		<summary>Returns level information about the active tradeskill line</summary>
		<return name="tradeskillName" type="string">Name of the current tradeskill</return>
		<return name="currentLevel" type="number">Current level in tradeskill</return>
		<return name="maxLevel" type="number">Current maximum level for tradeskill</return>
	</function>
	<function name="KBSetup_BeginLoading">
		<summary>Loads a maximum number of "Top Issues" from a given page</summary>
		<param name="numArticles" type="number">The number of articles displayed per page.  This is typically the constant KBASE_NUM_ARTICLES_PER_PAGE</param>
		<param name="currentPage" type="number">The page to display</param>
	</function>
	<function name="CloseTrade">
		<summary>Closes the trade window</summary>
	</function>
	<function name="KBSetup_GetLanguageData">
		<summary>Returns information about a given knowledge base language</summary>
		<param name="index" type="number">The index of the language to query</param>
		<return name="languageId" type="number" />
		<return name="name" type="string">The name of the language</return>
	</function>
	<function name="CombatLogAddFilter">
		<summary>Adds a filter to the combat log system</summary>
	</function>
	<function name="CanShowResetInstances">
		<summary>Returns whether or not the player can reset instances</summary>
		<return name="canResetInstances" apitype="onenil">1 if the player can currently reset instances, otherwise nil</return>
	</function>
	<function name="GetLFGPartyResults">
		<summary>Returns information about a member of a party in the LFG results</summary>
		<param name="type" type="number">The type of LFG query.  Valid values can be obtained using GetLFGTypes().</param>
		<param name="lfgNdx" type="number">The dungeon/quest index of the query.  Valid values can be obtained using GetLFGTypeEntries().</param>
		<param name="index" type="number">The index of the result in the LFG window</param>
		<param name="partyIndex" type="number">The index of the member of the party.  This does not include the party leader</param>
		<return name="name" type="string">The name of the player</return>
		<return name="level" type="string">The level of the player, as a string</return>
		<return name="class" type="string">The localized class of the player</return>
	</function>
	<function name="CloseGossip">
		<summary>Closes the gossip window</summary>
	</function>
	<function name="GetNumTradeSkills">
		<summary>Gets the number of available trade skill items and headers</summary>
		<return name="numSkills" type="number">The number of trade skills including headers</return>
	</function>
	<function name="GetAuctionItemClasses">
		<summary>Returns a list of top level item classes used to categorize auction items (e.g. Weapons, Armor, Container, Consumable, Trade Goods, etc.).</summary>
		<return name="..." type="string">List of possible auction item classes</return>
	</function>
	<function name="GetNumRoutes">
		<summary>Gets then number of routes available from a given taxi node.</summary>
		<param name="index" type="number">Taxi Node index</param>
		<return name="numRoutes" type="number">Number of routes from this node.</return>
	</function>
	<function name="AddChatWindowMessages">
		<summary>Sets a chat frame to receive and show messages of the given message group.</summary>
		<param name="index" type="number">ChatFrame index (1-7)</param>
		<param name="messageGroup" type="string">Message group to add to the chatframe</param>
	</function>
	<function name="GetMirrorTimerProgress">
		<summary>Gets the progress of a mirror timer (breath, exhaustion, etc.)</summary>
		<param name="timer" type="string">The type of timer to check</param>
		<return name="progress" type="number">The progress of the timer in milliseconds</return>
	</function>
	<function name="GetGuildBankWithdrawMoney">
		<summary>Gets the amount of gold the player can withdraw from the bank daily</summary>
		<return name="withdrawLimit" type="number">The amount of gold the player is allowed to withdraw from the bank daily, or -1 if no limit.</return>
	</function>
	<function name="AcceptDuel">
		<summary>Accepts a proposed duel</summary>
	</function>
	<function name="DisplayChannelVoiceOn">
		<summary>Enables voice chat in a given channel</summary>
		<param name="displayIndex" type="number">The index of a channel in the chat display window.  These indices include the headers that are displayed in this window.</param>
	</function>
	<function name="SendAddonMessage">
		<summary>Sends a chat-like message to players that will not show up in their chat windows by default</summary>
		<param name="prefix" type="string">An arbitrary label for the message</param>
		<param name="message" type="string">The message to send</param>
		<param name="type" type="string" optional="true">The type of message to send (guild, party, whisper, etc.)</param>
		<param name="target" type="string" optional="true">The target of a whisper addon message</param>
	</function>
	<function name="SetInventoryPortraitTexture">
		<summary>Sets a portrait texture using an inventory item</summary>
		<param name="texture" type="table">The texture to be changed</param>
		<param name="unit" type="string" apitype="unitid">The unit whose inventory should be queried</param>
		<param name="slot" type="number">The inventory slotId to query</param>
	</function>
	<function name="HideRepairCursor">
		<summary>Stops displaying the item repair cursor</summary>
	</function>
	<function name="MoveForwardStart" />
	<function name="IsAutoRepeatAction">
		<summary>Checks if an action is an auto-repeat action (e.g. Auto Shot).</summary>
		<param name="action" type="number">The action id to check.</param>
		<return name="repeat" apitype="onenil">1 if the action is an auto-repeat action, nil otherwise</return>
	</function>
	<function name="GetGameTime">
		<summary>Gets the current in-game time</summary>
		<return name="hour" type="number">The hour portion of the current in-game time</return>
		<return name="minute" type="number">The minute portion of the current in-game time</return>
	</function>
	<function name="DeclineGuild">
		<summary>Declines an offered guild invitation</summary>
	</function>
	<function name="VoiceChat_ActivatePrimaryCaptureCallback" />
	<function name="GetScriptCPUUsage">
		<summary>Gets the total time used by the scripting subsystem</summary>
	</function>
	<function name="GetTabardCreationCost">
		<summary>Gets the cost to create a guild tabard</summary>
		<return name="cost" type="number">The cost of creating a guild tabard, in copper</return>
	</function>
	<function name="SplitContainerItem">
		<summary>Splits an item in a given container, placing the new stack on the cursor.</summary>
		<param name="index" type="number">The index of container that holds the item to be split</param>
		<param name="slot" type="number">The slot that contains the item to be split</param>
		<param name="amount" type="number">The number of items to split from the main stack</param>
	</function>
	<function name="IsFalling">
		<summary>Returns whether or not the player is falling</summary>
		<return name="falling" apitype="onenil">1 if the player is falling, otherwise nil</return>
	</function>
	<function name="GetBattlefieldFlagPosition">
		<summary>Returns positioning information on the given flag</summary>
		<param name="index" type="number">Index of the flag between 1 and GetNumBattlefieldFlagPositions()</param>
		<return name="flagX" type="number">X location of the flag between 0 and 1</return>
		<return name="flagY" type="number">Y location of the flag between 0 and 1</return>
		<return name="flagToken" type="string">Type of flag</return>
	</function>
	<function name="ToggleMouseMove">
		<summary>Toggles mouse movement</summary>
	</function>
	<function name="GetQuestLogGroupNum">
		<summary>Gets the suggested group size to complete the currently selected quest</summary>
		<return name="suggestedGroup" type="number">The suggested group size to complete the quest selected in the quest log, or 0</return>
	</function>
	<function name="GetGuildBankTabPermissions">
		<summary>Gets the permissions the currently selected guild rank has for a given guild bank tab</summary>
		<param name="tab" type="number">The guild bank tab to query</param>
		<return name="viewTab" apitype="onenil">1 if the currently selected guild rank has permission to view the tab</return>
		<return name="canDeposit" apitype="onenil">1 if the currently selected guild rank has permission to deposit items, otherwise nil</return>
		<return name="numWithdrawals" type="number">The number of withdrawals the currently selected guild rank is allowed for the given tab</return>
	</function>
	<function name="GetRaidRosterSelection">
		<summary>Gets the index of the raid member currently selected by the mouse</summary>
		<return name="raidIndex" type="number">The index of the raid member currently being dragged by the mouse.  If a member was currently selected and moved, this function will continue to return that value until a new raid member has been selected</return>
	</function>
	<function name="PickupPlayerMoney">
		<summary>Picks up money from the player's inventory and holds it on the cursor</summary>
		<param name="amount" type="number">The amount of money to pick up, in copper</param>
	</function>
	<function name="GetNumMutes">
		<summary>Gets the number of characters on the player's mute list</summary>
		<return name="numMuted" type="number">The number of characters on the player's mute list</return>
	</function>
	<function name="PickupGuildBankMoney">
		<summary>Withdraws money from the guild bank, placing it on the cursor</summary>
		<param name="amount" type="number">The amount of money to pick up, in copper</param>
	</function>
	<function name="GetTrainerServiceAbilityReq">
		<summary>Retrieves information about abilities that are required to train a specific skill.</summary>
		<param name="index" type="number">The index of the trainer service to query.  These indices are affected by the trainer filter, see GetTrainerServiceTypeFilter() and SetTrainerServiceTypeFilter().</param>
		<return name="ability" type="string">The name of the ability that is required.</return>
		<return name="hasReq" apitype="onenil">1 if the player meets the requirement, nil otherwise</return>
	</function>
	<function name="GetArenaTeamRosterInfo">
		<summary>Returns information about an arena team member</summary>
		<param name="team" type="number">The index of the team to query.  Teams are indexed in increasing size from 1 to 3, depending on which teams the player is a member of</param>
		<param name="index" type="number">The team roster index to query</param>
		<return name="name" type="string">The name of the player</return>
		<return name="rank" type="number">The rank of the player</return>
		<return name="level" type="number">The level of the player</return>
		<return name="class" type="string">The localized name of the player's class</return>
		<return name="online" apitype="onenil">1 if the player is online, otherwise nil</return>
		<return name="played" type="number">The number of games the player has played this week</return>
		<return name="win" type="number">The number of games the player has won this week</return>
		<return name="seasonPlayed" type="number">The number of games the player has played this season</return>
		<return name="seasonWin" type="number">The number of games the player has won this season</return>
		<return name="rating" type="number">The player's personal rating with this team</return>
	</function>
	<function name="GetExtendedItemInfo" />
	<function name="QuestLogPushQuest">
		<summary>Shares the currently selected quest with the other party members.</summary>
	</function>
	<function name="UnitIsDeadOrGhost">
		<summary>Returns whether or not the given player is either dead or a ghost</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="fullname" type="string">The full name of the player to query</param>
		</paramchoice>
		<return name="isDeadOrGhost" apitype="onenil">1 if the player is dead or a ghost, otherwise nil</return>
	</function>
	<function name="GetInventoryItemCooldown">
		<summary>Returns cooldown information about a current inventory item</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query.  This unit can be the player, or the currently inspected unit</param>
		<param name="slotId" type="string">An inventory slotId to query.  This id can be obtained by calling GetInventorySlotInfo() with a slot token</param>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="GetAvailableTitle">
		<summary>Queries the title of the selected available quest at a quest NPC.</summary>
		<param name="index" type="number">The index of the quest to query.</param>
		<return name="title" type="string">The title of the quest.</return>
	</function>
	<function name="GetTradeSkillIcon">
		<summary>This function will return the inventory icon for the TradeSkill item at the index being queried.</summary>
		<param name="index" type="number">The index of the line you want to query the icon for.</param>
		<return name="texturePath" type="string">The full path to the icon's texture</return>
	</function>
	<function name="GetNumMacroItemIcons">
		<summary>Gets the number of available macro item icons.</summary>
		<return name="numIcons" type="number">The number of available macro item icons</return>
	</function>
	<function name="CommentatorSetMapAndInstanceIndex" />
	<function name="CastShapeshiftForm">
		<summary>Casts a shapeshift form by index</summary>
	</function>
	<function name="GetSpellCooldown">
		<summary>Returns cooldown information about a given spell.</summary>
		<param />
		<param name="bookType" type="string" optional="true">The type of spell book to look up spellIndex in (required when using spellIndex)</param>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="SetBindingItem">
		<summary>This function will bind a specific key to a specific item. Hitting that key after calling this function will cause the item to be used or activated.</summary>
		<param />
		<param />
		<return name="success" apitype="onenil">1 if the binding was successful, otherwise nil.</return>
	</function>
	<function name="CloseSocketInfo">
		<summary>Closes the socket frame</summary>
	</function>
	<function name="GetPlayerMapPosition">
		<summary>Returns a unit's position on the current map zoom.  </summary>
		<param name="player" type="string" apitype="unitid">A unit id that refers to the current player or any player character in their party/raid.  </param>
		<return name="playerX" type="number">A number between 0 and 1 that is the specified unit's X map position on the current map zoom, from the left side of the map.  </return>
		<return name="playerY" type="number">A number between 0 and 1 that is the specified unit's Y map position on the current map zoom, from the top of the map.  </return>
	</function>
	<function name="CheckTalentMasterDist">
		<summary>Returns whether or not the player is in range of a talent trainer</summary>
		<return name="inRange" apitype="onenil">1 if the player is in range of a talent trainer, otherwise nil</return>
	</function>
	<function name="GetSendMailCOD" />
	<function name="MovieRecording_QueueMovieToCompress">
		<summary>Adds a movie to the compression queue, starting immediate if the queue is empty</summary>
		<param name="filename" type="string">The filename of a movie to add to the compression queue</param>
	</function>
	<function name="PetFollow">
		<summary>Sets the pet into "Follow" mode</summary>
	</function>
	<function name="GetMerchantItemLink">
		<summary>Gets the full link of the item in question, or nil if the index is out of range.</summary>
		<param name="index" type="number">The index of the item who's link you want returned, should be within 1 to GetMerchantNumItems().</param>
		<return name="itemLink" type="string">The link of the item being queried or nil if the index is not valid.</return>
	</function>
	<function name="DeclineName" />
	<function name="KBQuery_GetTotalArticleCount">
		<summary>Gets the total number of articles returned for the given query</summary>
		<return name="totalArticleHeaderCount" type="number">The total number of articles returned for the given query</return>
	</function>
	<function name="SelectAvailableQuest">
		<summary>Selects an available quest from the given NPC</summary>
		<param name="index" type="number">The index of the available quest in the QuestFrame</param>
	</function>
	<function name="TurnInPetition">
		<summary>Deprecated</summary>
	</function>
	<function name="GetMapInfo">
		<summary>Gets the map information about the current world map texture</summary>
		<return name="mapFileName" type="string">The name of the file containing the textures for the current world map</return>
		<return name="textureHeight" type="number">The height of the specified texture</return>
		<return name="textureWidth" type="string">The width of the specified texture</return>
	</function>
	<function name="GetRangedCritChance">
		<summary>Gets the player's ranged critical strike chance</summary>
		<return name="critChance" type="number">The player's critical strike chance with the currently equipped ranged weapon, as a floating point number</return>
	</function>
	<function name="UnitStat">
		<summary>Returns information about a given character statistic (intellect, stamina, etc.)</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<param name="statIndex" type="number">The index of the stat to query</param>
		<return name="stat" type="number">The current value of the stat</return>
		<return name="effectiveStat" type="number">The effective value of the stat (unused)</return>
		<return name="posBuff" type="number">The value of any positive buffs for the given stat</return>
		<return name="negBuff" type="number">The value of any negative buffs for the given stat</return>
	</function>
	<function name="IsAvailableQuestTrivial">
		<summary>Gets the trivial state for the quests available at a quest NPC.</summary>
		<param name="index" type="number">The index of the quest to check.</param>
		<return name="trivial" apitype="onenil">1 if the available quest is trivial, nil otherwise</return>
	</function>
	<function name="WithdrawGuildBankMoney">
		<summary>Attempts to withdraw an amount of money in coppers from the guild bank.  Does nothing on failure.</summary>
		<param name="money" type="number">Money to withdraw in coppers</param>
	</function>
	<function name="UnitCanAttack">
		<summary>Returns whether or not one unit can attack another unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit that would be attacking</param>
		<param name="otherUnit" type="string" apitype="unitid">The unit that would be attacked</param>
		<return name="canAttack" apitype="onenil">1 if the first unit can attack the second unit, otherwise nil</return>
	</function>
	<function name="SetSelectedFaction">
		<summary>Sets the current faction selection</summary>
		<param name="index" type="number">The index of the faction in the reputation window</param>
	</function>
	<function name="ClearOverrideBindings">
		<summary>Clears all override bindings for a given owner</summary>
		<param name="owner" type="table">The owner of a set of override bindings</param>
	</function>
	<function name="GetItemInfo">
		<summary>Returns information about an item, by name, link or id</summary>
		<paramchoice>
			<param name="itemID" type="number">An item's ID</param>
			<param name="itemName" type="string">An item's name</param>
			<param name="itemLink" type="string">An item's link</param>
		</paramchoice>
		<return name="name" type="string">The name of the item</return>
		<return name="link" type="string">A link for the item</return>
		<return name="quality" type="number">The item's quality</return>
		<return name="iLevel" type="number">The internal "item level".</return>
		<return name="reqLevel" type="number">The minimum required level to use the item</return>
		<return name="type" type="string">The item type.  This may be the class of item (such as "Armor" or "Weapon") or another item class such as "quest".</return>
		<return name="subType" type="string">The item's subtype</return>
		<return name="maxStack" type="number">The maximum stack size for the item</return>
		<return name="equipSlot" type="string">A token indicating where the item can be equipped, or the empty string</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
	</function>
	<function name="GetRealmName">
		<summary>Gets the name of the player's realm (server name)</summary>
		<return name="realm" type="string">The name of the player's realm (server)</return>
	</function>
	<function name="GetPossessInfo">
		<summary>Returns information about the spells in the possess bar</summary>
		<param name="index" type="number">The index of the possess bar entry to query.</param>
		<return name="texture" type="string">Full path to the icon texture of the spell in the queried possess bar slot.</return>
		<return name="name" type="string">The name of the spell in the queried possess bar slot.</return>
	</function>
	<function name="ClickSocketButton">
		<summary>Picks up or places a gem in the Item Socketing UI</summary>
		<param name="index" type="number">The index of a socket in the Item Socketing UI</param>
	</function>
	<function name="GetCVarMin">
		<summary>Gets the minimum value allowed for a given CVar</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="min" type="number">The minimum value allowed for the given CVar</return>
	</function>
	<function name="CommentatorGetNumPlayers" />
	<function name="AcceptSockets">
		<summary>Accepts the current socketed gems without confirmation</summary>
	</function>
	<function name="GetUnitHealthModifier">
		<summary>Gets the health modifier for a pet.  Used to modify the amount of health a pet gains from +stamina.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="modifier" type="number">The health modifier</return>
	</function>
	<function name="AssistUnit">
		<summary>Assists a player by unit or name</summary>
		<paramchoice>
			<param name="name" type="string">The full name of a player to add to the friends list</param>
			<param name="unit" type="string" apitype="unitid">The unitid of the player to add to the friends list</param>
		</paramchoice>
	</function>
	<function name="GetItemCooldown">
		<summary>Returns cooldown information about a given item</summary>
		<paramchoice>
			<param name="item" type="string">The name of the item to query</param>
			<param name="itemId" type="number">The itemId of the item to query</param>
		</paramchoice>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="GetFunctionCPUUsage">
		<summary>Returns CPU usage information about a function</summary>
		<param name="function" type="function">The function to query</param>
		<param name="includeSubroutines" apitype="onenil">1 to include any subroutines called by the original function, otherwise nil</param>
		<return name="timeUsed" type="number">The amount of CPU time spent inside the function</return>
		<return name="numCalled" type="number">The number of times the function has been called</return>
	</function>
	<function name="UseItemByName">
		<summary>Uses an item, optionally on a specified target</summary>
		<param name="name" type="string">The name of the item to use</param>
		<param name="target" type="string" apitype="unitid">The unit to use as the target of the item, if applicable</param>
	</function>
	<function name="MoveViewDownStop" />
	<function name="GetScreenResolutions">
		<summary>Gets the available screen resolutions</summary>
		<return name="..." type="string">A list of available screen resolutions, as strings. For example "800x600" and "1024x768".</return>
	</function>
	<function name="GetMacroSpell">
		<summary>Gets the spell a given macro is set to cast</summary>
		<param name="slot" type="number">The macro slot to query</param>
		<return name="name" type="string">The name of the spell the macro is set to cast</return>
		<return name="rank" type="string">The rank of the spell, if applicable</return>
	</function>
	<function name="ContainerIDToInventoryID">
		<summary>Gets the inventoryId that corresponds to a given containerId</summary>
		<param name="containerId" type="number">The container id</param>
		<return name="inventoryId" type="number">The inventoryId corresponding to the given container</return>
	</function>
	<function name="GetQuestLogRewardInfo">
		<summary>Returns information about a quest reward</summary>
		<param name="index" type="number">The index of the entry in the quest log</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="numItems" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality of the item</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable by the player, otherwise nil</return>
	</function>
	<function name="CloseMerchant">
		<summary>Closes the open merchant window</summary>
	</function>
	<function name="GetBattlefieldInstanceInfo">
		<summary>Returns a numeric ID for a battleground instance listed in the battleground instance selection window.</summary>
		<param name="index" type="number">The index in the battleground instance listing (with 1 corresponding to the first actual instance shown in the list after "First Available").</param>
		<return name="instanceID" type="number">The instance ID that corresponds to the given index</return>
	</function>
	<function name="PitchDownStop" />
	<function name="SetMacroSpell">
		<summary>Sets the spell and target unit used to update a macros icon and range indicator</summary>
		<paramchoice>
			<param name="macro" type="number">The macro index to change</param>
			<param name="name" type="string">The name of the macro to change</param>
		</paramchoice>
	</function>
	<function name="TurnRightStop" />
	<function name="seterrorhandler">
		<summary>Sets the default error handler to a specific function</summary>
		<param name="errHandler" type="function">The function to use as the error handler</param>
	</function>
	<function name="CheckReadyCheckTime">
		<summary>Unknown, called by UIParent's OnUpdate handler</summary>
	</function>
	<function name="GetMapOverlayInfo">
		<summary>Returns information about a world map overlay</summary>
		<param name="index" type="number">The index of a world map overlay</param>
		<return name="textureName" type="string">The path to the overlay texture file</return>
		<return name="textureWidth" type="number">The width of the texture, in pixels</return>
		<return name="textureHeight" type="number">The height of the texture, in pixels</return>
		<return name="offsetX" type="number">The X offset for anchoring the overlay with relation to the world map</return>
		<return name="offsetY" type="number">The Y offset for anchoring the overlay with relation to the world map</return>
		<return name="mapPointX" type="number">Unknown, always seems to return 0</return>
		<return name="mapPointY" type="number">Unknown, always seems to return 0</return>
	</function>
	<function name="PickupGuildBankItem">
		<summary>Picks up an item from the guild bank and holds it on the cursor</summary>
		<param name="tab" type="number">The guild bank tab</param>
		<param name="slot" type="number">The slot in the given guild bank tab</param>
	</function>
	<function name="CollapseChannelHeader">
		<summary>Collapses a channel header in the chat channel listing</summary>
		<param name="index" type="number">The index of the header in the Chat Channel window.  These indices include the actually channel listings, so the second channel may be at a higher index, depending on how many channels are listed in the first header.</param>
	</function>
	<function name="CanInspect">
		<summary>This function returns if the given unit can be inspected.</summary>
		<param name="unitId" type="string">The unitId that you want to check if you can inspect. This function only accepts unitIds and not player names.</param>
		<param name="showError" type="boolean">true to display an error in the UIErrorsFrame, otherwise false</param>
		<return name="canInspect" apitype="onenil">1 if we ca inspect the unit, otherwise nil</return>
	</function>
	<function name="AppendToFile" />
	<function name="GetSubZoneText">
		<summary>Gets the subzone text of the player's current zone</summary>
		<return name="subzoneText" type="string">The subzone text for the given zone, or the empty string.  This corresponds to sub-zones within a larger zone such as "The Ring of Trials" in Nagrand</return>
	</function>
	<function name="MovieRecording_Cancel">
		<summary>Cancels a currently recording video</summary>
	</function>
	<function name="GetNetStats">
		<summary>Gets the game's network statistics</summary>
		<return name="bandwidthIn" type="number">The current incoming bandwidth (download) usage, measured in KB/s</return>
		<return name="bandwidthOut" type="number">The current outgoing bandwidth (upload) usage, measured in KB/s</return>
		<return name="latency" type="number">The current latency to the server, measured in milliseconds</return>
	</function>
	<function name="TaxiNodePosition">
		<summary>Gets the position of a taxi node in the taxi window</summary>
		<param name="index" type="number">The index of the taxi node</param>
		<return name="x" type="number">The x coordinate of the taxi node in the taxi window, as a percentage of the width of the frame</return>
		<return name="y" type="number">The y coordinate of the taxi node in the taxi window, as a percentage of the height of the frame</return>
	</function>
	<function name="ClearTutorials">
		<summary>Clears any already displayed tutorials so they are displayed again</summary>
	</function>
	<function name="SplitGuildBankItem">
		<summary>Splits an item in a given tab and slot, placing the new stack on the cursor.</summary>
		<param name="tab" type="number">The index of the tab that holds the item to be split</param>
		<param name="slot" type="number">The slot that contains the item to be split</param>
		<param name="amount" type="number">The number of items to split from the main stack</param>
	</function>
	<function name="GetSavedInstanceInfo">
		<summary>Returns information on a specific instance the character is saved to.</summary>
		<param name="index" type="number">Saved instance ID to query between 1 and GetNumSavedInstances()</param>
		<return name="instanceName" type="string">Name of the instance</return>
		<return name="instanceID" type="number">ID of the instance</return>
		<return name="instanceReset" type="number">Timestamp indicating time till reset</return>
	</function>
	<function name="AttackTarget">
		<summary>Enables melee auto-attacking against the currently selected target</summary>
	</function>
	<function name="GetBankSlotCost">
		<summary>Gets the cost of a bank slot.</summary>
		<param name="index" type="number">The index of the bank slot</param>
		<return name="cost" type="number">The cost of the bank slot, in copper</return>
	</function>
	<function name="Sound_ChatSystem_GetNumOutputDrivers">
		<summary>Gets the number of chat system sound output drivers</summary>
	</function>
	<function name="GetCurrentArenaSeason">
		<summary>Gets the current arena season.</summary>
		<return name="season" type="number">The current arena season</return>
	</function>
	<function name="GetLFGStatusText">
		<summary>Returns information on your current Looking For Group status.</summary>
		<return name="isLFG" type="boolean">true if the character is looking for group, false if looking for more.</return>
		<return name="numCriteria" type="number">Amount of extra criteria after this parameter</return>
		<return name="...">Repeating list of isLFG, numCriteria pairs.</return>
	</function>
	<function name="TurnOrActionStart" />
	<function name="GetLanguageByIndex">
		<summary>Gets the localized name of the language identified by the index being queried</summary>
		<param name="index" type="number">The index of the language being queried. Runs from 1 to GetNumLaguages() (That function is spelled that way, its a Blizzard typo)</param>
		<return name="language" type="string">The name of the language, such as "Common" or "Gnomish"</return>
	</function>
	<function name="SetCurrentGuildBankTab">
		<summary>Sets the currently selected guild bank tab</summary>
		<param name="tab" type="number">The guild bank tab index</param>
	</function>
	<function name="CommentatorSetCameraCollision" />
	<function name="GMSurveyQuestion">
		<summary>Gets the text of a specific question from a GM survey</summary>
		<param name="index" type="number">The index of a GM survey question</param>
		<return name="surveyQuestion" type="string">The question being asked</return>
	</function>
	<function name="GetInboxInvoiceInfo">
		<summary>Returns information about an auction house invoice</summary>
		<param name="index" type="number">The index of the invoice in the inbox</param>
		<return name="invoiceType" type="string">The type of invoice</return>
		<return name="itemName" type="string">The name of the item</return>
		<return name="playerName" type="string" />
		<return name="bid" type="number">The winning bid amount, if a bid won the auction</return>
		<return name="buyout" type="number">The buyout amount, if a buyout won the auction</return>
		<return name="deposit" type="number">The amount of money paid in deposit</return>
		<return name="consignment" type="number">The auction house charge for selling your item</return>
		<return name="moneyDelay" type="number">The delay of pending payment, in minutes.  Every auction house temporary invoice will have a delay of 60 minutes</return>
		<return name="etaHour" type="number">The hour portion of the estimated time of arrival for the payment.  If the ETA is 9:37 server time, this value will be the number 9.</return>
		<return name="etaMin" type="number">The minute portion of the estimated time of arrival for the payment.  If the ETA is 9:37 server time, this value will be the number 37.</return>
	</function>
	<function name="GetTradeTargetItemLink">
		<summary>Returns an item link for an item being offered by the target in a trade</summary>
		<param name="index" type="number">The index of the target's trade item</param>
		<return name="link" type="string">The link for the given item</return>
	</function>
	<function name="VoicePushToTalkStart">
		<summary>Used internally to start talking, when push-to-talk is active in voice chat.</summary>
	</function>
	<function name="InboxItemCanDelete">
		<summary>Returns whether or not an inbox item can be deleted</summary>
		<param name="index" type="number">The index of the message in the inbox</param>
		<return name="canDelete" apitype="onenil">1 if the mail message can be deleted, otherwise nil</return>
	</function>
	<function name="GetChatWindowChannels">
		<summary>Returns a list of all channels that a given chat window is interested in</summary>
		<param name="index" type="number">The index of the chat frame to query</param>
		<return name="channelName" type="string">The name of the channel</return>
		<return name="channelId" type="number">A numeric id for the given channel</return>
		<return name="...">A repeating list of channelName, channelId pairs, for each channel belonging to a given chat window</return>
	</function>
	<function name="GetCoinIcon">
		<summary>Returns a texture path for an icon depending on the amount passed.</summary>
		<param name="amount" type="number">Amount of money in copper</param>
		<return name="icon" type="string">Texture path for the icon corresponding to the largest coin for the given amount</return>
	</function>
	<function name="GetProgressText">
		<summary>Gets the quest progress text given by an NPC</summary>
		<return name="text" type="string">The progress text for a given quest.  This is the text displayed when turning a quest into an NPC.  The progress text will be displayed, and the "Continue" option will be available to turn in the quest, as long as the objectives are complete</return>
	</function>
	<function name="DropItemOnUnit">
		<summary>Drops the currently held item on a specific unit</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId of the player to drop the item on</param>
			<param name="name" type="string">The name of a player to drop the item on</param>
		</paramchoice>
	</function>
	<function name="GetItemFamily">
		<summary>Gets the bag type of the given item</summary>
		<paramchoice>
			<param name="itemID" type="number">The item's ID</param>
			<param name="&quot;itemName&quot;" type="string">The item's name</param>
			<param name="&quot;itemLink&quot;" type="string">The item's link</param>
		</paramchoice>
		<return name="bagType">The item's bag type</return>
	</function>
	<function name="GetCurrentGuildBankTab">
		<summary>Gets the currently selected guild bank tab</summary>
		<param name="currentTab" type="number">The currently selected guild bank tab</param>
	</function>
	<function name="GetNumGuildBankMoneyTransactions">
		<summary>Gets the number of guild bank money transactions available for the money log</summary>
		<return name="numTransactions" type="number">The number of guild bank money transactions available for the money log</return>
	</function>
	<function name="IsCurrentSpell">
		<summary>Returns whether or not a given spell is currently being cast or awaiting targeting</summary>
		<paramchoice>
			<param name="spellName" type="string">The name of a spell</param>
			<param name="spellId" type="number">The spellId of a spell</param>
		</paramchoice>
		<return name="isCurrent" apitype="onenil">1 if the given spell is currently being cast, or awaiting targeting</return>
	</function>
	<function name="GetSpellTexture">
		<summary>Gets the texture path for a given spell</summary>
		<param name="id" type="number">The spell id</param>
		<param name="bookType" type="string">The type of spell book</param>
		<return name="texture" type="string">The path to the spell icon's texture</return>
	</function>
	<function name="FlipCameraYaw">
		<summary>Rotates the camera around the player</summary>
		<param name="degrees" type="number">The number of degrees to rotate; positive for counter-clockwise, negative for clockwise.</param>
	</function>
	<function name="UpdateAddOnCPUUsage">
		<summary>Scan through the profiling data and update the per-addon statistics</summary>
	</function>
	<function name="GetGuildBankText">
		<summary>Gets the text from the info pane for the given guild bank tab</summary>
		<param name="tab" type="number">The guild bank tab to use</param>
		<return name="text" type="string">Info contents</return>
	</function>
	<function name="GetBuildInfo">
		<summary>Gets the version information about the client</summary>
		<return name="version" type="string">The version number of the client (such as 2.3.0)</return>
		<return name="internalVersion" type="string">The internal version number of the client (such as 7561)</return>
		<return name="date" type="string">The release date of the client (such as Nov 8 2007)</return>
	</function>
	<function name="RequestRaidInfo">
		<summary>Requests raid information from the server</summary>
	</function>
	<function name="GetNumPetitionItems" />
	<function name="UnitName">
		<summary>Gets the name of a given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="name" type="string">The name of the unit</return>
	</function>
	<function name="GetItemCount">
		<summary>Gets the number of a given item the player has in possession (possibly including bank)</summary>
		<paramchoice>
			<param name="itemId" type="number">An item id</param>
			<param name="itemName" type="string">An item name</param>
			<param name="itemLink" type="string">An item link</param>
		</paramchoice>
		<return name="itemCount" type="number">The number of the given item the player has in possession (possibly including items in the bank)</return>
	</function>
	<function name="GetFirstTradeSkill">
		<summary>Gets the index of the first tradeskill recipe, as opposed to tradeskill headers</summary>
		<return name="index" type="number">The index of the first tradeskill recipe, as opposed to tradeskill headers</return>
	</function>
	<function name="CancelTrade">
		<summary>Cancels an active trade</summary>
	</function>
	<function name="BindEnchant">
		<summary>Confirms enchanting an item, when it would cause the item to become soulbound</summary>
	</function>
	<function name="ResetPerformanceValues" />
	<function name="FocusUnit">
		<summary>Sets the given unit as your focus target.  Passing nil will clear your focus.  Can only be called by the blizzard UI.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to focus</param>
			<param name="name" type="string">The name of the player to focus</param>
		</paramchoice>
	</function>
	<function name="ClearPartyAssignment">
		<summary>Clears a specified assignment (main tank, main assist) for the specified unit, or all raid members if not specified.</summary>
		<param name="assignment" type="string">The token for the party assignment that you want to clear</param>
		<param name="raidMember" type="string">The UnitId or name of the party or raid member whose assignment you want to clear. If nil it will clear the assignment from every member of the raid.</param>
		<param name="exactMatch" type="boolean">true if you want an exact match for the player name, otherwise false</param>
	</function>
	<function name="GetBattlefieldPosition">
		<summary>Returns information on the queried players position in a battleground</summary>
		<param name="index" type="number">Player index between 1 and GetNumBattlefieldPositions()</param>
		<return name="x" type="number">Position on the map between 0 and 1</return>
		<return name="y" type="number">Position on the map between 0 and 1</return>
		<return name="name" type="string">Name of the player on the map</return>
	</function>
	<function name="GetRealZoneText">
		<summary>When in an instance, returns the real name of the instance, not the name in the Minimap</summary>
		<return name="zoneName" type="string">The real name of the instance or zone name</return>
	</function>
	<function name="UnitIsPartyLeader">
		<summary>Returns 1 if the specified unit is the leader of the players party.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The full name of the unit to query</param>
		</paramchoice>
		<return name="leader" apitype="onenil">1 if the unit is the party leader, nil otherwise</return>
	</function>
	<function name="GetSpellAutocast">
		<summary>Returns whether a spell can be autocasted and is currently being autocast.</summary>
		<param name="spellid" type="number">The spellid to query</param>
		<param name="bookType" type="string">The type of spellbook</param>
		<return name="autoCastAllowed" apitype="onenil">Can this spell be autocast or not.</return>
		<return name="autoCastEnabled" apitype="onenil">Is this spell currently being autocast or not.</return>
	</function>
	<function name="PickupItem">
		<summary>Picks up an item by name or id and holds it on the cursor</summary>
		<paramchoice>
			<param name="name" type="string">The name of an item</param>
			<param name="itemId" type="number">The itemId of an item</param>
		</paramchoice>
	</function>
	<function name="ConfirmTalentWipe">
		<summary>Confirms the player unlearning all talents</summary>
	</function>
	<function name="GetGossipActiveQuests">
		<summary>Returns a list of the available quests during a Gossip interaction</summary>
		<return name="name" type="string">The name of the quest</return>
		<return name="level" type="number">The level of the quest</return>
		<return name="...">A repeating list of name and level pairs</return>
	</function>
	<function name="CombatLogAdvanceEntry">
		<summary>Advances through the filtered combat log entries.</summary>
		<param name="count" type="number" />
		<return name="hasEntry" type="number" />
	</function>
	<function name="CollapseTradeSkillSubClass">
		<summary>This function collapses the specified index in the TradeSkill UI</summary>
		<param name="index" type="number">The index of the sub-class you want to collapse</param>
	</function>
	<function name="CameraOrSelectOrMoveStop">
		<summary>Ends a left-click in the 3-D world</summary>
		<param name="isSticky" apitype="onenil">If 1, the camera will remain static until canceled. Otherwise, the camera will pan back to be directly behind the character</param>
	</function>
	<function name="GetSendMailPrice">
		<summary>Gets the cost associated with sending an in-game mail message.</summary>
		<return name="price" type="number">The cost of sending a mail message in copper.</return>
	</function>
	<function name="GetNumLanguages">
		<summary>Gets the number of languages the player's character can speak</summary>
	</function>
	<function name="CanMerchantRepair">
		<summary>Returns whether or not the open merchant can repair equipment</summary>
		<return name="canRepair" apitype="onenil">1 if the merchant can repair equipment, otherwise nil</return>
	</function>
	<function name="GetShieldBlock">
		<summary>Gets the amount of damage stopped by a successful block.</summary>
		<return name="damage" type="number">The amount of damage stopped by a successful block.</return>
	</function>
	<function name="DropCursorMoney">
		<summary>Drops the money currently held to the cursor, returning it to where it was taken from</summary>
	</function>
	<function name="FactionToggleAtWar">
		<summary>Toggles the 'at war' status towards a specific faction</summary>
		<param name="index" type="number">The row index of the faction with which to toggle atWar status.</param>
	</function>
	<function name="AddOrDelIgnore">
		<summary>Adds or removes a player from the ignore list</summary>
		<param name="fullname" type="string">The player to add or remove from the ignore list</param>
	</function>
	<function name="ExpandTradeSkillSubClass">
		<summary>Expands a tradeskill subclass in the tradeskill window</summary>
		<param name="index" type="number">The index of the tradeskill subclass in the tradeskill window.  If the index specified is a tradeskill item rather than a subclass heading, this function will error.</param>
	</function>
	<function name="EnumerateServerChannels">
		<summary>Gets the available server channel names</summary>
		<return name="..." type="string">A list of the available server channel names.  For example: "General", "Trade", "WorldDefense", "GuildRecruitment", "LookingForGroup".</return>
	</function>
	<function name="GetParryChance">
		<summary>Gets the player's percentage parry chance</summary>
		<return name="chance" type="number">Player's Parry chance in percentage</return>
	</function>
	<function name="GetLatestThreeSenders">
		<summary>Gets the names of the last three senders of unchecked mail</summary>
		<return name="sender1" type="string">The name of the sender of an unchecked mail</return>
		<return name="sender2" type="string">The name of the sender of an unchecked mail</return>
		<return name="sender3" type="string">The name of the sender of an unchecked mail</return>
	</function>
	<function name="EquipPendingItem">
		<summary>Confirms equipping a pending bind-on-equip item</summary>
		<param name="slotId" type="number">The inventory slot id</param>
	</function>
	<function name="IsUnitOnQuest">
		<summary>Checks if a specified unit is on a quest from the players quest log.</summary>
		<param name="index" type="number">The quest index to query.</param>
		<param name="unit" type="string">The name of the unit to query.</param>
		<return name="state" apitype="onenil">1 if the unit is on that quest, nil otherwise</return>
	</function>
	<function name="DeleteInboxItem">
		<summary>Deletes the given mail from your inbox.</summary>
		<param name="index" type="number">Inbox item to delete.</param>
	</function>
	<function name="GuildSetLeader">
		<summary>Promotes the specified player to be the new guild leader.</summary>
		<param name="name" type="string">The name of the guild member to promote to leader.</param>
	</function>
	<function name="ArenaTeamSetLeaderByName">
		<summary>Promotes an arena team member to team leader</summary>
		<param name="team" type="number">The index of the arena team</param>
		<param name="name" type="string">The name of the player to promote to team leader</param>
	</function>
	<function name="GetIgnoreName">
		<summary>Gets the name of the specified ignored person.</summary>
		<param name="index" type="string">The index of the ignore.</param>
		<return name="name" type="string">The name of the ignored person.</return>
	</function>
	<function name="CommentatorGetInstanceInfo" />
	<function name="SortLFG">
		<summary>Sets the sort type for a Looking for Group query</summary>
		<param name="sortType" type="string">The sort method to be used</param>
	</function>
	<function name="GetGuildRosterInfo">
		<summary>Returns information about the selected player in your guild roster.</summary>
		<param name="index" type="number">The player index in the guild roster.</param>
		<return name="name" type="string">The name of the player</return>
		<return name="rank" type="string">The rank of the player</return>
		<return name="rankIndex" type="number">The rankIndex of the player</return>
		<return name="level" type="number">The level of the player</return>
		<return name="level" type="number">The level of the player</return>
		<return name="class" type="string">The (localized) class of the player</return>
		<return name="note" type="string">The public note of the player</return>
		<return name="officernote" type="string">The officer note of the player, if the player has permission to view it</return>
		<return name="online" apitype="onenil">1 if the player is online, nil otherwise</return>
		<return name="status" type="string">The status of the player</return>
		<return name="classFileName" type="string">The class filename of the player - unlocalized</return>
	</function>
	<function name="GetLootRollItemInfo">
		<summary>Returns information about the specified item to roll on.</summary>
		<param name="id" type="number">The index of the loot roll.  Each new item that is rolled on increments this number by one so two items won't have the same roll index.</param>
		<return name="texture" type="string">The icon texture of the item.</return>
		<return name="name" type="string">The name of the item.</return>
		<return name="count" type="number">The stacksize of the item.</return>
		<return name="quality" type="number">The quality of the item.</return>
		<return name="bindOnPickUp" apitype="onenil">1 if the item is bind on pickup, nil otherwise.</return>
	</function>
	<function name="GetBattlefieldStatInfo">
		<summary>Used to retrieve a list of custom scoreboard columns inside a battleground</summary>
		<return name="text" type="string">The name of the column</return>
		<return name="icon" type="string">The path to the stat's icon texture</return>
		<return name="tooltip" type="string">The text to be displayed in the tooltip on mouseover</return>
	</function>
	<function name="TutorialsEnabled">
		<summary>Gets the status of the tutorials, if they are enabled or not.</summary>
		<return name="enabled" apitype="onenil">1 if tutorials are enabled, otherwise nil</return>
	</function>
	<function name="GetFriendInfo">
		<summary>Returns information about someone on the player's friends list</summary>
		<param name="index" type="number">The index of a friend in the friends list</param>
		<return name="name" type="string">The name of the friend</return>
		<return name="level" type="number">The friend's level if they are online, otherwise 0</return>
		<return name="class" type="string">The friend's class if they are online, otherwise "Unknown".</return>
		<return name="area" type="string">The current location of the friend if they are online, otherwise "Unknown".</return>
		<return name="connected" apitype="onenil">1 if the friend is online, otherwise nil</return>
		<return name="status" type="string">The status string for the player, i.e. &lt;AFK&gt; or &lt;DND&gt;.  Otherwise, the empty string.</return>
	</function>
	<function name="GetNextStableSlotCost">
		<summary>Gets the cost of the next available stable slot</summary>
		<return name="money" type="number">The cost of the next available stable slot, in copper</return>
	</function>
	<function name="GetBillingTimeRested">
		<summary>Gets the number of minutes offline required for full xp.</summary>
		<return name="time" type="number">Minutes of rest required for full xp.</return>
	</function>
	<function name="TaxiGetDestX">
		<summary>Gets the X coordinate of the destination taxi node, relative to the taxi frame</summary>
		<param name="source" type="number">The source taxi node</param>
		<param name="dest" type="number">The destination taxi node</param>
		<return name="dX" type="number">The X coordinate of the destination taxi node, relative to the width of the taxi frame</return>
	</function>
	<function name="GetGuildCharterCost">
		<summary>Gets the cost of a guild charter</summary>
		<return name="cost" type="number">The cost of a guild charter, in copper</return>
	</function>
	<function name="GetNumMacroIcons">
		<summary>Gets the number of available macro icons</summary>
		<return name="numMacroIcons" type="number">The number of available macro icons</return>
	</function>
	<function name="GetNumGuildMembers">
		<summary>Gets the number of members in the player's guild</summary>
		<return name="numGuildMembers" type="number">The number of members in the player's guild</return>
	</function>
	<function name="GetSkillLineInfo">
		<summary>Returns information about a given skill line</summary>
		<param name="index" type="number">The index of the skill line</param>
		<return name="skillName" type="string">The name of the skill</return>
		<return name="header" apitype="onenil">1 if the skill line is a header, instead of a skill</return>
		<return name="isExpanded" apitype="onenil">1 if the skill line is a header and is expanded, otherwise nil</return>
		<return name="skillRank" type="number">The rank of the skill</return>
		<return name="numTempPoints" type="number">The temporary profession rank increase (for example 15 for engineering for Gnomes due to the racial trait)</return>
		<return name="skillModifier" type="number">The temporary rank modifier due to buffs, equipment, etc. (for example +Defense gear and the Defense skill)</return>
		<return name="skillMaxRank" type="number">The max rank available</return>
		<return name="isAbandonable" apitype="onenil">1 if the skill can be unlearnt, otherwise nil</return>
		<return name="stepCost" type="number">Unused return value</return>
		<return name="rankCost" type="number">Unused return value</return>
		<return name="minLevel" type="number">The minimum level required to learn the skill</return>
		<return name="skillCostType" type="number">Unused return value</return>
		<return name="skillDescription" type="string">The description of the skill</return>
	</function>
	<function name="PrevView">
		<summary>Change the camera view to the previous predefined camera angle.</summary>
	</function>
	<function name="GetTradeSkillSubClasses">
		<summary>Returns a list of tradeskill subclasses</summary>
		<return name="..." type="string">A string for every tradeskill subclass for the given tradeskill.</return>
	</function>
	<function name="InRepairMode">
		<summary>Returns whether or not the player is currently in "item repair mode"</summary>
		<return name="inRepair" apitype="onenil">1 if the player is currently in "repair mode", otherwise nil.</return>
	</function>
	<function name="IsVoiceChatAllowed">
		<summary>Returns whether or not the current client/account is allowed to use the voice chat feature</summary>
		<return name="isAllowed" apitype="onenil">1 if voice chat is allowed, otherwise nil</return>
	</function>
	<function name="TogglePVP">
		<summary>Toggles the player's PvP state.</summary>
	</function>
	<function name="GetLFGResults">
		<summary>Returns information about a specific line of a LFM/LFG query</summary>
		<param name="type" type="number">The type of LFG query.  Valid values can be obtained using GetLFGTypes().</param>
		<param name="lfgNdx" type="number">The dungeon/quest index of the query.  Valid values can be obtained using GetLFGTypeEntries().</param>
		<return name="name" type="string">The name of the player</return>
		<return name="level" type="number">The player's level</return>
		<return name="zone" type="string">The player's current location</return>
		<return name="class" type="string">The player's class</return>
		<return name="criteria1" type="string">The player's first selected LFG/LFM option</return>
		<return name="criteria2" type="string">The player's second selected LFG/LFM option</return>
		<return name="criteria3" type="string">The player's third selected LFG/LFM option</return>
		<return name="comment" type="string">The player's comment, if any</return>
		<return name="numPartyMembers" type="number">The number of current party members</return>
		<return name="isLFM" type="boolean">true if the player is looking for more members, otherwise nil</return>
		<return name="classFileName" type="string">The uppercase english name of the player's class</return>
	</function>
	<function name="UnitCanAssist">
		<summary>Returns whether or not one unit can assist another</summary>
		<param name="unit" type="string" apitype="unitid">The first unitid to query</param>
		<param name="otherUnit" type="string" apitype="unitid">The second unitid to query</param>
		<return name="canAssist" apitype="onenil">1 if the first unit can assist the second, otherwise nil</return>
	</function>
	<function name="UnitRaceBase">
		<summary>Retrieves the unit's race</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="race" type="string">The localized name of the queried unit's race</return>
		<return name="fileName" type="string">The english name of the queried unit's race, as used in the various artwork files.</return>
	</function>
	<function name="LFGQuery">
		<summary>Sends a looking for group request, optionally filtered by class</summary>
		<param name="typeID" type="number">The type of LFG Query.  This value can be obtained using GetLFGTypes()</param>
		<param name="lfgNdx" type="number">The index of a specific quest/dungeon.  Acceptable values can be obtained using GetLFGTypeEntries() with the type argument from above</param>
		<param name="class" type="number">A class filter to apply to the results</param>
	</function>
	<function name="MovieRecording_Toggle">
		<summary>Begins recording a new video, or stops the currently recording video</summary>
	</function>
	<function name="GetRewardMoney">
		<summary>Gets the amount of money rewarded for the quest that is currently being viewed.</summary>
		<return name="money" type="number">The amount of money rewarded for the quest, in copper</return>
	</function>
	<function name="GetBattlefieldInfo">
		<summary>Returns information about a battleground when speaking to a battlemaster NPC or attempting to enter a battleground instance portal</summary>
		<return name="mapName" type="string">The name of the map</return>
		<return name="mapDescription" type="string">The description of the map</return>
		<return name="minLevel" type="number">The minimum level required to enter the battleground</return>
		<return name="maxLevel" type="number">The maximum level allowed in the battleground</return>
		<return name="mapID" type="number">Currently unused; always returns -1</return>
		<return name="mapX" type="number">Currently unused; returns 0 for most battlegrounds.</return>
		<return name="mapY" type="number">Currently unused; returns 0 for most battlegrounds.</return>
		<return name="minBracket" type="number">The minimum level allowed in this battlefield's bracket</return>
		<return name="maxBracket" type="number">The maximum level allowed in this battlefield's bracket</return>
	</function>
	<function name="GetNumDeclensionSets">
		<summary>This function is not currently used</summary>
	</function>
	<function name="SetTrainerSkillLineFilter">
		<summary>Sets the state of a skill line filter in the trainer ui</summary>
		<param name="index" type="number">The index of a skill line filter.  These are any of the major headings at a trainer, such as "Frost", "Fire" and "Arcane", or "Development Skills" and "Recipes"</param>
		<param name="status" type="number" optional="true">The new status of the given filter</param>
		<param name="exclusive" type="number" optional="true">Turns off all other filters, if the filter is being enabled</param>
	</function>
	<function name="PromoteToAssistant">
		<summary>Promotes a player or unit to raid assistant</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to promote</param>
			<param name="name" type="string">The name of the player to promote</param>
		</paramchoice>
	</function>
	<function name="IsLeftControlKeyDown">
		<summary>Returns whether or not the left Control key is held down</summary>
		<return name="isDown" apitype="onenil">1 if the left Control key is held down</return>
	</function>
	<function name="SetTerrainMip">
		<summary>Sets the value of the "Terrain Detail Level" slider in the video options</summary>
		<param name="terrainDetailLevel" type="number">The value to set for the "Terrain Detail Level" slider in the Video options.  This is a either 0 or 1.</param>
	</function>
	<function name="GetPetitionInfo">
		<summary>Returns information about the currently open petition</summary>
		<return name="petitionType" type="string">The type of the petition</return>
		<return name="title" type="string">The title of the petition</return>
		<return name="bodyText" type="string">The text (body) of the petition</return>
		<return name="maxSignatures" type="number">The maximum number of signatures allowed</return>
		<return name="originatorName" type="string">The person who initially purchased the charter</return>
		<return name="isOriginator" apitype="onenil">1 if the current player is the charter's originator</return>
		<return name="minSignatures" type="number">The minimum number of signatures required for this charter</return>
	</function>
	<function name="IsLeftShiftKeyDown">
		<summary>Returns whether or not the left Shift key on the keyboard is held down</summary>
		<return name="isDown" apitype="onenil">1 if the left Shift key on the keyboard is currently held down</return>
	</function>
	<function name="GetTerrainMip">
		<summary>Gets the value of the "Terrain Detail Level" slider in the video options</summary>
		<return name="terrainDetailLevel" type="number">The value of the "Terrain Detail Level" slider in the Video options.  This is either 0 or 1.</return>
	</function>
	<function name="SetPortraitTexture">
		<summary>Sets a portrait texture based on a unit's model</summary>
		<param name="texture" type="table">The texture object to set</param>
		<param name="unit" type="string" apitype="unitid">The unit to use for the portrait texture</param>
	</function>
	<function name="SetTradeMoney">
		<summary>Sets the amount of money to trade in the trade window, in copper</summary>
		<param name="amount" type="number">The amount of money to trade, in copper</param>
	</function>
	<function name="ChannelUnban">
		<summary>Unbans a player from a given channel</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="player" type="string">The name of the player</param>
	</function>
	<function name="DisplayChannelOwner">
		<summary>Fires a &lt;cit&gt;CHANNEL_OWNER&lt;/cit&gt; event for the given channel</summary>
		<param />
	</function>
	<function name="GetNumTitles">
		<summary>Gets the number of available player titles</summary>
		<return name="numTitles" type="number">The number of available player titles</return>
	</function>
	<function name="LootSlotIsItem">
		<summary>Returns whether or not a given loot slot contains an item</summary>
		<param name="slot" type="number">A slot index in the current loot window</param>
		<return name="isItem" apitype="onenil">1 if the loot slot contains an item, otherwise nil</return>
	</function>
	<function name="ComplainInboxItem">
		<summary>Reports an inbox item as spam</summary>
		<param name="index" type="number">Inbox item to report as spam</param>
	</function>
	<function name="Quit">
		<summary>Quits the game normally.</summary>
	</function>
	<function name="GetNumRaidMembers">
		<summary>Gets the number of members of the player's raid</summary>
		<return name="numRaidMembers" type="number">The number of members in the current raid, or 0.  This value will include the player, as a member of the raid</return>
	</function>
	<function name="CommentatorSetBattlemaster" />
	<function name="IsRightControlKeyDown">
		<summary>Returns whether or not the right Control key on the keyboard is held down</summary>
		<return name="isDown" apitype="onenil">1 if the right Control key on the keyboard is held down</return>
	</function>
	<function name="GetNumQuestLogChoices">
		<summary>Gets the number of reward choices for the currently selected quest in the quest log</summary>
		<return name="numChoices" type="number">The number of reward choices for the currently selected quest in the quest log</return>
	</function>
	<function name="SetCurrentTitle">
		<summary>Sets the players title.</summary>
		<param name="titleMaskID" type="number">Sets your players title to the given id.  titleMaskID should be between 1 and GetNumTitles() or -1 to clear.</param>
	</function>
	<function name="GetWeaponEnchantInfo">
		<summary>Returns information about temporary item enchants on the player's weapons </summary>
		<return name="hasMainHandEnchant" apitype="onenil">1 if the main hand weapon has a temporary enchant</return>
		<return name="mainHandExpiration" type="number">The time until the enchant expires, in milliseconds</return>
		<return name="mainHandCharges" type="number">The number of charges left on the enchantment</return>
		<return name="hasOffHandEnchant" apitype="onenil">1 if the offhand weapon has a temporary enchant</return>
		<return name="offHandExpiration" type="number">The time until the enchant expires, in milliseconds</return>
		<return name="offHandCharges" type="number">The number of charges left on the enchantment</return>
	</function>
	<function name="TaxiNodeCost">
		<summary>Gets the cost to fly to a given taxi node</summary>
		<param name="slot" type="number">The index of a taxi node</param>
		<return name="cost" type="number">The cost of flying to the given taxi node, in copper</return>
	</function>
	<function name="MoveViewLeftStart" />
	<function name="GetLocale">
		<summary>Gets the four character locale code indicating what language the client uses</summary>
		<return name="locale" type="string">A four character locale code indicating what language the client uses</return>
	</function>
	<function name="SignPetition">
		<summary>Signs the currently offered petition</summary>
	</function>
	<function name="ConsoleExec">
		<summary>Runs a console command</summary>
		<param name="console_command" type="string">The console command to run</param>
	</function>
	<function name="CombatLogGetCurrentEntry" />
	<function name="CanGuildRemove">
		<summary>Returns whether or not the player can remove a member from their guild</summary>
		<return name="canRemove" apitype="onenil">1 if the player can remove a member from their guild, otherwise nil</return>
	</function>
	<function name="DeleteCursorItem">
		<summary>Confirms deletion of the item currently held on the cursor</summary>
	</function>
	<function name="UnitHealth">
		<summary>Gets the amount of health the unit has.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="health" type="number">The amount of health the unit currently has.  If the unit is not a member of your party or raid, this value will be given as a percentage (i.e. between 0-100).</return>
	</function>
	<function name="GetPVPYesterdayStats">
		<summary>Gets the player's PVP stats from yesterday</summary>
		<return name="kills" type="number">The amount of honor kills the player earned yesterday</return>
		<return name="honor" type="number">The amount of honor points earned yesterday</return>
	</function>
	<function name="ItemHasRange">
		<summary>Returns whether or not the item has a range for use.</summary>
		<paramchoice>
			<param name="itemid" type="number">The item's id</param>
			<param name="itemname" type="string">The name of an item</param>
			<param name="itemlink" type="string">A valid item link</param>
		</paramchoice>
		<return name="hasRange" apitype="onenil">1 if the item has a range, otherwise nil.</return>
	</function>
	<function name="ItemTextGetPage">
		<summary>Gets the page number of the currently item text</summary>
		<return name="page" type="number">The page number of the currently viewed page of the item text</return>
	</function>
	<function name="FrameXML_Debug">
		<summary>Enables or disables verbose XML logging</summary>
		<param name="enable" apitype="onenil">1 if verbose XML logging should be enabled, otherwise nil</param>
	</function>
	<function name="GetMacroInfo">
		<summary>Returns name, texture and body of a given macro</summary>
		<param name="macroIndex" type="number">The macro index to query.  Macros 1-18 are the general macros, while 19-36 are character specific.</param>
		<return name="name" type="string">The name of the macro</return>
		<return name="texture" type="string">The path to the macro's icon texture</return>
		<return name="body" type="string">The body of the macro</return>
		<return name="isLocal">Purpose unknown</return>
	</function>
	<function name="AcceptLevelGrant">
		<summary>Accepts a level that has been granted to you</summary>
	</function>
	<function name="GetCorpseRecoveryDelay">
		<summary>Gets the amount of time left until the player can recover their corpse</summary>
		<return name="timeLeft" type="number">The amount of time left until the player can recover their corpse, in seconds.  This returns 0 if the player can recover it immediately.</return>
	</function>
	<function name="GetCombatRating">
		<summary>Gets the amount of rating a player has for a given rating stat</summary>
		<param name="ratingIndex" type="number">The index of the rating to be queried</param>
		<return name="rating" type="number">The amount of rating bonus the player has</return>
	</function>
	<function name="GetPVPRankProgress" />
	<function name="IsInLFGQueue">
		<summary>Returns whether or not the player is currently in the LFG queue</summary>
		<return name="inQueue" apitype="onenil">1 if the player is currently in the LFG queue, otherwise nil</return>
	</function>
	<function name="HasFullControl">
		<summary>Returns whether or not the player has full control over their characters</summary>
		<return name="hasControl" apitype="onenil">1 if the player has full control over their characters (i.e. isn't feared, charmed, etc), otherwise nil</return>
	</function>
	<function name="CommentatorZoomOut" />
	<function name="MoveViewRightStop" />
	<function name="ClearFocus">
		<summary>Clears the player's focus unit</summary>
	</function>
	<function name="ExpandFactionHeader">
		<summary>Expands a given faction header</summary>
		<param name="index" type="number">The index of the faction header to collapse</param>
	</function>
	<function name="IsHarmfulItem">
		<summary>Returns whether or not an item is harmful (hostile to your target)</summary>
		<param name="itemName" type="string">The name of the item to query</param>
		<return name="isHarmful" apitype="onenil">1 if the item is harmful, otherwise nil</return>
	</function>
	<function name="ResetCPUUsage">
		<summary>Reset the current CPU usage statistics</summary>
	</function>
	<function name="BuyStableSlot">
		<summary>Purchases the next available stable slot, without confirmation</summary>
	</function>
	<function name="SetRaidSubgroup">
		<summary>Moves a raid member to a non-full raid subgroup</summary>
		<param name="index" type="number">The raid index of the player to move.  This can be obtained by mousing over the player in the raid frame, and running /run ChatFrame1:AddMessage(GetMouseFocus():GetID()).</param>
		<param name="subgroup" type="number">A non-full raid subgroup (1-8) where the player should be moved.</param>
	</function>
	<function name="GetCorpseMapPosition">
		<summary>Gets the position of the player's corpse on the world map.</summary>
		<return name="corpseX" type="number">The X coordinate for the player's corpse on the world map.  This number is given as a proportion of the total width of the WorldMapDetailFrame.</return>
		<return name="corpseY" type="number">The Y coordinate for the player's corpse on the world map.  This number is given as a proportion of the total height of the WorldMapDetailFrame.</return>
	</function>
	<function name="GetLFGTypeEntries">
		<summary>Gets the valid entries of a specific type in the LFG system</summary>
		<param name="type" type="number">The type of LFG request</param>
		<return name="entry" type="string">The name of the entry</return>
		<return name="token" type="string">A token sub-type for the entry.  For example the token for each entry of the "Zones" type returns the name of the continent the zone is on, while the tokens for dungeons returns a token representing the dungeon</return>
		<return name="...">A repeating list of entries and tokens</return>
	</function>
	<function name="GetAccountExpansionLevel">
		<summary>Gets the expansion level of the player's account</summary>
		<return name="expansionLevel" type="number">The expansion level of the player's account</return>
	</function>
	<function name="GetInstanceBootTimeRemaining">
		<summary>Gets the amount of time left until the player is removed from the current instance</summary>
		<return name="timeleft" type="number">The number of seconds until the player is booted from the current instance</return>
	</function>
	<function name="BuyGuildCharter">
		<summary>Purchases a guild charter with a given name</summary>
		<param name="guildName" type="string">The name of the guild</param>
	</function>
	<function name="CursorHasMacro">
		<summary>Returns whether or not the cursor currently holds a macro</summary>
		<return name="hasMacro" apitype="onenil">1 if the cursor currently holds a macro, otherwise nil</return>
	</function>
	<function name="GetPVPRankInfo">
		<summary>Returns information about a given PvP rank index</summary>
		<param name="index" type="number">The PvP index to query.  This index begins at 1, which maps to a negative PvP rank called "Pariah".  The initial PVP rank is found at index 5.</param>
		<param name="unit" type="string" apitype="unitid">A unit to use as the base faction for the PvP info.  The faction of the rank name (i.e. Legionnaire versus Knight-Captain for rank 8) is determined by the faction of this unit</param>
		<return name="rankName" type="string">The name of the PvP rank for the given faction</return>
		<return name="rankNumber" type="number">The numeric rank.  This will be different from the rank that was passed in as an argument.</return>
	</function>
	<function name="EnableAllAddOns">
		<summary>Enables all addons for the current character (takes effect at the next UI load)</summary>
	</function>
	<function name="GetQuestLogChoiceInfo">
		<summary>Returns information about an item available as a quest reward choice</summary>
		<param name="index" type="number">The index of a quest reward choice</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The texture of the item</return>
		<return name="numItems" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality of the item</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable, otherwise nil</return>
	</function>
	<function name="GetGuildBankMoney">
		<summary>Gets the amount of money available in the guild bank, in copper</summary>
		<return name="guildBankMoney" type="number">The amount of money available in the guild bank, in copper</return>
	</function>
	<function name="GetFactionInfo">
		<summary>Returns information about a specified faction index</summary>
		<param name="index" type="number">The index of the faction in the Reputation window</param>
		<return name="name" type="string">The name of the faction</return>
		<return name="description" type="string">The description of the faction, displayed in the faction detail window</return>
		<return name="standingID" type="number">The current standing with the given faction</return>
		<return name="barMin" type="number">The minimum value of the reputation bar at the given standing</return>
		<return name="barMax" type="number">The maximum value of the reputation bar at the given standing</return>
		<return name="barValue" type="number">The player's current reputation with the faction</return>
		<return name="atWarWith" apitype="onenil">1 if the player is at war with the given faction, otherwise nil</return>
		<return name="canToggleAtWar" apitype="onenil">1 if the player can declare war with a given faction, otherwise nil</return>
		<return name="isHeader" apitype="onenil">1 if the given faction index is a faction header</return>
		<return name="isCollapsed" apitype="onenil">1 if the faction index is a faction header, and collapsed</return>
		<return name="isWatched" apitype="onenil">1 if the faction is currently being watched (i.e. displayed above the experience bar)</return>
	</function>
	<function name="GetCursorPosition">
		<summary>Gets the coordinate position of the cursor on screen.</summary>
		<return name="cursorX" type="number">The current scale-independent X coordinate of the cursor</return>
		<return name="cursorY" type="number">The current scale-independent Y coordinate of the cursor</return>
	</function>
	<function name="setglobal">
		<summary>Sets a global variable to a specified value</summary>
		<param name="name" type="string">The name of a global variable</param>
		<param name="value">The value to set in the given variable</param>
	</function>
	<function name="GetGuildTabardFileNames">
		<summary>Gets the filenames of the textures that comprise the player's guild tabard</summary>
		<return name="tabardBackgroundUpper" type="string">The path to the texture for the upper background of the guild tabard</return>
		<return name="tabardBackgroundLower" type="string">The path to the texture for the lower background of the guild tabard</return>
		<return name="tabardEmblemUpper" type="string">The path to the texture for the upper emblem of the guild tabard</return>
		<return name="tabardEmblemLower" type="string">The path to the texture for the lower emblem of the guild tabard</return>
		<return name="tabardBorderUpper" type="string">The path to the texture for the upper border of the guild tabard</return>
		<return name="tabardBorderLower" type="string">The path to the texture for the lower border of the guild tabard</return>
	</function>
	<function name="IsGuildLeader">
		<summary>Returns whether or not the current player is guild leader</summary>
		<return name="isLeader" apitype="onenil">1 if the player is a guild leader, otherwise nil</return>
	</function>
	<function name="GetNumPetitionNames">
		<summary>Gets the number of people who have signed the open petition</summary>
		<return name="numNames" type="number">The number of names that have currently signed the open petition</return>
	</function>
	<function name="CollapseSkillHeader">
		<summary>Collapses a skill header in the Skills window</summary>
		<param name="index" type="number">The index of the skill header to collapse.  If this value is a skill instead of a skill header, the enclosing header will be collapsed.</param>
	</function>
	<function name="GetBindingKey">
		<summary>Gets the key combinations for a given binding command</summary>
		<param name="COMMAND" type="string">The name of a binding command to query</param>
		<return name="key1" type="string">The primary key combination bound to this command</return>
		<return name="..." type="string">A list of the other key combinations bound to this command.  Although the default user interface only allows two combinations to be bound to a command, more than two can be set via the API.  This function returns all known combinations for the given command.</return>
	</function>
	<function name="SortAuctionItems">
		<summary>Sorts the auction house listing</summary>
		<param name="type" type="string">The type of auction listing to sort</param>
		<param name="sort" type="string">The column to use to sort the listing</param>
	</function>
	<function name="CommentatorGetMapInfo" />
	<function name="GetFramerate">
		<summary>Gets the current graphical framerate</summary>
		<return name="framerate" type="number">The current graphical framerate</return>
	</function>
	<function name="PickupMerchantItem">
		<summary>Picks up an item from the merchant window, holding it on the cursor</summary>
		<param name="slot" type="number">The merchant item slot</param>
	</function>
	<function name="IsRightAltKeyDown">
		<summary>Returns whether or not the right Alt key is currently held down</summary>
		<return name="isDown" apitype="onenil">1 if the right Alt key on the keyboard is currently held down</return>
	</function>
	<function name="IsMouseButtonDown">
		<summary>Returns whether or not the given mouse button is held down</summary>
		<param name="button" type="string">The mouse button to query</param>
		<return name="isDown" apitype="onenil">1 if the mouse button is down, otherwise nil</return>
	</function>
	<function name="SetFactionActive">
		<summary>Sets a faction as the active faction</summary>
		<param name="index" type="number">The index the faction to set as active</param>
	</function>
	<function name="GetRewardSpell">
		<summary>Returns information about a spell quest reward</summary>
		<return name="texture" type="string">The path to the spell's icon texture</return>
		<return name="name" type="string">The name of the spell</return>
		<return name="isTradeskillSpell" apitype="onenil">1 if the spell is a tradeskill spell, otherwise nil</return>
		<return name="isSpellLearned" apitype="onenil">1 if the reward teaches the player a new spell</return>
	</function>
	<function name="GetTaxiBenchmarkMode">
		<summary>Returns whether or not taxi benchmark mode is enabled</summary>
		<return name="isBenchmark" apitype="onenil">1 if taxi benchmark mode is enabled, otherwise nil</return>
	</function>
	<function name="GetSendMailMoney">
		<summary>Gets the amount of money that will be sent with your next mail message</summary>
		<return name="money" type="number">The amount of money (in copper) to be sent</return>
	</function>
	<function name="CreateMiniWorldMapArrowFrame" />
	<function name="GMSurveySubmit">
		<summary>Submits the current GM survey</summary>
	</function>
	<function name="IsConsumableSpell">
		<summary>Returns whether or not a spell requires a consumable reagent</summary>
		<param />
		<param name="bookType" type="string" optional="true">The spell book type to look up the slot index in (required when slot index is used)</param>
		<return name="isConsumable" apitype="onenil">1 if the spell requires a consumable reagent, nil otherwise</return>
	</function>
	<function name="ChangeActionBarPage">
		<summary>Changes the current action bar page</summary>
		<param name="page" type="number">The action bar page to change to</param>
	</function>
	<function name="GetTradeSkillItemLink">
		<summary>Returns an item link for the given tradeskill item</summary>
		<param name="index" type="number">The index of a tradeskill item</param>
		<return name="link" type="string">The item link for the given item</return>
	</function>
	<function name="GetInboxItem">
		<summary>Returns information about an item attached to a received mail</summary>
		<param name="messageIndex" type="number">The index of the message to query</param>
		<param name="attachIndex" type="number">The attachment index of the message to query (1-16)</param>
		<return name="name" type="string">The name of the item</return>
		<return name="itemTexture" type="string">The path to the item's icon texture</return>
		<return name="count" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The item quality</return>
		<return name="canUse" apitype="onenil">1 if the item can be used by the player, otherwise nil</return>
	</function>
	<function name="SetTaxiBenchmarkMode">
		<summary>Turns on flight path "benchmark" mode.</summary>
	</function>
	<function name="SortGuildRoster">
		<summary>Sorts the guild roster</summary>
		<param name="type" type="string">The type of criteria to sort by</param>
	</function>
	<function name="GetXPExhaustion">
		<summary>Gets the amount of rested experience the player has earned</summary>
		<return name="exhaustionXP" type="number">The amount of rested experience the player currently has earned.  Each time the player gains experience from killing monsters, this value will decrease by the total amount of experience gained, not just the amount of rested experience bonus awarded.</return>
	</function>
	<function name="UnitDefense">
		<summary>Gets the units defense statistics.</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="base" type="number">Base defense.</return>
		<return name="modifier" type="number">Defense modifier from gear and buffs.</return>
	</function>
	<function name="IsMacClient">
		<summary>Returns whether or not the running client is a Mac</summary>
		<return name="isMac" apitype="onenil">1 if the client is a Mac client, otherwise nil</return>
	</function>
	<function name="SetSendMailShowing">
		<summary>Controls whether or not right-clicking an item attaches it to the mail to be sent</summary>
		<param name="enable" type="boolean">If true, enables right-click to attach items to the mail to be sent</param>
	</function>
	<function name="GetQuestReward">
		<summary>Selects an offered quest reward without confirmation</summary>
		<param name="choice" type="number">The quest reward choice</param>
	</function>
	<function name="GetAuctionSellItemInfo">
		<summary>Returns information about the item being placed on auction</summary>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the icon texture for the item</return>
		<return name="count" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality level of the item</return>
		<return name="canUse" apitype="onenil">1 if the item can be used by the player, otherwise nil</return>
		<return name="price" type="number">How much the item would sell for to a vendor</return>
	</function>
	<function name="CombatLogGetRetentionTime">
		<summary>Gets the amount of time combat log entries are stored</summary>
	</function>
	<function name="CloseBankFrame">
		<summary>Closes the bank frame</summary>
	</function>
	<function name="GetInventoryItemTexture">
		<summary>Gets the item texture for a specific inventory item</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query.  This is normally "player" but can also work on the unit you are currently inspecting.</param>
		<param name="slot" type="number">The inventory slot to query</param>
		<return name="texture" type="string">The path to the inventory item's icon texture</return>
	</function>
	<function name="IsControlKeyDown">
		<summary>Returns whether or not a Control key on the keyboard is held down</summary>
		<return name="isDown" apitype="onenil">1 if a Control key on the keyboard is currently held down</return>
	</function>
	<function name="LoadBindings">
		<summary>Loads a set of keybindings</summary>
		<param name="set" type="number">Which set of keybindings should be loaded</param>
	</function>
	<function name="GetStablePetFoodTypes">
		<summary>Gets the types of food that a stabled pet will eat</summary>
		<param name="index" type="number">The index of a stabled pet, or 0 for the active pet.</param>
		<return name="..." type="string">A list of strings, each containing a food that the stabled pet will eat</return>
	</function>
	<function name="GetRewardTitle">
		<summary>Gets the title you will be rewarded for completing the quest currently displayed in by an NPC</summary>
	</function>
	<function name="ItemTextNextPage">
		<summary>Asks the game to move the currently open book, or other readable object to the next page of text.</summary>
	</function>
	<function name="IsFishingLoot">
		<summary>Returns whether or not the currently displayed loot is fishing loot</summary>
		<return name="isFishing" apitype="onenil">1 if the currently displayed loot is fishing loot, otherwise nil</return>
	</function>
	<function name="GetBuybackItemInfo">
		<summary>Returns information about an item in the merchant buyback window</summary>
		<param name="slot" type="number">The slot in the merchant buyback window</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="price" type="number">The price of the item, in copper</return>
		<return name="quantity" type="number">The number of items per stack</return>
		<return name="numAvailable" type="number">The number of items available for purchase</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable, otherwise nil</return>
	</function>
	<function name="GetCVarInfo">
		<summary>Returns information about the named CVar</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="value" type="string">The current value of the CVar</return>
		<return name="defaultValue" type="string">The default value of the CVar</return>
		<return name="serverStoredAccountWide" apitype="onenil">1 if the CVar is stored on the server, per account</return>
		<return name="serverStoredPerCharacter" apitype="onenil">1 if the CVar is stored on the server, per character</return>
	</function>
	<function name="GetWaterDetail">
		<summary>Gets the current value of the water detail option</summary>
		<return name="value" type="number">The current value of the water detail option</return>
	</function>
	<function name="GetSummonConfirmAreaName">
		<summary>Gets the destination area of the pending summon spell</summary>
		<return name="area" type="string">The destination area of the pending summon spell</return>
	</function>
	<function name="HasNewMail">
		<summary>Returns whether or not the player has new mail</summary>
		<return name="hasMail" apitype="onenil">1 if the player has new mail, otherwise nil</return>
	</function>
	<function name="AutoEquipCursorItem">
		<summary>Tries to equip the item currently held on the cursor</summary>
	</function>
	<function name="issecurevariable">
		<summary>Returns whether or not a variable is secure and if not, what addon tainted the variable</summary>
		<param name="table" type="table" optional="true">A table to be used when checking table elements</param>
		<param name="variable" type="string">The name of a variable to check.  In order to check the status of a table element, you should specify the table, and then the key of the element</param>
		<return name="issecure" apitype="onenil">1 if the variable is secure, otherwise nil</return>
		<return name="taint" type="string">The name of the addon that tainted the variable</return>
	</function>
	<function name="GetQuestText">
		<summary>Gets the text for the currently displayed quest</summary>
		<return name="text" type="string">The text for the currently displayed quest</return>
	</function>
	<function name="SetLootThreshold">
		<summary>Sets the loot threshold to a specific item quality</summary>
		<param name="quality" type="number">The minimum item quality to use for the loot method.  This is set to 2 - Uncommon items by default.</param>
	</function>
	<function name="GetPetHappiness">
		<summary>Returns information about the player's pet's happiness</summary>
		<return name="happiness" type="number">The happiness level of the pet</return>
		<return name="damagePercentage" type="number">The percentage multiplier for the pet's damage.  This is affected by the pet's happiness</return>
		<return name="loyaltyRate" type="number">The current rate of loyalty gain or loss.  Positive values indicate that the pet is gaining loyalty, while negative values indicate the pet is losing loyalty</return>
	</function>
	<function name="GetGreetingText">
		<summary>Gets the greeting text displayed for quest NPCs with multiple quests</summary>
		<return name="greetingText" type="string">The greeting text displayed for quest NPCs</return>
	</function>
	<function name="CommentatorFollowPlayer" />
	<function name="RenamePetition">
		<summary>Renames the open petition</summary>
		<param name="name" type="string">The new name for the petition</param>
	</function>
	<function name="SetWaterDetail">
		<summary>Sets the value for the water details display</summary>
		<param name="value" type="number">The new value for the water detail</param>
	</function>
	<function name="hooksecurefunc">
		<summary>Add a function to be called after the original secure function.</summary>
		<param name="table" type="table" optional="true">A table object that contains the function to be hooked</param>
		<param name="function" type="string">The name of the function to be hooked</param>
		<param name="hookfunc" type="function">The function to be called each time the original function is called</param>
	</function>
	<function name="getn">
		<summary>An alias for table.getn</summary>
	</function>
	<function name="getglobal">
		<summary>Returns a global variable with a given name</summary>
		<param name="str" type="string">The name of a global variable to get</param>
		<return name="var">The global variable with the given name</return>
	</function>
	<function name="geterrorhandler">
		<summary>Returns a reference to the current error handler.</summary>
		<return name="handler" type="function">The current error handler</return>
	</function>
	<function name="CreateFont">
		<summary>Creates a new font object</summary>
		<param name="name" type="string">The name of the font object to create</param>
		<return name="fontObject" type="table">The newly created font object</return>
	</function>
	<function name="UnitPlayerOrPetInRaid">
		<summary>Returns whether or not a given unitid is a member of the player's raid</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
	</function>
	<function name="PartialPlayTime">
		<summary>Returns whether the character gains partial xp or not.</summary>
		<return name="partialPlayTime" apitype="onenil">1 if the character gains only partial xp, nil if not.</return>
	</function>
	<function name="IsPetAttackActive">
		<summary>Returns whether or not the pet's attack action is currently active</summary>
		<param name="index" type="number">The index of the pet's attack action</param>
		<return name="isActive" apitype="onenil">1 if the pet's attack action is currently active, otherwise nil</return>
	</function>
	<function name="CancelPendingEquip">
		<summary>Cancels a pending equip action</summary>
	</function>
	<function name="Logout">
		<summary>Logs out of the current character, taking your back to the character selection screen</summary>
	</function>
	<function name="GetQuestIndexForTimer">
		<summary>Gets the questlog quest index for the given timer in the QuestTimer frame.</summary>
		<param name="index" type="number">Timer index to query</param>
		<return name="questIndex" type="number">QuestLog quest index</return>
	</function>
	<function name="SetLootPortrait">
		<summary>Sets a texture to the current loot portrait</summary>
		<param name="texture" type="table">The portrait texture to set</param>
	</function>
	<function name="ShowHelm">
		<summary>Enables or disables the display of the players helm</summary>
		<param name="show" apitype="onenil">1 to enable helm display, otherwise nil</param>
	</function>
	<function name="UnitAura" />
	<function name="GetTrainerServiceIcon">
		<summary>Gets the icon for a given trainer service (spell or skill)</summary>
		<param name="index" type="number">The index of a service in the trainer window</param>
		<return name="icon" type="string">The path to the service's icon texture</return>
	</function>
	<function name="CreateFrame">
		<summary>Creates a new frame object dynamically</summary>
		<param name="frameType" type="string">The type of the frame to create.</param>
		<param name="name" type="string" optional="true">The name of the new frame. If given, will also create an entry in the global namespace for the created frame under the specified name.</param>
		<param name="parent" type="table" optional="true">A reference to the parent of the new frame.</param>
		<param name="template" type="string" optional="true">The name of the template to be used for creating the new frame, or a comma separated list of templates to be used</param>
		<return name="frame" type="table">A reference to the newly created frame.</return>
	</function>
	<function name="GetAuctionItemLink">
		<summary>Returns an item link for a given auction item</summary>
		<param name="type" type="string">The type of auction house listing to query</param>
		<param name="index" type="number">The index of the item in the listing</param>
		<return name="link" type="string">An item link for the given item</return>
	</function>
	<function name="ArenaTeamLeave">
		<summary>Leaves an arena team</summary>
		<param name="team" type="number">The index of the team to leave.</param>
	</function>
	<function name="GetRestState">
		<summary>Gets the player's current rest state</summary>
		<return name="state" type="number">The player's current rest state</return>
		<return name="name" type="string">The name of the player's current rest state</return>
		<return name="multiplier" type="number">The experience multiplier currently active for the player</return>
	</function>
	<function name="ceil">
		<summary>An alias for math.ceil</summary>
		<param name="value" type="number">The input value</param>
		<return name="ceiling" type="number">The ceiling of the given number</return>
	</function>
	<function name="GetMuteName">
		<summary>Gets name of a character on the player's mute list</summary>
		<param name="index" type="number">The index of an entry in the mute listing</param>
		<return name="name" type="string">The name of the player being voice muted</return>
	</function>
	<function name="VoiceSelectCaptureDevice">
		<summary>Selects a voice capture device</summary>
		<param name="deviceName" type="string">The name of a voice capture device.  This can be obtained using VoiceEnumerateCaptureDevices().</param>
	</function>
	<function name="VoicePushToTalkStop">
		<summary>Used internally to stop talking, when push-to-talk is active in voice chat</summary>
	</function>
	<function name="GetSpellCount">
		<summary>Gets the number of times a spell with a reagent can be cast</summary>
		<paramchoice>
			<param name="name" type="string">The name of a spell to query</param>
			<param name="spellId" type="number">A spellId to query</param>
		</paramchoice>
		<return name="numCasts" type="number">The number of spellcasts that can be made with the current number of reagents</return>
	</function>
	<function name="VoiceIsDisabledByClient">
		<summary>Returns whether or not the voice chat system is disabled due to hardware reasons</summary>
		<return name="isDisabled" apitype="onenil">1 if the voice system is disabled, otherwise nil</return>
	</function>
	<function name="VoiceGetCurrentOutputDevice">
		<summary>Gets the index of the current voice output device</summary>
		<return name="index" type="number">The index of the current voice output device</return>
	</function>
	<function name="ShowingHelm">
		<summary>Returns whether or not the helm is currently being shown</summary>
		<return name="isShowing" apitype="onenil">1 if the helm is being shown, otherwise nil</return>
	</function>
	<function name="AcceptGuild">
		<summary>Accept an invitation to join a guild</summary>
	</function>
	<function name="IsActiveQuestTrivial">
		<summary>Returns whether or not an active quest in the QuestFrame is considered trivial</summary>
		<param name="index" type="number">The index of an active quest in the QuestFrame</param>
		<return name="isTrivial" apitype="onenil">1 if the quest is considered trivial</return>
	</function>
	<function name="HasAction">
		<summary>Returns a flag if an action slot is occupied.</summary>
		<param name="slot" type="number">Action slot number</param>
		<return name="hasAction" type="boolean">Returns 1 if the slot contains an action, else nil</return>
	</function>
	<function name="GetStationeryInfo">
		<summary>Returns information about a given stationery</summary>
		<param name="index" type="number">A stationery index</param>
		<return name="name" type="string">The name of the stationery</return>
		<return name="texture" type="string">The path to the stationery texture</return>
		<return name="cost" type="number">The cost of the stationery, in copper</return>
	</function>
	<function name="KBSetup_GetLanguageCount">
		<summary>Gets the number of available knowledge base languages</summary>
		<return name="numLanguages" type="number">The number of available knowledge base languages</return>
	</function>
	<function name="KBSystem_GetServerNotice">
		<summary>Gets the text of the knowledgebase server system notice</summary>
		<return name="text" type="string">The text of the knowledgebase system server notice</return>
	</function>
	<function name="GetRepairAllCost">
		<summary>Gets the cost to repair all damaged items</summary>
		<return name="repairAllCost" type="number">The cost to repair all items, in copper.  If the player doesn't need to repair any items, this returns 0.</return>
		<return name="canRepair" apitype="onenil">1 if the player needs to, and can repair.  This return is used to enable/disable the repair all button in the merchant frame.</return>
	</function>
	<function name="GetTradeSkillTools">
		<summary>Gets the required tradeskill tools for a given tradeskill recipe</summary>
		<param name="index" type="number">The index of a tradeskill recipe in the tradeskill UI</param>
		<return name="toolName" type="string">The name of the tool required for the given tradeskill</return>
		<return name="hasTool" apitype="onenil">1 if the player currently has the required tool, otherwise nil.  This value may not be accurate for all requires tools, such as the Mana Loom required for creating Imbued Netherweave Cloth.  This function only seems to work for tools that are inventory items.</return>
		<return name="...">Multiple returns are used when there are multiple required tools</return>
	</function>
	<function name="GetBattlefieldEstimatedWaitTime">
		<summary>Gets the estimated wait time on a battleground or arena queue</summary>
		<param name="index" type="number">The index of the battleground or arena as listed in the tooltip for the minimap battle status icon</param>
		<return name="waitTime" type="number">The estimated wait time in milliseconds.</return>
	</function>
	<function name="GetInboxText">
		<summary>Returns information about the text of an inbox message</summary>
		<param name="index" type="number">The index of a mail item in the inbox</param>
		<return name="bodyText" type="string">The text of the mail message</return>
		<return name="texture" type="string">The stationery texture to be displayed</return>
		<return name="isTakeable" apitype="onenil">1 if the text of the message can be taken from the message, otherwise nil</return>
		<return name="isInvoice" apitype="onenil">1 if the inbox message is an auction house invoice, otherwise nil</return>
	</function>
	<function name="VoiceEnumerateCaptureDevices">
		<summary>Gets the name of a voice capture device</summary>
		<param name="deviceIndex" type="number">The index of the capture device</param>
		<return name="deviceName" type="string">The name of the voice capture device</return>
	</function>
	<function name="IsSpellInRange">
		<summary>Returns whether or not a spell is in range of a given unit</summary>
		<param name="spell" type="string">The name of a spell to query</param>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="inRange" apitype="onenil">1 if the spell is in range of the given unit, otherwise nil</return>
	</function>
	<function name="IsRealRaidLeader">
		<summary>Returns whether or not the player is the leader of their non-battleground raid party</summary>
		<return name="isLeader" apitype="onenil">1 if the player is the leader of the "real" raid.  When in arena/battlegrounds the player is still a member of whatever party or raid they belonged to prior to beginning the match.</return>
	</function>
	<function name="GetNumDisplayChannels">
		<summary>Gets the number of channels in the channel display</summary>
		<return name="channelCount" type="number">The number of channels (including headers) displayed in the chat tab channel display</return>
	</function>
	<function name="VoiceChat_StopCapture" />
	<function name="VoiceChat_StartCapture" />
	<function name="IsCurrentAction">
		<summary>Returns whether or not a specific action is currently being cast, or awaiting targeting </summary>
		<param name="slot" type="number">An actionbar slot</param>
		<return name="isCurrent" apitype="onenil">1 if the given action is currently being cast or is the action currently awaiting targeting, otherwise nil</return>
	</function>
	<function name="VoiceChat_RecordLoopbackSound">
		<summary>Records a short voice recording for testing purposes.</summary>
		<param name="seconds" type="number">The amount of time to record (in seconds)</param>
	</function>
	<function name="GetPetIcon">
		<summary>Gets the icon the player's pet would have if stabled</summary>
		<return name="icon" type="string">The path to the pet's icon texture, or nil</return>
	</function>
	<function name="GetCritChance">
		<summary>Gets the player's percent melee critical strike chance</summary>
		<return name="critChance" type="number">The player's percent chance to crit for melee attacks.</return>
	</function>
	<function name="SetSelectedSkill">
		<summary>Sets the currently selected skill in the skills window.</summary>
		<param name="index" type="number">The index of a skill in the skill window, including skill headers</param>
	</function>
	<function name="ArenaTeamDisband">
		<summary>Disbands an arena team</summary>
		<param name="team" type="number">The index of the arena team to disband.  These indices begin at 1, with 1 always being the smallest team the player is a part of.  For example, if the player is only a member of a 3v3 and 5v5 team then the index 1 will be the 3v3 team, and the index 2 will be the 5v5 team.</param>
	</function>
	<function name="MoveForwardStop" />
	<function name="VoiceChat_GetCurrentMicrophoneSignalLevel">
		<summary>Gets the current volume level of the microphone signal</summary>
		<return name="volume" type="number">The current volume level of the microphone signal</return>
	</function>
	<function name="UseInventoryItem">
		<summary>Uses an item from the player's inventory</summary>
		<param name="slot" type="number">An inventory slot id</param>
	</function>
	<function name="UseContainerItem">
		<summary>Use an item from one of your containers, optionally on a target</summary>
		<param name="index" type="number">The container that contains the item</param>
		<param name="slot" type="number">The slot that contains the item</param>
		<param name="target" type="string" optional="true">The target that the item should be used on</param>
	</function>
	<function name="SetLFMType">
		<summary>Sets the type of the current LFM request</summary>
		<param name="id" type="number">The type of LFM request to query</param>
	</function>
	<function name="UseAction" />
	<function name="GetNumQuestLogEntries">
		<summary>Gets the number of quest log entries</summary>
		<return name="numEntries" type="number">The number of quest log entries</return>
	</function>
	<function name="Dismount">
		<summary>Dismounts the player</summary>
	</function>
	<function name="GetCursorMoney">
		<summary>Gets the amount of money currently held by the cursor, in copper</summary>
		<return name="cursorMoney" type="number">The amount of money currently held by the cursor, in copper</return>
	</function>
	<function name="GetSuggestedGroupNum">
		<summary>Gets the size of the suggested group for the currently displayed quest</summary>
		<return name="suggestedGroup" type="number">The size of a suggested group for the currently displayed quest, or 0</return>
	</function>
	<function name="UpdateSpells">
		<summary>Updates the spells in the players spellbook.</summary>
	</function>
	<function name="GetMouseButtonName">
		<summary>Converts a mouse button number to a mouse button name</summary>
		<param name="buttonNumber" type="number">A mouse button number (1-5)</param>
		<return name="buttonName" type="string">The name of the given mouse button</return>
	</function>
	<function name="SetLFGAutojoin">
		<summary>Enables auto-join in the LFG system</summary>
	</function>
	<function name="UpdateGMTicket">
		<summary>Updates the current GM Ticket with the appropriate text</summary>
		<param name="type" type="string">Specific GM Ticket Type from the available list</param>
		<param name="text" type="string">Updated GM Ticket text</param>
	</function>
	<function name="IsEquippableItem">
		<summary>Returns whether or not a given item is equippable</summary>
		<return name="isEquippable" apitype="onenil">1 if the item is equippable, otherwise nil</return>
	</function>
	<function name="GetNumTalentTabs">
		<summary>Gets the number of talent tabs for the player, or a the currently inspected unit</summary>
		<param name="inspect" type="boolean">true to query the currently inspected unit, false to query talent info for the player</param>
		<return name="numTabs" type="number">The number of talent tabs</return>
	</function>
	<function name="CommentatorSetMoveSpeed" />
	<function name="DescendStop">
		<summary>Called when the player releases the sit/descend key (while swimming or flying)</summary>
	</function>
	<function name="GetWhoInfo">
		<summary>Returns information about a specific index of a who requests's results</summary>
		<param name="index" type="number">The index of an entry in the who list</param>
		<return name="name" type="string">The name of the player</return>
		<return name="guild" type="string">The player's guild name</return>
		<return name="level" type="number">The player's level</return>
		<return name="race" type="string">The localized name of the player's race</return>
		<return name="class" type="string">The localized name of the player's class</return>
		<return name="zone" type="string">The player's current zone</return>
		<return name="filename" type="string">The english uppercase name of the player's class</return>
	</function>
	<function name="MoveBackwardStart" />
	<function name="LootSlotIsCoin">
		<summary>Returns whether or not a given loot slot contains coins</summary>
		<param name="slot" type="number">The loot slot index to query</param>
		<return name="isCoin" apitype="onenil">1 if the loot slot contains coins, otherwise nil</return>
	</function>
	<function name="UnitPowerType">
		<summary>Gets the power type (energy, mana, rage) of the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="powerType" type="number">A number indicating what power type the unit has</return>
	</function>
	<function name="UnitXP">
		<summary>Gets the amount of experience that the unit currently has</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query.</param>
		<param name="name" type="string">The full name of the character to query</param>
		<return name="currXP" type="number">The amount of experience the unit currently has</return>
	</function>
	<function name="IsDisplayChannelModerator">
		<summary>Returns whether or not the player is a moderator of the currently selected display channel in the Chat tab</summary>
		<return name="isModerator" apitype="onenil">1 if the player is a moderator of the currently selected display channel, nil otherwise</return>
	</function>
	<function name="GetModifiedClickAction">
		<summary>Gets the token/name for a modified click action</summary>
		<param name="index" type="number">The index of a modified click action.  Valid indices seem to be between 1 and GetNumModifiedClickActions(), with not every single index returning an action</param>
		<return name="action" type="string">The name/token for the given action</return>
	</function>
	<function name="CursorCanGoInSlot">
		<summary>Returns whether or not the item on the cursor can be placed in the given slot</summary>
		<param name="slot" type="number">The slot number on the PaperDollFrame</param>
		<return name="canBePlaced" apitype="onenil">1 if the item on the cursor can be placed in the given inventory slot, otherwise nil</return>
	</function>
	<function name="UnitSex">
		<summary>Gets the gender of the given unit or player</summary>
		<param name="unit" type="string" apitype="unitid">The unitId to query</param>
		<param name="name" type="string">The name of a player to query.</param>
		<return name="gender" type="number">The gender of the unit or player</return>
	</function>
	<function name="AddQuestWatch">
		<summary>Adds a quest to the quest tracker</summary>
		<param name="questIndex" type="number">The index of a quest in the quest log</param>
	</function>
	<function name="StrafeRightStart">
		<summary>Begins strafing to the right.</summary>
	</function>
	<function name="TargetLastTarget">
		<summary>Targets the last targeted unit</summary>
	</function>
	<function name="GetQuestIndexForWatch">
		<summary>Gets the index in the quest log of a currently watched quest</summary>
		<param name="index" type="number">The index of a quest in the "watched" quest list</param>
		<return name="questIndex" type="number">The index of the watched quest in the quest log</return>
	</function>
	<function name="GetSpellPenetration">
		<summary>Gets the amount of spell penetration the player currently has</summary>
		<return name="penetration" type="number">The amount of spell penetration rating the player currently has</return>
	</function>
	<function name="SetView">
		<summary>Sets the camera view to one of the pre-set views</summary>
		<param name="index" type="number">Sets the camera view to one of the pre-set views.  These views can have been previously saved with the SaveView() function, otherwise the game's default views are used.</param>
	</function>
	<function name="GetTrainerGreetingText">
		<summary>Gets the greeting text for the currently (or last) open trainer</summary>
		<return name="text" type="string">The greeting text for the currently (or last) open trainer.  This is the text displayed at the top of the trainer window.</return>
	</function>
	<function name="AcceptSkillUps" />
	<function name="UnitMana">
		<summary>Gets the current mana points of the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit of interest</param>
		<return name="mana" type="string" apitype="unitid">The unit's current mana points</return>
	</function>
	<function name="GuildRosterSetOfficerNote">
		<summary>Sets an officer note for a guild member</summary>
		<param name="index" type="number">The index of a guild member in the guild UI</param>
		<param name="note" type="string">The note to set for the given guild member</param>
	</function>
	<function name="UnitManaMax">
		<summary>Gets the maximum mana or other power that a given unit can have</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The name of the player, the player's pet, or a member of the player's party or raid</param>
		</paramchoice>
		<return name="maxValue" type="number">The maximum amount of mana (or other power) the unit can have.  If the unit is not a member of the player's party or raid this function will always return 100 (since it operates in percentage values).  This function is used for Mana, Energy, Focus and Rage.</return>
	</function>
	<function name="GetTrainerServiceStepReq" />
	<function name="UnitRangedAttackPower">
		<summary>Returns a unit's ranged attack power and bonuses</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query.  Only "player" and "pet" or their equivalents are valid</param>
		<return name="base" type="number">Base ranged attack power</return>
		<return name="posBuff" type="number">Positive buffs to ranged attack power</return>
		<return name="negBuff" type="number">Negative buffs to ranged attack power</return>
	</function>
	<function name="StrafeLeftStart">
		<summary>Makes the character start strafing left.</summary>
	</function>
	<function name="UnitPlayerOrPetInParty">
		<summary>This function will tell you if the unit in question is in your party.</summary>
		<param />
		<return name="inParty" apitype="onenil">1 if the unit, player or pet is in the party, otherwise nil.</return>
	</function>
	<function name="UnitPlayerControlled">
		<summary>Returns whether or not the given unit is a player controlled character</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isPlayer" apitype="onenil">1 if the unit is a player controlled character, otherwise nil</return>
	</function>
	<function name="UnitIsVisible">
		<summary>Returns whether or not the given unit is visible (in the player's area of interest)</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="isVisible" apitype="onenil">1 if the unit is visible, otherwise nil</return>
	</function>
	<function name="UnitPVPName">
		<summary>Gets the name of the unit with the selected PVP title prepended to it</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="name" type="string">The name of the unit with the selected PVP title prepended to it</return>
	</function>
	<function name="TogglePerformancePause" />
	<function name="UnitRangedDamage">
		<summary>Returns information about a unit's range attack damage and speed</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="rangedAttackSpeed" type="number">The speed of the unit's ranged attack, or 0 if no ranged weapon is equipped</return>
		<return name="minDamage" type="number">The minimum base damage per attack</return>
		<return name="maxDamage" type="number">The maximum base damage per attack</return>
		<return name="physicalBonusPos" type="number">The amount of bonus physical damage, includes Spell Damage bonuses</return>
		<return name="physicalBonusNeg" type="number">The amount of negative modifiers to physical damage</return>
		<return name="percent" type="number">A percentage modifier, represented as decimal 0 to 1</return>
	</function>
	<function name="GetTrainerServiceSkillLine">
		<summary>Gets the name of the given skill line</summary>
		<param name="index" type="number">The index of the skill line to query</param>
		<return name="skillLine" type="string">The name of the given skill line (for example "Herbalism")</return>
	</function>
	<function name="ClickTradeButton">
		<summary>Clicks a specific trade window button</summary>
		<param name="index" type="number">The index of the trade button window to click</param>
	</function>
	<function name="GetPetTimeRemaining">
		<summary>Gets the time till despawn of a temporary pet like shadowfiend and mages' water elemental.</summary>
		<return name="petTimeRemaining" type="number">Time till despawn in milliseconds, nil without a temporary pet.</return>
	</function>
	<function name="UnitLevel">
		<summary>Gets the level of a given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="level" type="number">The level of the unit.  If the level is unknown (due to it being too high) this will return -1.</return>
	</function>
	<function name="UnitPVPRank">
		<summary>Returns a unit's PVP rank as a number</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="rank" type="number">The numeric PVP rank of the unit.  If the unit has no PVP rank, this returns 0.</return>
	</function>
	<function name="GetLookingForGroup">
		<summary>Retrieves information about the players LFG status.</summary>
		<return name="type1" type="number">The index of the first selected group type.</return>
		<return name="name1" type="number">The index of the first selected objective.</return>
		<return name="type2" type="number">The index of the second selected group type.</return>
		<return name="name2" type="number">The index of the second selected objective.</return>
		<return name="type3" type="number">The index of the third selected group type.</return>
		<return name="name3" type="number">The index of the third selected objective.</return>
		<return name="lfmType" type="number">The index of the selected group type on the LFM tab.</return>
		<return name="lfmName" type="number">The index of the selected objective on the LFM tab.</return>
		<return name="comment" type="string">The comment entered on the LFG tab.</return>
		<return name="queued" type="boolean">true if the player is queued to join a group ( Auto Join is ticked ), false otherwise</return>
		<return name="lfgStatus" type="boolean">true if the player is looking for a group, false otherwise</return>
		<return name="lfmStatus" type="boolean">true if the player is looking for more players for his group, false otherwise</return>
		<return name="autoaddStatus" type="boolean">true if the player choose to automatically add members to his group that fit the criteria, false otherwise</return>
	</function>
	<function name="UnitIsTapped">
		<summary>Returns whether or not a unit is tapped by anyone (not necessarily the player)</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
	</function>
	<function name="PetPassiveMode">
		<summary>Sets the pet into passive mode</summary>
	</function>
	<function name="SortWho">
		<summary>Sets the sort method for the "Who" list</summary>
		<param name="sortType" type="string">A sort type used to sort the list</param>
	</function>
	<function name="CommentatorZoomIn" />
	<function name="UnitIsTalking">
		<summary>Returns 1 if the unit is currently talking, or nil otherwise.</summary>
		<param name="name" type="string">The name of the unit in question.</param>
		<return name="state" apitype="onenil">1 if the unit is currently talking, otherwise nil.</return>
	</function>
	<function name="GetShapeshiftFormInfo">
		<summary>Returns information about a shapeshift form</summary>
		<param name="index" type="number">The index of a shapeshift form</param>
		<return name="texture" type="string">The path to the shapeshift form's icon texture</return>
		<return name="name" type="string">The name of the shapeshift form</return>
		<return name="isActive" apitype="onenil">1 if the shapeshift form is currently active, otherwise nil</return>
		<return name="isCastable" apitype="onenil">1 if the shapeshift form is currently castable, otherwise nil</return>
	</function>
	<function name="UnitIsSameServer">
		<summary>Returns whether or not two units are from the same server</summary>
		<param />
		<param />
		<return name="isSame" apitype="onenil">1 if the two units are from the same server, otherwise nil.</return>
	</function>
	<function name="StopAttack">
		<summary>Stops auto-attack if active</summary>
	</function>
	<function name="UnitIsPossessed">
		<summary>Returns whether or not the given unit is possessed (through for example Mind Control)</summary>
		<param />
		<return name="isPossessed" apitype="onenil">1 if the given unit is possessed, nil otherwise</return>
	</function>
	<function name="UnitIsPlusMob">
		<summary>Returns whether or not the given unit is an elite mob</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isPlus" apitype="onenil">1 if the unit is an elite mob, otherwise nil</return>
	</function>
	<function name="ShowMiniWorldMapArrowFrame">
		<summary>Shows or hides the battlefield minimap's player arrow</summary>
		<param name="show" type="boolean">If the battlefield minimap's player arrow should be shown</param>
	</function>
	<function name="GetMouseButtonClicked">
		<summary>Returns which mouse button triggered the current click</summary>
		<return name="button" type="string">The name of the mouse button that triggered the given click</return>
	</function>
	<function name="GetWatchedFactionInfo">
		<summary>Returns information about the faction currently being watched</summary>
		<return name="name" type="string">The name of the faction being watched</return>
		<return name="reaction" type="number">The current faction standing, as a number</return>
		<return name="min" type="number">The minimum value for the faction status bar</return>
		<return name="max" type="number">The maximum value for the faction status bar</return>
		<return name="value" type="number">The current value for the faction status bar</return>
	</function>
	<function name="ChannelUnSilenceVoice">
		<summary>Unsilences a player on a given channel</summary>
		<paramchoice>
			<param name="channelName" type="string">The name of a channel</param>
			<param name="channelId" type="number">The numeric index of a channel</param>
		</paramchoice>
	</function>
	<function name="GetTradeSkillSelectionIndex">
		<summary>Gets the index of the currently selected line in the Tradeskill window</summary>
		<return name="index" type="number">The index of the currently selected line in the tradeskill window</return>
	</function>
	<function name="UnitIsPVPFreeForAll">
		<summary>Returns whether the unit is flagged for free-for-all PVP, EG in a world Arena</summary>
		<param name="unit" type="string" apitype="unitid">The unitid of the unit to query</param>
		<return name="isFreeForAll" type="boolean">Whether the unit is flagged for free-for-all PVP</return>
	</function>
	<function name="IsQuestWatched">
		<summary>Returns whether or not a given quest is currently being watched</summary>
		<param name="index" type="number">The index of a quest in the quest log</param>
		<return name="isWatched" apitype="onenil">1 if the quest is being watched, otherwise nil</return>
	</function>
	<function name="UnitIsPVP">
		<summary>Returns whether or not a unit is PVP enabled</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="isPVP" apitype="onenil">1 if the unit is PVP enabled, otherwise nil</return>
	</function>
	<function name="GetNumFriends">
		<summary>Gets the number of friends on the player's friend list</summary>
		<return name="numFriends" type="number">The number of friends on the player's friend list</return>
	</function>
	<function name="UnitIsInMyGuild">
		<summary>Returns whether or not a given unit or player is in the player's guild</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="inGuild" apitype="onenil">1 if the unit is in the player's guild, otherwise nil</return>
	</function>
	<function name="GetUnitPowerModifier">
		<summary>Gets the power modifier for a pet.  Used to modify the amount of mana a pet gains from +intellect.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="modifier" type="number">Power Modifier</return>
	</function>
	<function name="KeyRingButtonIDToInvSlotID">
		<summary>Converts a key ring slotID to an inventory slotID</summary>
		<param name="buttonID" type="number">The index of the key in the keyring.  The top-left slot is 1, and proceed from left to right, top to bottom.</param>
		<return name="inventoryID" type="number">The inventoryID that corresponds to the given key ring slot</return>
	</function>
	<function name="GetBattlefieldScore">
		<summary>Returns information about a specific line in the battleground or arena score list</summary>
		<param name="index" type="number">The index of the row in the battlefield score data</param>
		<return name="name" type="string">The name of the player</return>
		<return name="killingBlows" type="number">The number of killing blows gained in the battlefield</return>
		<return name="honorableKills" type="number">The number of honorable kills gained in the battlefield</return>
		<return name="deaths" type="number">The number of deaths the player had during the battlefield</return>
		<return name="honorGained" type="number">The amount of honor gained during the battlefield</return>
		<return name="faction" type="number">The faction of the player</return>
		<return name="rank" type="number">Deprecated; always 0</return>
		<return name="race" type="string">The player's class</return>
		<return name="classToken" type="string">The path to the classes icon's texture</return>
		<return name="damageDone" type="number">The amount of damage done in the battlefield</return>
		<return name="healingDone" type="number">The amount of healing done in the battlefield</return>
	</function>
	<function name="GetMinigameState" />
	<function name="GetBindLocation">
		<summary>Gets the value of the Hearthstone bind location</summary>
		<return name="location" type="string">The current value of the Hearthstone bind location</return>
	</function>
	<function name="UnitIsGhost">
		<summary>Returns whether or not a unit or player is currently a ghost</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="fullname" type="string">The full name of the unit to query</param>
		</paramchoice>
		<return name="isGhost" apitype="onenil">1 if the given unit is a ghost, otherwise nil</return>
	</function>
	<function name="PlaceAuctionBid">
		<summary>Places a bid on an auction item</summary>
		<param name="type" type="string">The auction listing type</param>
		<param name="index" type="number">The index of the auction in the listing</param>
		<param name="bid" type="number">The bid amount, in copper</param>
	</function>
	<function name="ReplaceEnchant">
		<summary>Confirms replacing an existing enchant</summary>
	</function>
	<function name="UnitIsEnemy">
		<summary>Returns true or false depending on whether the specified units are enemies or not</summary>
		<param name="unit" type="string">UnitID of the first target</param>
		<param name="otherUnit" type="string">UnitID of the second target</param>
		<return name="isEnemy" type="boolean">true if the specified units are enemies, false otherwise</return>
	</function>
	<function name="UnitIsDND">
		<summary>Returns whether or not a unit is flagged DND</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isDND" apitype="onenil">1 if the unit is flagged Do Not Disturb, otherwise nil</return>
	</function>
	<function name="GetCVarMax">
		<summary>Gets the maximum value allowed for a given CVar</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="max" type="number">The maximum value allowed for the given CVar</return>
	</function>
	<function name="UnitIsCorpse">
		<summary>Returns whether or not the given unit is a corpse</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isCorpse" apitype="onenil">1 if the unit is a corpse, otherwise nil</return>
	</function>
	<function name="GuildControlDelRank">
		<summary>Deletes a guild rank.</summary>
		<param name="name" type="string">The name of the rank to delete.</param>
	</function>
	<function name="GetGuildBankItemInfo">
		<summary>Returns information about the guild bank item in a given slot</summary>
		<param name="tab" type="number">The index of the guild bank tab</param>
		<param name="slot" type="number">The slot to query</param>
		<return name="texture" type="string">The item's icon texture</return>
		<return name="count" type="number">The amount of items in the stack</return>
		<return name="locked" type="boolean">true if the item is currently locked, otherwise nil.  An item is locked when it is picked up by someone in your guild.</return>
	</function>
	<function name="SetActiveVoiceChannelBySessionID">
		<summary>Sets the currently active voice chat channel</summary>
		<param name="session" type="number">The sessionID of the voice chat channel.  This can be obtained by enumerating GetVoiceSessionInfo().</param>
	</function>
	<function name="UnitIsAFK">
		<summary>Query a unit's AFK status.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="fullname" type="string">The full name of the unit to query</param>
		</paramchoice>
		<return name="isAFK" apitype="onenil">1 if the given unit is AFK, otherwise nil</return>
	</function>
	<function name="BeginTrade">
		<summary>Accept a trade request from someone.</summary>
	</function>
	<function name="GetMerchantItemCostItem">
		<summary>Returns information about an item used as currency to purchase another item (such as battleground rewards)</summary>
		<param name="index" type="number">The index of an item in the merchant window</param>
		<param name="itemIndex" type="number">The index of the item cost associated with the item for sale.  For the PVP mount rewards, there are three different items costs, 30 marks from each battleground.  The first item cost can be queried with an itemIndex of 1, and so on.</param>
		<return name="itemTexture" type="string">The texture for the item that is acting as currency</return>
		<return name="itemValue" type="number">The number of items required for the given purchase</return>
	</function>
	<function name="GetInboxNumItems">
		<summary>Gets the number of mail items in currently in your inbox.</summary>
		<return name="numItems" type="number">The number of items in the inbox</return>
	</function>
	<function name="GetContainerNumFreeSlots">
		<summary>Gets the number of free slots for a bag and the type of items that can go in the bag</summary>
		<param name="containerID" type="number">The container to check</param>
		<return name="freeSlots" type="number">The number of empty slots in the bag</return>
		<return name="bagType">The type of the container</return>
	</function>
	<function name="GetTradeSkillNumReagents">
		<summary>Gets the number of reagents required for a trade skill recipe</summary>
		<param name="index" type="number">The index of a trade skill recipe</param>
		<return name="numReagents" type="number">The number of reagents required for a given recipe</return>
	</function>
	<function name="UnitInRange">
		<summary>Returns whether the given raid or party member is in range of your most useful spells</summary>
		<param name="&quot;unit&quot;" type="string" apitype="unitid">The target unit (must be in your party or raid)</param>
	</function>
	<function name="UnitInRaid">
		<summary>Returns whether the unit specified is in your raid group</summary>
		<param name="unit" type="string" apitype="unitid">The unitid of the unit to query</param>
		<return name="inRaid" type="number">Will return 1 if the unit is in your raid group, otherwise nil</return>
	</function>
	<function name="UnitHealthMax">
		<summary>Gets the maximum health value for a given unit</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="maxValue" type="number">The maximum health value for the given unit.  If the unit is not the player, the player's pet, or a member of the player's party or raid, the values returned will be in terms of percentage (i.e. will always return 100 for maxValue.</return>
	</function>
	<function name="rad">
		<summary>An alias for math.rad</summary>
	</function>
	<function name="KBQuery_BeginLoading">
		<summary>Queries the knowledge base server for articles</summary>
		<param name="searchText" type="string">The search string to use.  The empty string will search for all articles in the given category</param>
		<param name="categoryIndex" type="number">The category index</param>
		<param name="subcategoryIndex" type="number">The subcategory index</param>
		<param name="numArticles" type="number">The number of articles to be returned for each page</param>
		<param name="page" type="number">The page of the total results that should be displayed.</param>
	</function>
	<function name="UnitFactionGroup">
		<summary>Gives information about the units faction in english and the gamelocale. Returns nil when not available.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="fullname" type="string">The full name of the unit to query</param>
		</paramchoice>
		<return name="factionEnglish" type="string">English faction name (Horde/Alliance) of the unit.</return>
		<return name="factionLocale" type="string">Faction name (Horde/Alliance) of the units faction in current gamelocale.</return>
	</function>
	<function name="UnitExists">
		<summary>Returns whether or not a given unit exists</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The full name of a unit to query</param>
		</paramchoice>
		<return name="exists" apitype="onenil">1 if the unit exists, otherwise nil</return>
	</function>
	<function name="RemoveSkillUp" />
	<function name="UnitDebuff">
		<summary>Returns information about a debuff on a given unit.</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<param name="index" type="number">The buff index to query for the given unit</param>
		<param name="dispelOnly" apitype="onenil" optional="true">Only show those debuffs which can be dispelled by the player</param>
		<return name="name" type="string">The name of the debuff in the current locale</return>
		<return name="rank" type="number">The rank of the debuff, or the empty string</return>
		<return name="icon" type="string">The path to the debuff's icon texture</return>
		<return name="debuffStack" type="number">The amount of times the given debuff has stacked, or how many charges are left</return>
		<return name="debuffType" type="string">The type of the debuff if specified, or nil</return>
		<return name="duration" type="number">The full duration of the debuff, in seconds</return>
		<return name="timeLeft" type="number">The amount of time left on the debuff, in seconds</return>
	</function>
	<function name="AddSkillUp" />
	<function name="UnitCreatureType">
		<summary>Gets the creature type of a given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="type" type="string">The creature type of the unit (such as Humanoid, Demon, Beast, etc.)</return>
	</function>
	<function name="UnitCreatureFamily">
		<summary>Gets the creature family of the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="family" type="string">The creature family of the unit ("Humanoid", "Dragonkin" etc.)</return>
	</function>
	<function name="UnitClassification">
		<summary>Returns a classification indicator for the queried unit.</summary>
		<param name="unit" type="string" apitype="unitid">Unit to query.</param>
		<return name="classification" type="string">Classification of the queried unit.</return>
	</function>
	<function name="GetTradeSkillInfo">
		<summary>Returns information about the recipes of the currently selected trade skill.</summary>
		<param name="index" type="number">The index of the trade skill to query.</param>
		<return name="skillName" type="string">The name of the trade skill.</return>
		<return name="skillType" type="string">The skill type of the trade skill.</return>
		<return name="numAvailable" type="number">The number of times you can cast this trade skill.</return>
		<return name="isExpanded" apitype="onenil">1 if this is a header and is expanded, nil otherwise</return>
	</function>
	<function name="UnitChannelInfo">
		<summary>Returns information about the spell a unit channeling.</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="name" type="string">The name of the spell being cast</return>
		<return name="nameSubtext" type="string">The rank of the spell being cast, or other sub-text</return>
		<return name="text" type="string">The text to be displayed</return>
		<return name="texture" type="string">The path to the spell icon texture</return>
		<return name="startTime" type="number">The time the cast was started, in millisecond precision</return>
		<return name="endTime" type="number">The time the cast will be finished, in millisecond precision</return>
		<return name="isTradeSkill" apitype="onenil">1 if the spell being cast is a tradeskill, otherwise nil.</return>
	</function>
	<function name="TargetLastEnemy">
		<summary>Re-targets the last targeted enemy unit</summary>
	</function>
	<function name="SetSelectedIgnore">
		<summary>Sets the currently selected ignore entry</summary>
		<param name="index" type="number">The index in the ignore list</param>
	</function>
	<function name="GetBidderAuctionItems">
		<summary>Retrieves bidding data for items you are bidding on</summary>
		<param name="page" type="number">The page number to retrieve bidding data for, or all pages if nil</param>
	</function>
	<function name="UnitAttackSpeed">
		<summary>Gets the mainhand and offhand attack speed of the given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unitId to query</param>
		<return name="speed" type="number">The speed of the mainhand attack</return>
		<return name="oddhandSpeed" type="number">The speed of the offhand attack</return>
	</function>
	<function name="IsFlyableArea">
		<summary>Returns whether or not the player's current location is a flyable area</summary>
		<return name="isFlyable" apitype="onenil">1 if the current area is a flyable area, otherwise nil</return>
	</function>
	<function name="InviteUnit">
		<summary>Invites a player or unit to the player's party</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to invite</param>
			<param name="name" type="string">The name of a unit to invite</param>
		</paramchoice>
	</function>
	<function name="GetSpellTabInfo">
		<summary>Returns information about a tab in the spellbook</summary>
		<param name="index" type="number">The index of the spell tab.  Valid values are 1 through GetNumSpellTabs()</param>
		<return name="name" type="string">The name of the spell tab</return>
		<return name="texture" type="string">The path to the spell tab's icon texture</return>
		<return name="offset" type="number">The offset for spellids within this tab</return>
		<return name="numSpells" type="number">The number of spells in the tab</return>
	</function>
	<function name="GetNumFrames">
		<summary>Gets the number of created frame objects (and derivatives)</summary>
		<return name="numFrames" type="number">The number of frame objects (and derivatives) created.  This value does not include textures and fontstrings.</return>
	</function>
	<function name="UnitAttackBothHands">
		<summary>Returns information about a unit's weapon skill</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="mainHandAttackBase" type="number">The base weapon skill for the type of weapon equipped in the main hand</return>
		<return name="mainHandAttackMod" type="number">Any modifiers to the weapon skill for the type of weapon equipped in the main hand</return>
		<return name="offHandHandAttackBase" type="number">The base weapon skill for the type of weapon equipped in the offhand</return>
		<return name="offHandAttackMod" type="number">Any modifiers to the weapon skill for the type of weapon equipped in the offhand</return>
	</function>
	<function name="UnitArmor">
		<summary>This function returns the current amount of armor and its breakdown between base armor and positive and negative additions due to buffs and debuffs.</summary>
		<paramchoice>
			<param name="unitId" type="string">The unitId to query, such as "player", "target" or "raid10"</param>
			<param name="unitName" type="string">The exact name of the unit to query</param>
		</paramchoice>
		<return name="base" type="number">The base armor for that unit, not counting buffs, but counting base armor from pieces of clothing.</return>
		<return name="effectiveArmor" type="number">The effective armor for that unit, counting buffs and base armor from pieces of clothing.</return>
		<return name="armor" type="number">The effective armor for that unit, counting buffs and base armor from pieces of clothing. It seems to always mirror the "effectiveArmor" return from this same function.</return>
		<return name="posBuff" type="number">Any positive armor gained from buffs, this gets added to "base" to form "effectiveArmor".</return>
		<return name="negBuff" type="number">Any negative armor lost from debuffs, this gets added to "base" to form "effectiveArmor".</return>
	</function>
	<function name="IsEquippedItemType">
		<summary>Returns whether or not an item type is currently equipped</summary>
		<param name="type" type="string">The item type to query</param>
		<return name="isEquipped" apitype="onenil">1 if the given item type is currently equipped, otherwise nil</return>
	</function>
	<function name="JumpOrAscendStart" />
	<function name="GetRewardHonor">
		<summary>Gets the amount of reward honor for the displayed quest.</summary>
		<return name="honor" type="number">The amount of reward honor for the displayed quest</return>
	</function>
	<function name="UnitAffectingCombat">
		<summary>Returns whether or not a unit is currently in combat</summary>
		<param name="unit" type="string">The name of the unit to query</param>
		<return name="inCombat" apitype="onenil">1 if the unit is currently involved in combat, otherwise nil</return>
	</function>
	<function name="ItemTextGetCreator">
		<summary>Gets the creator of the text currently being viewed. Used for books, parchments and the like.</summary>
		<return name="creator" type="string">Creator of the text, nil if not available.</return>
	</function>
	<function name="GiveMasterLoot">
		<summary>Awards the given loot to the specified candidate</summary>
		<param name="slot" type="number">The loot slot item to award</param>
		<param name="index" type="number">The index of the loot candidate as returned by GetMasterLootCandidate()</param>
	</function>
	<function name="SetModifiedClick">
		<summary>Sets a modified click for a given action</summary>
		<param name="action" type="string">The action to set</param>
		<param name="binding" type="string">The modified click to set</param>
	</function>
	<function name="ChannelInvite">
		<summary>Invites a player to a given channel</summary>
		<param name="channel" type="string">The channel name</param>
		<param name="name" type="string">The player's name</param>
	</function>
	<function name="TurnOrActionStop" />
	<function name="DeleteGMTicket">
		<summary>Abandons the currently pending GM ticket</summary>
	</function>
	<function name="TurnLeftStart" />
	<function name="TurnInGuildCharter">
		<summary>Turns in a completed guild charter</summary>
	</function>
	<function name="TurnInArenaPetition">
		<summary>Turns in an arena petition</summary>
		<param name="teamSize" type="number">The size of the arena team</param>
		<param name="bgColor.r" type="number">The red component of the background color (0.0 - 1.0)</param>
		<param name="bgColor.g" type="number">The green component of the background color (0.0 - 1.0)</param>
		<param name="bgColor.b" type="number">The blue component of the background color (0.0 - 1.0)</param>
		<param name="iconStyle" type="number">The number of the chosen icon</param>
		<param name="iconColor.r" type="number">The red component of the icon color (0.0 - 1.0)</param>
		<param name="iconColor.g" type="number">The green component of the icon color (0.0 - 1.0)</param>
		<param name="iconColor.b" type="number">The blue component of the icon color (0.0 - 1.0)</param>
		<param name="borderStyle" type="number">The number of the chosen border style</param>
		<param name="borderStyle.r" type="number">The red component of the border color (0.0 - 1.0)</param>
		<param name="borderStyle.g" type="number">The green component of the border color (0.0 - 1.0)</param>
		<param name="borderStyle.b" type="number">The blue component of the border color (0.0 - 1.0)</param>
	</function>
	<function name="RequestTimePlayed">
		<summary>Queries the server for the amount of time played on the given character</summary>
	</function>
	<function name="GetChannelDisplayInfo">
		<summary>Returns information about a given chat channel</summary>
		<param name="index" type="number">The index of the channel in the channel window</param>
		<return name="name" type="string">The name of the channel</return>
		<return name="header" apitype="onenil">1 if the entry is a channel header, otherwise nil</return>
		<return name="collapsed" apitype="onenil">1 if the entry is a channel header, and the header is collapsed, otherwise nil</return>
		<return name="channelNumber" type="number">The number of the channel.  This corresponds to the slash commands used to talk in a channel.  If the channel doesn't a number, this returns nil</return>
		<return name="count" type="number">The number of members of the channel</return>
		<return name="active" apitype="onenil">1 if the channel is active, otherwise nil.  This is primarily used for the special "Trade" and "LookingForGroup" channels, since they are inactive when the player is not in a major city</return>
		<return name="category" type="string">The category the chat channel belongs to</return>
		<return name="voiceEnabled" apitype="onenil">1 if voice chat is enabled for the given channel, otherwise nil</return>
		<return name="voiceActive" apitype="onenil">1 if voice chat is active for the given channel, otherwise nil</return>
	</function>
	<function name="CreateMacro">
		<summary>Creates a new macro</summary>
		<param name="name" type="string">The name of the new macro.  Names do not need to be unique, but other API functions can be confusing if two macros with the same name exist</param>
		<param name="iconIndex" type="number">The index of the chosen macro icon</param>
		<param name="body" type="string">The body of the macro</param>
		<param name="local" apitype="onenil">Determines if the macro should be stored locally, or on the server.  This argument is currently unused.</param>
		<param name="perCharacter" apitype="onenil">1 if the macro should be stored as a character specific macro, otherwise nil</param>
		<return name="index" type="number">The index of the newly created macro</return>
	</function>
	<function name="IsUsableAction">
		<summary>Returns whether or not the action is usable</summary>
		<param name="slot" type="number">The slotid of the action to query</param>
		<return name="isUsable" apitype="onenil">1 if the skill is usable, otherwise nil</return>
		<return name="notEnoughMana" apitype="onenil">1 if the player is lacking the mana to take the action, otherwise nil</return>
	</function>
	<function name="GetInventorySlotInfo">
		<summary>Returns information about an inventory slot</summary>
		<param name="slotName" type="string">The name of an inventory slot to query</param>
		<return name="id" type="number">The numeric slotId that should be used in other GetInventory functions</return>
		<return name="texture" type="string">The path to the texture to be displayed when this slot is empty</return>
		<return name="checkRelic" apitype="onenil">1 if the slot is a relic slot on the given character, otherwise nil.  The ranged slot token is re-used for the relic slot, and this return distinguishes between the two.</return>
	</function>
	<function name="ShowCloak">
		<summary>This function enables or disables the showing of the cloak on the player's character</summary>
		<param name="enable" type="boolean">true, 1, strings, tables and userdata enable the cloak; 0, false and nil disable the cloak</param>
	</function>
	<function name="ToggleTris" />
	<function name="IsMuted">
		<summary>Gets the mute status for a given player.</summary>
		<param name="unit" type="string">The name of the unit to query.</param>
		<return name="muted" apitype="onenil">1 if the unit is muted, nil otherwise</return>
	</function>
	<function name="IsStealthed">
		<summary>Returns whether or not the player is currently stealthed</summary>
		<return name="stealthed" apitype="onenil">1 if the player is stealthed, otherwise nil</return>
	</function>
	<function name="KBSetup_GetCategoryData">
		<summary>Returns information about a knowledge base category</summary>
		<param name="index" type="number">The index of the category</param>
		<return name="categoryId" type="number">The unique identifier for the given category</return>
		<return name="name" type="string">The name of the category</return>
	</function>
	<function name="SetLayoutMode" />
	<function name="ToggleRun">
		<summary>Toggles between running and walking</summary>
	</function>
	<function name="GetGuildRosterMOTD">
		<summary>Gets the Message of the Day for your guild</summary>
		<return name="guildMOTD" type="string">The Guild Message of the Day</return>
	</function>
	<function name="TogglePortals" />
	<function name="MoveAndSteerStop" />
	<function name="TakeInboxMoney">
		<summary>Takes the money from the specified mail in the inbox</summary>
		<param name="index" type="number">The index of the mail in the inbox</param>
	</function>
	<function name="TogglePetAutocast">
		<summary>Toggles autocast for a pet action</summary>
		<param name="index" type="number">The pet's action slot</param>
	</function>
	<function name="GetMapZones">
		<summary>Gets the map zones for a given continent</summary>
		<param name="continentIndex" type="number">The index of a world continent</param>
		<return name="..." type="string">A list of strings containing all of the map zones in the given continent</return>
	</function>
	<function name="GetZoneText">
		<summary>Gets the name of the current zone</summary>
		<return name="zone" type="string">The name of the current zone</return>
	</function>
	<function name="AcceptAreaSpiritHeal">
		<summary>Notifies the server that you are ready to accept the periodic area resurrection from a battleground spirit healer</summary>
	</function>
	<function name="TogglePerformanceValues" />
	<function name="EnumerateFrames">
		<summary>Gets the next frame following the frame passed, or nil if no more frames exist</summary>
		<param name="currentFrame" type="table" optional="true">The current frame to get the next frame, or nil to get the first frame</param>
		<return name="nextFrame" type="table">The frame following currentFrame or nil if no more frames exist, or the first frame if nil was passed</return>
	</function>
	<function name="UnitOnTaxi">
		<summary>Returns whether or not a given unit is on a taxi</summary>
		<param name="unit" type="string">The unit to query.  This only seems to work for "player".</param>
		<return name="onTaxi" apitype="onenil">1 if the unit is on a taxi, otherwise nil</return>
	</function>
	<function name="TargetLastFriend" />
	<function name="TogglePerformanceDisplay" />
	<function name="AcceptQuest">
		<summary>Accepts the quest that is currently displayed</summary>
	</function>
	<function name="GetBattlefieldStatus">
		<summary>Returns information about an active or queued battleground instance</summary>
		<param name="index" type="number">The index of the battleground or arena as listed in the tooltip for the minimap battle status icon.</param>
		<return name="status" type="string">The status of the battlefield</return>
		<return name="mapName" type="string">The name of the battlefield (such as "Alterac Valley", or "All Arenas" for arena battlefields)</return>
		<return name="instanceID" type="number">The battlefield instance assigned to you or the instance you are queuing for, or 0 if you are queuing for all instances</return>
		<return name="levelRangeMin" type="number">The minimum level to queue for this battlefield instance</return>
		<return name="levelRangeMax" type="number">The maximum level to queue for this battlefield instance</return>
		<return name="teamSize" type="number">The number of players on each team for arenas, and 0 for non-arenas</return>
		<return name="registeredMatch" type="number">1 if the battlefield is rated (i.e. rated arena matches), 0 otherwise</return>
	</function>
	<function name="ToggleCollision" />
	<function name="Sound_ChatSystem_GetInputDriverNameByIndex">
		<summary>Gets the name of the given chat system sound input driver</summary>
		<param name="index" type="number">The desired index</param>
	</function>
	<function name="NewGMTicket">
		<summary>Opens a new GM support ticket</summary>
		<param name="type" type="number">The type of ticket that should be opened</param>
		<param name="text" type="string">The text to be sent in the ticket</param>
	</function>
	<function name="MovieRecording_GetTime">
		<summary>Gets the amount of time since the last video recording operation was started</summary>
		<return name="time" type="string">The amount of time since the last video recording operation was started, as a string HH:MM:SS</return>
	</function>
	<function name="GetItemQualityColor">
		<summary>Gets the red, green and blue components of the color for the given item quality index. Also returns a hex representation of the same color.</summary>
		<param name="index" type="number">The item quality index, any indexes outside of the following values will be interpreted as a request for quality index 1</param>
		<return name="redComponent" type="number">The red component of the item quality's color. It is a floating point number from 0 to 1.</return>
		<return name="greenComponent" type="number">The green component of the item quality's color. It is a floating point number from 0 to 1.</return>
		<return name="blueComponent" type="number">The blue component of the item quality's color. It is a floating point number from 0 to 1.</return>
		<return name="hexColor" type="string">The hex color code for the given item quality, including the |c at the beginning.</return>
	</function>
	<function name="ToggleAutoRun">
		<summary>Turns on auto run</summary>
	</function>
	<function name="GetTime">
		<summary>Returns a number representing the current time, with millisecond precision</summary>
		<return name="time" type="number">A number that represents the current time, with millisecond precision.
		The number itself doesn't correspond to any useful value, but can be compared against itself to give a high
		precision time measurement.</return>
	</function>
	<function name="IsSubZonePVPPOI">
		<summary>Returns whether or not the current subzone is a PVP point of interest</summary>
		<return name="isPVPPOI" apitype="onenil">1 if the current subzone is a PVP point of interest.  This is used when the "Display World PVP Objectives" setting is set to "Dynamic".  In this case the PVP objectives are only shown when the player is in a PVP point of interest.</return>
	</function>
	<function name="TaxiNodeName">
		<summary>Gets the name of a given taxi node slot</summary>
		<param name="slot" type="number">The index of a taxi node slot</param>
		<return name="name" type="string">The name of the taxi node</return>
	</function>
	<function name="MovieRecording_GetMovieFullPath">
		<summary>Gets the full path of the movie currently being recorded or compressed</summary>
		<return name="path" type="string">Gets the path to the movie currently being recorded or compressed.  If the client isn't compressing or recording then it will either return the last file to have been recorded or compressed, or the empty string.</return>
	</function>
	<function name="TaxiGetSrcY">
		<summary>Gets the y coordinate of the source taxi node, relative to the taxi frame</summary>
		<param name="source" type="number">The source taxi node</param>
		<param name="dest" type="number">The destination taxi node</param>
		<return name="sY" type="number">The Y coordinate of the source taxi node, relative to the height of the taxi frame</return>
	</function>
	<function name="GetQuestResetTime">
		<summary>Gets the amount of time until daily quests reset</summary>
		<return name="time" type="number">The amount of time until daily quests reset, in seconds</return>
	</function>
	<function name="GMRequestPlayerInfo" />
	<function name="TaxiGetSrcX">
		<summary>Gets the x coordinate of the source taxi node, relative to the taxi frame</summary>
		<param name="source" type="number">The source taxi node</param>
		<param name="dest" type="number">The destination taxi node</param>
		<return name="sX" type="number">The X coordinate of the source taxi node, relative to the width of the taxi frame</return>
	</function>
	<function name="TaxiGetDestY">
		<summary>Gets the y coordinate of the destination taxi node, relative to the taxi frame</summary>
		<param name="source" type="number">The source taxi node</param>
		<param name="dest" type="number">The destination taxi node</param>
		<return name="dy" type="number">The Y coordinate of the destination taxi node, relative to the height of the taxi frame</return>
	</function>
	<function name="GetNumMapOverlays">
		<summary>Gets the number of overlays for the current world map</summary>
		<return name="numOverlays" type="number">The number of overlays for the given world map.  An overlay is an area that can be discovered, revealing that part of the map.</return>
	</function>
	<function name="IsActionInRange">
		<summary>Returns whether or not the action is in range of the current target</summary>
		<param name="action" type="number">The action id</param>
		<return name="inRange" type="number">1 if the action is in range of the current target, 0 if out of range, and nil if the target is invalid for this spell</return>
	</function>
	<function name="GetNumMacros">
		<summary>Gets the number of macros the player has stored</summary>
		<return name="numAccountMacros" type="number">The number of account-wide macros stored</return>
		<return name="numCharacterMacros" type="number">The number of character specific macros stored</return>
	</function>
	<function name="TargetUnit">
		<summary>Sets the given unit as your target.  Passing nil will remove your target.  Can only be called from the blizzard UI.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to target</param>
			<param name="name" type="string">The name of the player to target</param>
		</paramchoice>
	</function>
	<function name="TargetNearestRaidMember" />
	<function name="TargetNearestPartyMember" />
	<function name="MovieRecording_IsSupported">
		<summary>Returns whether or not movie recording is supported by client</summary>
		<return name="isSupported" type="boolean">true if the client supports video recording, otherwise nil</return>
	</function>
	<function name="CanComplainChat">
		<summary>Returns whether or not a given chat line can be reported</summary>
		<param name="lineID" type="number">The unique identifier of a given chat line</param>
		<return name="canComplain" apitype="onenil">1 if the player can complain about the given chat line, otherwise nil</return>
	</function>
	<function name="GetInspectHonorData">
		<summary>Returns honor information about an inspect target</summary>
		<return name="todayHK" type="number">The number of honor kills for today</return>
		<return name="todayHonor" type="number">The amount of honor earned today</return>
		<return name="yesterdayHK" type="number">The amount of honor kills for yesterday</return>
		<return name="yesterdayHonor" type="number">The amount of honor earned yesterday</return>
		<return name="lifetimeHK" type="number">The amount of honor kills over the player's lifetime</return>
		<return name="lifetimeRank" type="number">The highest earned rank in the old honor system. Valid returns can be determined with GetPVPRankInfo()</return>
	</function>
	<function name="TargetNearestFriend" />
	<function name="TargetNearestEnemy" />
	<function name="GetVoiceSessionInfo">
		<summary>Returns information about a given voice session</summary>
		<param name="session" type="number">The session id</param>
		<return name="name" type="string">The name of the voice session (channel)</return>
		<return name="active" apitype="onenil">1 if the voice session is active, otherwise nil</return>
	</function>
	<function name="ConfirmAcceptQuest">
		<summary>Confirms accepting a quest that someone in your group is starting</summary>
	</function>
	<function name="UnitCanCooperate">
		<summary>Returns whether or not the two given units can cooperate with each other</summary>
		<param />
		<param />
		<return name="canCooperate" apitype="onenil">1 if the two units can cooperate with each other, otherwise nil</return>
	</function>
	<function name="StopTradeSkillRepeat">
		<summary>Cancels a repeating tradeskill</summary>
	</function>
	<function name="MusicPlayer_VolumeDown">
		<summary>Turns the volume down in iTunes</summary>
	</function>
	<function name="IsUsableSpell">
		<summary>Returns whether or not a given spell is usable or cannot be used due to lack of mana</summary>
		<param />
		<param name="bookType" type="string" optional="true">The type of spell book to look up spellIndex in (required when using spellIndex)</param>
		<return name="isUsable" apitype="onenil">1 if the spell is usable, nil otherwise</return>
		<return name="outOfMana" apitype="onenil">1 if the spell cannot be used due to lack of mana, nil otherwise</return>
	</function>
	<function name="KBArticle_GetData">
		<summary>Returns information about the last requested knowledge base article</summary>
		<return name="id" type="number">The unique articleId for the article</return>
		<return name="subject" type="string">The subject of the article</return>
		<return name="subjectAlt" type="string">Alternate text for the article subject</return>
		<return name="text" type="string">The body of the article</return>
		<return name="keywords" type="string">A comma separated list of keywords for the article</return>
		<return name="languageId" type="number">The languageId for the given article.  See the returns from API_KBSetup_GetLanguageData() for these values</return>
		<return name="isHot" type="boolean">true if the article is a "Hot Item", otherwise false</return>
	</function>
	<function name="GetNumBattlefields">
		<summary>Gets the number of available battlefields</summary>
		<return name="numBattlefields" type="number">The number of available battlefields.  If the player is not currently conversing with a battlemaster, this function may return 0 or an older cached value.</return>
	</function>
	<function name="SwapRaidSubgroup">
		<summary>Swaps two players between groups in the raid</summary>
		<param name="index1" type="string" apitype="unitid">The raidid of the first unit</param>
		<param name="index2" type="string" apitype="unitid">The raidid of the second unit</param>
	</function>
	<function name="MusicPlayer_NextTrack">
		<summary>Goes to the next track in iTunes.</summary>
	</function>
	<function name="Stuck" />
	<function name="GuildControlGetRankName">
		<summary>Gets the name of the given guild rank</summary>
		<param name="rankIndex" type="number">The rank index to query</param>
		<return name="rankName" type="string">The name of the given guild rank</return>
	</function>
	<function name="HasFilledPetition">
		<summary>Returns whether or not the player has a completed petition</summary>
		<return name="hasPetition" apitype="onenil">1 if the player has a filled in petition, otherwise nil</return>
	</function>
	<function name="GetSpellCritChance">
		<summary>Gets the amount of crit chance for a given spell school</summary>
		<param name="school" type="number">The spell school to query</param>
		<return name="minCrit" type="number">The amount of crit chance for a given spell school</return>
	</function>
	<function name="GetDodgeChance">
		<summary>Gets the amount of dodge change the player has, as a percentage</summary>
		<return name="chance" type="number">The amount of dodge change the player currently has as a percentage</return>
	</function>
	<function name="ArenaTeamUninviteByName">
		<summary>Uninvites a player from an arena team</summary>
		<param name="team" type="number">The index of the arena team</param>
		<param name="name" type="string">The name of the player to uninvite from the given arena team</param>
	</function>
	<function name="StrafeRightStop">
		<summary>Stops the player from strafing right</summary>
	</function>
	<function name="CloseTaxiMap">
		<summary>Closes the taxi (flight master) map</summary>
	</function>
	<function name="IsItemInRange">
		<summary>Returns whether or not a usable item is in range of a given unit</summary>
		<paramchoice>
			<param name="itemid" type="number">The item's id</param>
			<param name="itemname" type="string">The name of an item</param>
			<param name="itemlink" type="string">A valid item link</param>
		</paramchoice>
		<return name="inRange" apitype="onenil">1 if the item is in range of the given unit, otherwise nil</return>
	</function>
	<function name="UnitResistance">
		<summary>Returns resistance information for a specific resistance for a unit ID. Returns 0,0,0,0 for non-existing or disallowed units.</summary>
		<param name="unit" type="string">The unitid to query</param>
		<param name="resistanceIndex" type="number">Resistance to get data on</param>
		<return name="base" type="number">Base resistance value, for players their racial modifier.</return>
		<return name="resistance" type="number">Current resistance with all modifiers applied.</return>
		<return name="positive" type="number">Positive resistance modifiers.</return>
		<return name="negative" type="number">Negative resistance modifiers.</return>
	</function>
	<function name="IsInGuild">
		<summary>Returns whether or not the player is in a guild</summary>
		<return name="inGuild" apitype="onenil">1 if the player is in a guild, otherwise nil</return>
	</function>
	<function name="GetGamma">
		<summary>Gets the gamma value for the game client</summary>
		<return name="gamma" type="number">The gamma setting of the game client</return>
	</function>
	<function name="GetObjectiveText">
		<summary>Gets the objective text for the currently displayed quest</summary>
		<return name="questObjective" type="string">The objective text for the currently displayed quest</return>
	</function>
	<function name="StrafeLeftStop">
		<summary>Stops the character from strafing left.</summary>
	</function>
	<function name="GetNumIgnores">
		<summary>Gets the number of people currently on the player's ignore list</summary>
		<return name="numIgnores" type="number">The number of people currently on the ignore list</return>
	</function>
	<function name="TakeTaxiNode">
		<summary>Take the indicated flightpath. This function is used when clicking a flightpath from a flightmaster.</summary>
		<param name="slot" type="number">Taxi slot to take. (1 to NumTaxiNodes())</param>
	</function>
	<function name="StopMusic">
		<summary>Immediately stops the currently played in-game music</summary>
	</function>
	<function name="StopMacro">
		<summary>Stops execution of a running macro</summary>
	</function>
	<function name="SetOverrideBindingMacro">
		<summary>Sets an override binding to a specific macro</summary>
		<paramchoice>
			<param name="macroName" type="string">The name of a macro to set for the override binding, or nil to remove the binding</param>
			<param name="macroIndex" type="number">The index of a macro to set for the override binding, or nil to remove the binding</param>
		</paramchoice>
	</function>
	<function name="StartDuel">
		<summary>Challenges another player to a duel</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId of the player to challenge</param>
			<param name="name" type="string">The name of a player to challenge</param>
		</paramchoice>
	</function>
	<function name="GetScreenHeight">
		<summary>Gets the current screen height. This value is affected by scale. To get the true screen height in pixels divide by GetScreenHeightScale().</summary>
		<return name="height" type="number">Current screen height in pixels.</return>
	</function>
	<function name="StartAuction">
		<summary>Starts a new auction</summary>
		<param name="minBid" type="number">The minimum bid, in copper</param>
		<param name="buyoutPrice" type="number">The buyout price, in copper</param>
		<param name="runTime" type="number">The runtime of the auction, in minutes</param>
	</function>
	<function name="GetSummonConfirmSummoner">
		<summary>Gets the name of the summoner, so it can be displayed in the confirmation dialog</summary>
		<return name="text" type="string">The name of the summoner</return>
	</function>
	<function name="StartAttack">
		<summary>This function is used by Blizzard code to start an attack on a specific unit.</summary>
		<param name="target" type="string">The target you want to start attacking, can be a UnitId like "raid10target" or a unit's name</param>
	</function>
	<function name="GetNumWorldStateUI">
		<summary>Gets the number of world state lines (Arathi Basin Points, Black Morass Portals etc.)</summary>
		<return name="numUI" type="number">Gets the number of current world state lines.</return>
	</function>
	<function name="ExpandChannelHeader">
		<summary>Collapses a channel header in the chat channel listing</summary>
		<param name="id" type="number">The index of the header in the Chat Channel window.  These indices include the actually channel listings, so the second channel may be at a higher index, depending on how many channels are listed in the first header.</param>
	</function>
	<function name="GetCurrentDungeonDifficulty">
		<summary>Gets the currently dungeon difficulty level</summary>
		<return name="dungeonDifficulty" type="number">The currently dungeon difficulty setting</return>
	</function>
	<function name="KBArticle_IsLoaded">
		<summary>Returns whether or not the requested knowledge base article has been loaded</summary>
		<return name="isLoaded" type="boolean">true after the KNOWLEDGE_BASE_ARTICLE_LOAD_SUCCESS event has fired by fetching a specific article.  This value will be retained through reloading the user interface, selecting a new character.  It will be reset if the client is closed entirely</return>
	</function>
	<function name="GetQuestLink">
		<summary>Gets a quest link for the given entry in your quest log</summary>
		<param name="index" type="number">The quest log index for the desired link</param>
		<return name="link" type="string">The desired quest link</return>
	</function>
	<function name="IsConsumableAction">
		<summary>Returns 1 if the action id contains a consumable, otherwise nil.</summary>
		<param name="slot" type="number">The action id of the slot to be queried.</param>
		<return name="isConsumableAction" apitype="onenil">1 if the action is a consumable, otherwise nil</return>
	</function>
	<function name="GetAddOnCPUUsage">
		<summary>Gets the amount of CPU time used by the given addon, in milliseconds</summary>
		<param />
		<return name="usage" type="number">The amount of CPU time the given addon has used, in milliseconds</return>
	</function>
	<function name="StablePet">
		<summary>Attempts to put your current pet in the stable.</summary>
	</function>
	<function name="GetPackageInfo">
		<summary>Returns information on the given package.  Does not seem implemented by Blizzard, index 1 always returns a 'Test Package'.</summary>
		<param name="index" type="number">Package Index. Between 1 and GetNumPackages()</param>
		<return name="name" type="string">Package name</return>
		<return name="texture" type="string">Icon for this package</return>
		<return name="somenumber" type="number">??</return>
	</function>
	<function name="CloseGuildBankFrame">
		<summary>Closes the guild bank frame</summary>
	</function>
	<function name="MoveViewUpStart" />
	<function name="SpellCanTargetUnit">
		<summary>Returns whether or not the spell currently awaiting a target can target a given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="canTarget" apitype="onenil">1 if the spell currently awaiting targeting can target the given unit</return>
	</function>
	<function name="ItemTextPrevPage">
		<summary>Asks the game to move the currently open book, or other readable object to the previous page of text.</summary>
	</function>
	<function name="JoinTemporaryChannel">
		<summary>Joins a channel</summary>
		<param name="channel" type="string">The name of a channel to join</param>
	</function>
	<function name="SpellStopCasting">
		<summary>Stops casting or targeting the current spell</summary>
	</function>
	<function name="GetPetitionItemInfo">
		<summary>Returns information about a given petition to create an arena team.</summary>
		<param name="index" type="number">The index of the petition item</param>
		<return name="name" type="string">The name of the petition</return>
		<return name="texture" type="string">The path to the petition's icon texture</return>
		<return name="price" type="number">The cost of the petition, in copper</return>
	</function>
	<function name="SpellIsTargeting">
		<summary>Returns whether or not there is a spell currently awaiting a target</summary>
		<return name="isTargeting" apitype="onenil">1 if there is a spell currently awaiting a target, otherwise nil</return>
	</function>
	<function name="SpellHasRange">
		<summary>Returns whether or not a given spell has a range restriction</summary>
		<paramchoice>
			<param name="spellName" type="string">The name of a spell</param>
			<param name="spellId" type="number">The spellId of a spell</param>
		</paramchoice>
		<return name="hasRange" apitype="onenil">1 if the specified spell has a range restriction, otherwise nil</return>
	</function>
	<function name="SpellTargetUnit">
		<summary>Targets a unit with the spell currently awaiting a target</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to target with the spell</param>
		<param name="name" type="string">The full name of the unit to target with the spell</param>
	</function>
	<function name="SpellCanTargetItem">
		<summary>Return whether or not the spell on the cursor can target an item or not.  Will return nil when no spell is on the cursor.</summary>
		<return name="canTarget" apitype="onenil">1 if the spell on the cursor can target an item, nil if not.</return>
	</function>
	<function name="Sound_GameSystem_GetOutputDriverNameByIndex">
		<summary>Gets the name of the given game sound output driver</summary>
		<param name="index" type="number">The desired index</param>
	</function>
	<function name="SelectTradeSkill">
		<summary>Sets the currently selected tradeskill item</summary>
		<param name="index" type="number">The index of a tradeskill in the tradeskill window</param>
	</function>
	<function name="Sound_ChatSystem_GetNumInputDrivers">
		<summary>Gets the number of chat system sound input drivers</summary>
	</function>
	<function name="GetQuestBackgroundMaterial">
		<summary>Gets the background material for a given quest</summary>
		<return name="material" type="string">The background material for the currently displayed quest.  Currently this returns nil, and defaults to "parchment" in the QuestFrame code</return>
	</function>
	<function name="GetNumMapLandmarks">
		<summary>Gets the number of point of interest on the world map</summary>
		<return name="numPOIs" type="number">The number of points of interest on the world map</return>
	</function>
	<function name="SortBattlefieldScoreData">
		<summary>Sorts the battlefield data based on a specific sortType</summary>
		<param name="sortType" type="string">The sort type for the battlefield score data</param>
	</function>
	<function name="PickupStablePet">
		<summary>Picks up a stabled pet, and holds it on the cursor</summary>
		<param name="index" type="number">The index of the pet</param>
	</function>
	<function name="GetRaidRosterInfo">
		<summary>Returns information about a member of the player's raid</summary>
		<param name="index" type="number">The index of the raid member</param>
		<return name="name" type="string">The name of the player</return>
		<return name="rank" type="number">The player's rank in the raid</return>
		<return name="subgroup" type="number">The raid subgroup that the player belongs to</return>
		<return name="level" type="number">The player's level</return>
		<return name="class" type="string">The localized name of the player's class</return>
		<return name="fileName" type="string">The uppercase english name of the player's class</return>
		<return name="zone" type="string">The name of the zone the player is currently in</return>
		<return name="online" apitype="onenil">1 if the player is currently online, otherwise nil</return>
		<return name="isDead" apitype="onenil">1 if the player is currently dead, otherwise nil</return>
		<return name="role" type="string">The player's role, or nil</return>
		<return name="isML" apitype="onenil">1 if the player is the master-looter, otherwise nil</return>
	</function>
	<function name="GetTalentInfo">
		<summary>Returns information about the talents of the player, or the currently inspected player.</summary>
		<param name="tabIndex" type="number">The index of the talent tree.</param>
		<param name="talentIndex" type="number">The index of the talent.</param>
		<param name="isInspect" apitype="onenil">1 if retrieving information from an inspected person, nil otherwise</param>
		<return name="name" type="string">The name of the talent.</return>
		<return name="iconTexture" type="string">The icon texture of the talent.</return>
		<return name="tier" type="number">The tier (row) of the talent.</return>
		<return name="column" type="number">The column of the talent.</return>
		<return name="rank" type="number">The current rank of the talent.</return>
		<return name="maxRank" type="number">The maximum rank of the talent.</return>
		<return name="isExceptional" apitype="onenil">1 if the selected talent is a ability you gain, nil otherwise.</return>
		<return name="meetsPrereq" apitype="onenil">1 if you meet the prerequisite to learn the talent, nil otherwise.</return>
	</function>
	<function name="ChannelUnmoderator">
		<summary>Revokes moderator status from a given player on a specific channel</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="player" type="string">The player to revoke moderator status from</param>
	</function>
	<function name="IsRightShiftKeyDown">
		<summary>Returns whether or not the right shift key on the keyboard is held down</summary>
		<return name="isDown" apitype="onenil">1 if the right shift key on the keyboard is currently held down</return>
	</function>
	<function name="RetrieveCorpse">
		<summary>Confirms resurrection by returning to the player's corpse</summary>
	</function>
	<function name="IsDisplayChannelOwner">
		<summary>Returns whether or not the player is the owner of the currently displayed channel</summary>
		<return name="isOwner" apitype="onenil">1 if the player is the owner of the currently displayed channel</return>
	</function>
	<function name="MusicPlayer_VolumeUp">
		<summary>Turns the volume up in iTunes</summary>
	</function>
	<function name="OpeningCinematic">
		<summary>Displays the player's race's opening cinematic.</summary>
	</function>
	<function name="SocketContainerItem">
		<summary>Opens the Gem Socketing UI if the given container slot has a socketable item</summary>
		<param name="index" type="number">Container ID</param>
		<param name="slot" type="number">Slot within container</param>
	</function>
	<function name="GetQuestLogRewardMoney">
		<summary>Gets the amount of money rewarded on quest completion.</summary>
		<return name="money" type="number">The amount of money rewarded on quest completion, in copper</return>
	</function>
	<function name="GetNumArenaTeamMembers">
		<summary>Gets the number of members in a given arena team</summary>
		<param name="teamindex" type="number">The index of the arena team, based on the order they are displayed in the PvP tab.</param>
		<param name="showOffline" apitype="onenil">1 to show offline members, otherwise nil. This argument is not working as of Patch 2.3</param>
	</function>
	<function name="SitStandOrDescendStart" />
	<function name="SilenceMember" />
	<function name="VoiceGetCurrentCaptureDevice">
		<summary>Gets the index of the current voice capture device</summary>
		<return name="index" type="number">The index of the current voice capture device</return>
	</function>
	<function name="CancelAreaSpiritHeal">
		<summary>Cancels resurrection if one is pending from a battleground spirit healer</summary>
	</function>
	<function name="ShowWorldMapArrowFrame" />
	<function name="ShowRepairCursor">
		<summary>Changes the cursor to show the repair cursor</summary>
	</function>
	<function name="HasPetUI">
		<summary>Returns whether or not the client should show the pet UI</summary>
		<return name="hasPetUI" apitype="onenil">1 if the client should show the pet UI</return>
		<return name="isHunterPet" apitype="onenil">1 if the player's pet is a hunter pet</return>
	</function>
	<function name="ShowInventorySellCursor">
		<summary>Changes the cursor to the "inventory sell" cursor</summary>
	</function>
	<function name="ShowFriends">
		<summary>Requests updated friends information from the server</summary>
	</function>
	<function name="ShowContainerSellCursor">
		<summary>Displays the "sell item" cursor for a given container item</summary>
		<param name="index" type="number">The index of a container</param>
		<param name="slot" type="number">The slot within the given container</param>
	</function>
	<function name="GetSpellLink">
		<summary>Gets a spell link for the player's given spell</summary>
		<paramchoice>
			<param name="spellID" type="number">The spell's ID</param>
			<param name="spellname" type="string">The spell's name. Must be in your spell book.</param>
		</paramchoice>
		<return name="link" type="string">The desired spell link</return>
	</function>
	<function name="GetAbandonQuestItems">
		<summary>Returns any items that would be destroyed by confirming abandoning the current quest</summary>
		<return name="items" type="string">Any items that would be destroyed by abandoning the given quest</return>
	</function>
	<function name="TradeSkillOnlyShowMakeable">
		<summary>Enables or disables the "Have Materials" tradeskill filter</summary>
		<param name="filter" type="boolean">nil, false or 0 to disable the "Have Materials" filter, any other value will enable it</param>
	</function>
	<function name="ShowBattlefieldList">
		<summary>Displays the battlefield list window for a previously queued battlefield</summary>
		<param name="index" type="number">The index of the battlefield currently queued for</param>
	</function>
	<function name="SetupFullscreenScale">
		<summary>Sizes a frame to take up the entire screen.  Sizes the frames differently depending on resolution.  Never returns a meaningful value.</summary>
		<param name="frame" type="table">Frame to resize to full screen</param>
	</function>
	<function name="GetChatWindowMessages">
		<summary>Returns a list of message events (leaving the CHAT_MSG_ part out) a given chatframe is registered for.</summary>
		<param name="index" type="number">Chat frame index.</param>
		<return name="...">List of message types.</return>
	</function>
	<function name="SetWhoToUI">
		<summary>Sets a flag that determines how the results of a SendWho() request are delivered.</summary>
		<param name="state" type="number">Determines how results of a SendWho() request should be handled</param>
	</function>
	<function name="SetWatchedFactionIndex">
		<summary>Sets the faction to watch reputation progress for</summary>
		<param name="index" type="number">The index of the faction to watch</param>
	</function>
	<function name="SetUIVisibility">
		<summary>Changes whether or not UI rendered models are shown</summary>
		<param name="visible">Any true value other than 0 to enable UI visibility.  False or nil will disable</param>
	</function>
	<function name="GetInventoryItemQuality">
		<summary>Gets the quality level of a given inventory item</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query.  This unit can be the player, or the currently inspected unit</param>
		<param name="slotId" type="string">An inventory slotId to query.  This id can be obtained by calling GetInventorySlotInfo() with a slot token</param>
		<return name="quality" type="number">The quality level of the item</return>
	</function>
	<function name="SetTrainerServiceTypeFilter">
		<summary>Sets the state of a filter in the trainer window</summary>
		<param name="type" type="string">The filter type to query</param>
		<param name="status" type="number" optional="true">The new status of the given filter</param>
		<param name="exclusive" type="number" optional="true">Turns off all other filters, if the filter is being enabled</param>
	</function>
	<function name="SetTradeSkillItemNameFilter">
		<summary>Sets the tradeskill item name filter search string</summary>
		<param name="text" type="string">The search string</param>
	</function>
	<function name="SetTradeSkillItemLevelFilter">
		<summary>Filters the TradeSkill window's list by required level of produced items.</summary>
		<param name="minLevel" type="number">Lowest required level of items to show in filtered TradeSkill list</param>
		<param name="maxLevel" type="number">Highest required level of items to show in filtered TradeSkill list</param>
	</function>
	<function name="LootSlot">
		<summary>Attempt to loot the item in the specified slot.</summary>
		<param name="slot" type="number">The slot to loot.</param>
	</function>
	<function name="SetTracking">
		<summary>Set minimap tracking to the given index between 1 and GetNumTrackingTypes().  Pass nil to track nothing.</summary>
		<param name="index" type="number">Tracking Index.  1 to GetNumTrackingTypes(). nil to track nothing.</param>
	</function>
	<function name="GetNumAvailableQuests">
		<summary>Gets the number of available quests at the current NPC</summary>
		<return name="numAvailableQuests" type="number">The number of available quests</return>
	</function>
	<function name="SetTexLodBias" />
	<function name="ResurrectHasTimer">
		<summary>Returns whether or not the player must wait to accept the pending resurrection spell</summary>
		<return name="hasTimer" apitype="onenil">1 if the player must wait to accept the pending resurrection spell, otherwise nil</return>
	</function>
	<function name="SetTaxiMap">
		<summary>Sets a texture to the TaxiMap texture</summary>
		<param name="texture" type="table">The texture to set</param>
	</function>
	<function name="GetText">
		<summary>Returns a formatted string from GlobalStrings.</summary>
		<param name="token" type="string">The name of the global string to format.</param>
		<param name="suffix" type="string">A suffix to add to the token before fetching the format string.</param>
		<param name="ordinal" type="number">Will replace %d in the string with this number.</param>
		<return name="text" type="string">Formatted global string.</return>
	</function>
	<function name="GetPVPTimer">
		<summary>Gets the amount of time until the player's PVP flag expires</summary>
		<return name="timer" type="number">If PVP is enabled, this value returns 300000.  If PVP is disabled, then this value will return -1, otherwise it is the number of milliseconds until the PVP flag turns off.</return>
	</function>
	<function name="KBSetup_GetArticleHeaderCount">
		<summary>Gets the number of "Top Issues" articles on the current page</summary>
		<return name="articleHeaderCount" type="number">The number of "Top Issues" articles on the current page</return>
	</function>
	<function name="GetPVPDesired">
		<summary>Returns whether or not the player has manually toggled the PVP flag on</summary>
		<return name="isPVPDesired" type="number">1 if the PVP flag was toggled on by the player manually, 0 otherwise</return>
	</function>
	<function name="SetSendMailMoney">
		<summary>Sets the amount of money to send with the next mail message</summary>
		<param name="amount" type="number">The amount of money to send in copper</param>
		<return name="success" apitype="onenil">1 if you have enough money (not including postage), otherwise nil</return>
	</function>
	<function name="SetSendMailCOD">
		<summary>Sets the COD cost of a mail being sent</summary>
		<param name="amount" type="number">The COD cost of the item being sent, in copper</param>
	</function>
	<function name="GetNumQuestChoices">
		<summary>Gets the number of quest choices the current npc has available</summary>
		<return name="numQuestChoices" type="number">The number of quest choices the current npc has available</return>
	</function>
	<function name="CollapseTrainerSkillLine">
		<summary>Collapses the given skill line in the class trainer frame</summary>
		<param name="index" type="number">The index of the skill line to collapse</param>
	</function>
	<function name="BuyPetition">
		<summary>Purchases a petition (used for arena charters)</summary>
		<param name="index" type="number">The index of the petition to purchase.  For purchasing arena charters, these are 1 for 2v2, 2 for 3v3 and 3 for 5v5.</param>
		<param name="name" type="string">The name to use for the petition</param>
	</function>
	<function name="GetNumShapeshiftForms">
		<summary>Gets the number of available shapeshift forms for the player</summary>
		<return name="numForms" type="number">The number of available shapeshift forms for the player</return>
	</function>
	<function name="SetLFMAutofill">
		<summary>Turns on the auto-fill option in the Looking For More interface</summary>
	</function>
	<function name="UnitBuff">
		<summary>Returns information about a buff on a given unit or player</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The name of the player to query</param>
			<param name="filter" apitype="onenil">1 to filter only buffs that can be cast by the player, otherwise nil</param>
		</paramchoice>
		<return name="name" type="string">The name of the buff</return>
		<return name="rank" type="string">The rank of the buff</return>
		<return name="icon" type="string">The path to the buff's icon texture</return>
		<return name="count" type="number">The number of stacks of the buff</return>
		<return name="duration" type="number">The full duration of the buff, in seconds</return>
		<return name="timeLeft" type="number">The amount of time left on the buff, in seconds</return>
	</function>
	<function name="GetPlayerTradeMoney">
		<summary>Gets the amount of money the player deposited in an open trade window.</summary>
		<return name="copper" type="number">The amount of the player's money (in copper) currently in the trade window.</return>
	</function>
	<function name="SetSelectedDisplayChannel">
		<summary>Selects the given display channel for use in other functions</summary>
		<param name="index" type="number">The index of the display channel to select</param>
	</function>
	<function name="NoPlayTime">
		<summary>Returns whether or not the player is out of playtime</summary>
		<return name="hasNoTime" apitype="onenil">1 if the player is out of playtime, otherwise nil</return>
	</function>
	<function name="GMSurveyAnswerSubmit">
		<summary>Submits an answer to a GM Survey question</summary>
		<param name="question" type="number">The index of the question being answered</param>
		<param name="rank" type="number">The rank selected</param>
		<param name="comment" type="string">A comment for the given question</param>
	</function>
	<function name="CommentatorRemovePlayer" />
	<function name="HasKey">
		<summary>Returns whether or not the player currently has a key.</summary>
		<return name="hasKey" apitype="onenil">Returns 1 if the player has a key, otherwise nil</return>
	</function>
	<function name="PickupSpell">
		<summary>Picks up a spell from the spellbook, placing it on the cursor</summary>
		<param name="id" type="number">The numeric ID of a spell in the spellbook.</param>
		<param name="bookType" type="string">The type of spellbook, either "spell" or "pet".</param>
	</function>
	<function name="GetNumBattlefieldFlagPositions">
		<summary>Gets the number of battlefield flags in the current zone.</summary>
		<return name="numFlags" type="number">The number of battlefield flags to display.</return>
	</function>
	<function name="GetContainerItemLink">
		<summary>Gets the item link of the item at a specific position in the players bags or bank.</summary>
		<param name="index" type="number">The index of the container to check.</param>
		<param name="slot" type="number">The slot of the container to check.</param>
		<return name="item" type="string">The item link of the item at the specified position.</return>
	</function>
	<function name="SelectStationery">
		<summary>Selects a given stationery for usage when sending mail</summary>
		<param name="index" type="number">The index of the stationery to select for usage.</param>
	</function>
	<function name="GetNumQuestWatches">
		<summary>Gets the number of quests currently marked for objective watching</summary>
		<return name="numWatches" type="number">The number of quests from the quest log currently marked for watching</return>
	</function>
	<function name="SetScreenResolution">
		<summary>Sets the screen resolution to a specified value.</summary>
		<param name="index" type="number">The index of the resolution to choose.  These values correspond to the returns from GetScreenResolutions().</param>
	</function>
	<function name="DeleteMacro">
		<summary>Deletes a macro by id</summary>
		<param name="id" type="number">The macro id. The id of the currently selected macro can be obtained on MacroFrame.selectedMacro.</param>
	</function>
	<function name="GetSelectedFaction">
		<summary>Gets the currently selected faction index</summary>
		<return name="factionIndex" type="number">The currently selected faction index</return>
	</function>
	<function name="GetGossipOptions">
		<summary>Gets the available gossip options for a given NPC</summary>
		<return name="text" type="string">The text of the gossip option</return>
		<return name="gossipType" type="string">A string indicating the type of gossip option</return>
		<return name="...">A repeating list of text and gossipType values for all available options</return>
	</function>
	<function name="SetRaidRosterSelection">
		<summary>Sets the currently selected raid roster unit.</summary>
		<param name="index" type="number">The raid index of the selected unit.  This is a value from 1 to GetNumRaidMembers().</param>
	</function>
	<function name="SetPortraitToTexture">
		<summary>Sets a portrait to a given texture.</summary>
		<param name="frameName" type="string">The global name of the portrait texture to be altered</param>
		<param name="texturePath" type="string">The path to the texture to be used</param>
	</function>
	<function name="GetNumSockets">
		<summary>Gets the number of sockets in the open item</summary>
		<return name="numSockets" type="number">The number of available sockets for the open item.</return>
	</function>
	<function name="PickupPetAction">
		<summary>Picks up the pet action in the given slot and places it under the cursor.</summary>
		<param name="slot" type="number">The index of the pet action on the pet's actionbar</param>
	</function>
	<function name="ExpandQuestHeader">
		<summary>Expands a quest header in the quest log</summary>
		<param name="index" type="number">The index of the quest log entry to expand.  If the index supplied is invalid, or not a quest header then this function will instead expand all quest headers. This index is separate from the quest indices such that regardless of how many quests you have showing in the quest log, index 2 will always be the second header.</param>
	</function>
	<function name="IsAuctionSortReversed">
		<summary>Returns whether or not a column in the auction house interface is reverse sorted or not.</summary>
		<param name="type" type="string">Type of the auction listing</param>
		<param name="sort" type="string">Column that can be sorted on</param>
		<return name="isReversed" apitype="onenil">1 if the queried sort is reversed, nil otherwise</return>
		<return name="isSorted" apitype="onenil">1 if the queried sort has been sorted on, nil otherwise</return>
	</function>
	<function name="SetPetStablePaperdoll">
		<summary>Sets the given model to the currently selected stabled pet's model</summary>
		<param name="model" type="table">A model frame</param>
	</function>
	<function name="SetLookingForMore">
		<summary>Start looking for more members for the given activity type and index</summary>
		<param name="activityType" type="number">The type of activity. See the return values of GetLFGTypes() for valid indices.</param>
		<param name="activityIndex" type="number">The specific activity index to look for more members for. See the return values of GetLFGTypeEntries() for valid indices.</param>
	</function>
	<function name="SetPartyAssignment">
		<summary>Assigns a party role (maintank, mainassist) to a player or unit</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to assign a role</param>
			<param name="name" type="string">The name of the player to assign a role</param>
		</paramchoice>
	</function>
	<function name="DeclineLFGMatch" />
	<function name="SetPVP">
		<summary>Enables/Disables PVP for the player.</summary>
		<param name="state" apitype="onenil">1 to enable PVP, nil to disable</param>
	</function>
	<function name="GetSpellName">
		<summary>Gets the name and subtext of a given spellid</summary>
		<param name="spellid" type="number">The spellid to query</param>
		<param name="bookType" type="string">The type of spellbook</param>
		<return name="spellName" type="string">The name of the spell</return>
		<return name="subSpellName" type="string">The text displayed on the second line of the spellbook, such as "Rank 5", "Racial Passive", or "Artisan".</return>
	</function>
	<function name="StopCinematic">
		<summary>Stops a cinematic that is currently playing</summary>
	</function>
	<function name="GetNumQuestItems">
		<summary>Gets the number of items necessary to complete the active quest</summary>
		<return name="numRequiredItems" type="number">The number of required items to complete the quest</return>
	</function>
	<function name="ClearLookingForMore">
		<summary>Clears all active LFM requests, removing the player from the LFG queue</summary>
	</function>
	<function name="GetNumStablePets">
		<summary>Gets the number of stabled pets</summary>
		<return name="numPets" type="number">The number of stabled pets.  This value does not include your current pet.</return>
	</function>
	<function name="SetOverrideBindingClick">
		<summary>Sets an override binding that acts like a mouse click on a button.</summary>
		<param name="owner" type="table">The frame responsible for setting the override</param>
		<param name="isPriority" type="boolean">Indicates that this is a priority override binding</param>
		<param name="key" type="string">The key to bind to the button (e.g. "CTRL-2")</param>
		<param name="buttonName" type="string">The name of the button to which the key will be bound or nil to remove the override binding</param>
		<param name="mouseClick" type="string" optional="true">The mouse button sent to the button's OnClick handler</param>
	</function>
	<function name="VoiceChat_PlayLoopbackSound">
		<summary>Plays a previously recorded loopback sound</summary>
	</function>
	<function name="CollapseQuestHeader">
		<summary>Collapses a header in the quest log</summary>
		<param name="index" type="number">The index of the quest header.  This index is separate from the quest indices such that regardless of how many quests you have showing in the quest log, index 2 will always be the second header.</param>
	</function>
	<function name="CommentatorStartInstance" />
	<function name="SendMail">
		<summary>Sends mail to a player</summary>
		<param name="target" type="string">The destination of the mail</param>
		<param name="subject" type="string">The subject of the mail</param>
		<param name="body" type="string">The body of the mail</param>
	</function>
	<function name="ConfirmReadyCheck">
		<summary>Sends your ready status to the raid leader when asked for a readycheck</summary>
		<param name="ready" apitype="onenil">1 if the player is ready, otherwise nil.</param>
	</function>
	<function name="CloseGuildRegistrar">
		<summary>Closes the guild registrar frame</summary>
	</function>
	<function name="SetMouselookOverrideBinding">
		<summary>Overrides the default mouselook bindings to perform another binding with the mouse buttons</summary>
		<param name="key" type="string">The mouselook key to override</param>
		<param name="binding" type="string">The binding to perform instead of mouselooking, or nil to clear the override</param>
	</function>
	<function name="TurnRightStart" />
	<function name="GetNumVoiceSessionMembersBySessionID">
		<summary>Gets the number of members in a voice channel</summary>
		<param name="sessionId" type="number">A unique session ID returned from ChannelPulloutRoster_GetSessionIDByName()</param>
		<return name="numMembers" type="number">The number of members in a given voice channel</return>
	</function>
	<function name="SetMapToCurrentZone">
		<summary>Sets the world map to the player's current zone</summary>
	</function>
	<function name="GuildControlSetRank">
		<summary>Sets the current rank in the guild control window</summary>
		<param name="rank" type="number">The numeric guild rank to edit.  The Guild Master rank is always 1</param>
	</function>
	<function name="GetTradeSkillCooldown">
		<summary>Gets the cooldown for a given trade skill</summary>
		<param name="index" type="number">The index of a trade skill</param>
		<return name="cooldown" type="number">The remaining cooldown of the tradeskill in seconds</return>
	</function>
	<function name="issecure">
		<summary>Returns whether or not the current execution path is secure</summary>
		<return name="secure" apitype="onenil">1 if the current execution path is secure, otherwise nil</return>
	</function>
	<function name="SetLootMethod">
		<summary>Sets the loot method when in a group or party. Requires leader.</summary>
		<param name="method" type="string">Method to use for loot distribution.</param>
		<param name="master" type="string">Name of the master looter</param>
	</function>
	<function name="PlaySoundFile">
		<summary>Plays a specified sound file.</summary>
		<param name="soundFile" type="string">A path to the sound file to be played</param>
	</function>
	<function name="ToggleSheath">
		<summary>Sheaths or unsheathes the player's hand-held items</summary>
	</function>
	<function name="SetSelectedMute">
		<summary>Selects the given muted player for use by other functions</summary>
		<param name="index" type="number">The index of the muted player to select</param>
	</function>
	<function name="SetLFGComment">
		<summary>Adds a comment to your listing in the LFG system</summary>
		<param name="comment" type="string">A comment to be shown with your listing in the LFG system</param>
	</function>
	<function name="UpdateInventoryAlertStatus" />
	<function name="GetSelectedMute">
		<summary>Gets the index of the selected muted player in the muted list</summary>
		<return name="selectedMute" type="number">The index of the selected muted player in the list of muted players</return>
	</function>
	<function name="GetReleaseTimeRemaining">
		<summary>Gets the amount of time left until the player is automatically released from their body</summary>
		<return name="timeleft" type="number">The amount of time left until the player is auto-released from their body</return>
	</function>
	<function name="CompleteQuest">
		<summary>Completes the current quest in a questgiver dialog.</summary>
	</function>
	<function name="ResetDisabledAddOns">
		<summary>Resets the enabled status of addons before the change is committed via a reload</summary>
	</function>
	<function name="GetContainerItemInfo">
		<summary>Returns information about an item in a container</summary>
		<param name="index" type="number">Container index to query.</param>
		<param name="slot" type="number">Slot within container to query.</param>
		<return name="texture" type="string">Texture path of the item.</return>
		<return name="itemCount" type="number">Number of items in the slot.</return>
		<return name="locked" apitype="onenil">1 if the item is locked, nil otherwise.  An item can become locked when splitting stacks or if the item is in the trade/mail/auction windows.</return>
		<return name="quality" type="number">Item quality indicator.</return>
		<return name="readable" apitype="onenil">1 if the item is readable, nil otherwise.  An item is readable when it is a book or scroll that can be read by right-clicking.</return>
	</function>
	<function name="GetCVar">
		<summary>Gets the value of a stored configuration variable</summary>
		<param name="cvar" type="string">The name of a configuration variable.  If an invalid CVar is passed to this function, it will cause a Lua error.</param>
		<return name="value">The stored value</return>
	</function>
	<function name="GetTexLodBias" />
	<function name="SetBindingSpell">
		<summary>Binds a spell directly to a key combination</summary>
		<param name="KEY" type="string">The key combination to bind the spell to</param>
		<param name="spellname" type="string">The name of a spell to bind</param>
	</function>
	<function name="CommentatorLookatPlayer" />
	<function name="SetGuildBankWithdrawLimit">
		<summary>Sets the amount of withdrawals allowed for the selected guild rank</summary>
		<param name="amount" type="number">The amount of items that can be withdrawn per day</param>
	</function>
	<function name="SetGuildBankText">
		<summary>Sets the info page text on the given guild bank tab</summary>
		<param name="tab" type="number">Guild bank tab to query.  Between 1 and GetNumGuildBankTabs().</param>
		<param name="&quot;text&quot;" type="string">The text to set</param>
	</function>
	<function name="KBSetup_GetCategoryCount">
		<summary>Gets the number of available knowledge base categories</summary>
		<return name="numCategories" type="number">The number of available knowledge base categories</return>
	</function>
	<function name="IsVoiceChatEnabled">
		<summary>Returns whether or not the voice chat system is enabled</summary>
		<return name="isEnabled" apitype="onenil">1 if the voice chat system is enabled, otherwise nil</return>
	</function>
	<function name="SetGuildBankTabPermissions">
		<summary>Enables or disabled a specific guild bank tab permission</summary>
		<param name="tab" type="number">The index of a guild bank tab</param>
		<param name="permission" type="number">The index of the permission to enable/disable</param>
		<param name="enabled" apitype="onenil">1 to enable the permission, otherwise nil</param>
	</function>
	<function name="OfferPetition">
		<summary>Requests a signature from the targeted player</summary>
	</function>
	<function name="GetPetActionInfo">
		<summary>Returns information about a pet action</summary>
		<param name="index" type="number">The index of the pet action, on the pet's action bar</param>
		<return name="name" type="string">The name of the action</return>
		<return name="subtext" type="string">The subtext for the action (passive, Rank 1, etc.)</return>
		<return name="texture" type="string">The path to the action's icon texture</return>
		<return name="isToken" apitype="onenil">1 if the name/texture were token strings such as PET_ACTION_ATTACK and PET_ATTACK_TEXTURE rather than raw name/texture</return>
		<return name="isActive" apitype="onenil">1 if the action is currently active, otherwise nil</return>
		<return name="autoCastAllowed" apitype="onenil">1 if autocast is allowed for the given action</return>
		<return name="autoCastEnabled" apitype="onenil">1 if autocast is enabled for the given action</return>
	</function>
	<function name="SetGamma">
		<summary>Sets the Gamma value for the video system</summary>
		<param name="value" type="number">The gamma value to set</param>
	</function>
	<function name="GetSummonConfirmTimeLeft">
		<summary>Returns time left in seconds until summon cancel. Will return 0 with no summon dialog up.</summary>
		<return name="timeleft" type="number">Time left in seconds until summon cancel.</return>
	</function>
	<function name="ForceQuit">
		<summary>Immediately exits World of Warcraft</summary>
	</function>
	<function name="SaveGuildRoster">
		<summary>Saves the guild roster GuildRoster.txt in the Logs folder.</summary>
	</function>
	<function name="GetBindingAction">
		<summary>Gets the action associated with the given key</summary>
		<param name="key" type="string">The key or key combination to query (e.g. "CTRL-2")</param>
		<param name="checkOverride" type="boolean" optional="true">Set to 1 or true if override bindings should be checked as well (defaults to false)</param>
		<return name="action" type="string">The action associated with the given key, or an empty string if no action was found</return>
	</function>
	<function name="GetCVarAbsoluteMin">
		<summary>Gets the absolute minimum value allowed for a given CVar</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="min" type="number">The absolute minimum value allowed for the given CVar</return>
	</function>
	<function name="DoEmote">
		<summary>Executes a preset emote, with optional target</summary>
		<param name="emote" type="string">The emote to perform (does not include the '/')</param>
		<param name="target" type="string" optional="true">Name of a player or NPC to direct the emote at</param>
	</function>
	<function name="SetFactionInactive">
		<summary>Flags a faction as inactive</summary>
		<param name="index" type="number">The index of the faction in the faction list (including headers).</param>
	</function>
	<function name="GetUnitHealthRegenRateFromSpirit">
		<summary>Gets the amount of health gained per second while not in combat, as a result of spirit</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="name" type="string">The name of the character to query</param>
		</paramchoice>
		<return name="regen" type="number">The amount of health gained per second while not in combat</return>
	</function>
	<function name="UpdateAddOnMemoryUsage">
		<summary>Updates the addon memory usage information</summary>
	</function>
	<function name="SetCursor">
		<summary>Sets the cursor image.</summary>
		<param name="cursor" type="string">A cursor token listed below, the path to a 32x23 blp cursor image, or nil.  If nil is specified, any set cursor will be cleared.</param>
	</function>
	<function name="DoReadyCheck">
		<summary>Perform a ready check</summary>
	</function>
	<function name="GetNumSpellTabs">
		<summary>Gets the number of spell tabs the player has available</summary>
		<return name="numTabs" type="number">The number of spell tabs</return>
	</function>
	<function name="IsBattlefieldArena">
		<summary>Returns whether or not the npc the player is interacting with can queue for arenas</summary>
		<return name="isArena" apitype="onenil">1 if the interacting npc can queue the player for arenas, nil otherwise</return>
	</function>
	<function name="SetConsoleKey" />
	<function name="SetChatWindowSize">
		<summary>Sets the value of the chat window's font size in chat-cache.txt</summary>
		<param name="index" type="number">The index of the chat window to modify</param>
		<param name="size" type="number">The font size for the chat window</param>
	</function>
	<function name="GetTrainerSkillLineFilter">
		<summary>Returns whether or not a trainer skill line filter is enabled</summary>
		<param name="index" type="number">The index of a skill line filter.  These are any of the major headings at a trainer, such as "Frost", "Fire" and "Arcane", or "Development Skills" and "Recipes"</param>
		<return name="isEnabled" apitype="onenil">1 if the given filter is enabled, otherwise nil</return>
	</function>
	<function name="GetSendMailItem">
		<summary>Returns information on an item slot in the send mail frame.</summary>
		<param name="index" type="number">Index of the item in the send mail frame. Between 1 and ATTACHMENTS_MAX_SEND</param>
		<return name="itemName" type="string">Name of the attachment item</return>
		<return name="itemTexture" type="string">Texture of the attachment item</return>
		<return name="stackCount" type="string">Current stack size of the attachment item</return>
		<return name="quality" type="number">Item quality</return>
	</function>
	<function name="GetLFGTypes">
		<summary>Gets the type of possible LFG queries</summary>
		<return name="..." type="string">The type of looking for group queries, as a list of strings</return>
	</function>
	<function name="GetAuctionItemTimeLeft">
		<summary>Gets the time left for a given auction listing</summary>
		<param name="type" type="string">The type of auction listing</param>
		<param name="index" type="number">The index of the auction</param>
		<return name="duration" type="number">The amount of time left on the current auction</return>
	</function>
	<function name="RunMacroText" />
	<function name="SetChatWindowLocked">
		<summary>Locks a chat window, so it can't be dragged or resized.</summary>
		<param name="index" type="number">The index of the chat window</param>
		<param name="locked" apitype="onenil">1 to lock the window, nil to unlock</param>
	</function>
	<function name="IsAttackAction">
		<summary>Returns whether or not the given action flashes when engaged in melee auto-attacking.</summary>
		<param name="slot" type="number">The action slot to query</param>
		<return name="isAttack" apitype="onenil">1 if the action is a type of auto-attack, nil otherwise</return>
	</function>
	<function name="GetGuildRosterSelection">
		<summary>Gets the raid roster index of your currently selected guild member.</summary>
		<return name="index" type="number">The index of your currently selected guild member or 0 if none is selected.</return>
	</function>
	<function name="IsTitleKnown">
		<summary>Returns whether or not a given title is known (available) to the player</summary>
		<param name="titleId" type="number">A title index from 1 to GetNumTitles()</param>
		<return name="isKnown" apitype="onenil">1 if the title is known (available) to the player, otherwise nil</return>
	</function>
	<function name="LearnTalent">
		<summary>Learns the selected talent in the selected talent tree.</summary>
		<param name="tabIndex" type="number">The index of the talent tree.</param>
		<param name="talentIndex" type="number">The index of the talent.</param>
	</function>
	<function name="SetChatWindowAlpha">
		<summary>Sets the value of the chat window alpha in chat-cache.txt</summary>
		<param name="index" type="number">The index of the chat window to modify</param>
		<param name="alpha" type="number">The alpha value for the window (0.0 - 1.0)</param>
	</function>
	<function name="GetInspectArenaTeamData">
		<summary>Returns information about an inspect target's arena team</summary>
		<param name="index" type="number">The index of the arena team.  These are indexed from smallest to largest, with the first team (normally 2v2) being 1.</param>
		<return name="teamName" type="string">The name of the arena team</return>
		<return name="teamSize" type="number">The size of the team (2 for 2v2, 3 for 2v2, etc.)</return>
		<return name="teamRating" type="number">The team's rating</return>
		<return name="teamPlayed" type="number">The number of games played in the current arena period</return>
		<return name="teamWins" type="number">The number of games won in the current arena period</return>
		<return name="playerPlayed" type="number">The number of games the player has played in the current arena period</return>
		<return name="playerRating" type="number">The player's personal rating</return>
		<return name="bg_red" type="number">The red component color value for the background (0.0-1.0)</return>
		<return name="bg_green" type="number">The green component color value for the background (0.0-1.0)</return>
		<return name="bg_blue" type="number">The blue component color value for the background (0.0-1.0)</return>
		<return name="emblem" type="number">The index of the team's emblem graphic</return>
		<return name="emblem_red" type="number">The red component color value for the emblem (0.0-1.0)</return>
		<return name="emblem_green" type="number">The green component color value for the emblem (0.0-1.0)</return>
		<return name="emblem_blue" type="number">The blue component color value for the emblem (0.0-1.0)</return>
		<return name="border" type="number">The index of the team's border graphic</return>
		<return name="border_red" type="number">The red component color value for the border (0.0-1.0)</return>
		<return name="border_green" type="number">The green component color value for the border (0.0-1.0)</return>
		<return name="border_blue" type="number">The blue component color value for the border (0.0-1.0)</return>
	</function>
	<function name="GetSelectedStationeryTexture">
		<summary>Gets the currently selected stationery texture</summary>
		<return name="texture" type="string">The currently selected stationery texture</return>
	</function>
	<function name="SetChannelPassword">
		<summary>Sets a password on a custom chat channel</summary>
		<param name="name" type="string">The name of the channel to change</param>
		<param name="password" type="string">The password to set on the channel</param>
	</function>
	<function name="RepopMe">
		<summary>Will release your spirit and send you to the graveyard when dead.</summary>
	</function>
	<function name="GetAreaSpiritHealerTime">
		<summary>Gets the amount of time until a nearby battleground spirit healer resurrects all players in its area.</summary>
		<return name="timeleft" type="number">Seconds left before the area spirit heal is cast</return>
	</function>
	<function name="SetCVar">
		<summary>Sets the value of a configuration variable in config.wtf</summary>
		<param name="cvar" type="string">The name of the CVar to set</param>
		<param name="value">The value for the CVar</param>
		<param name="raiseEvent" type="string" optional="true">If set, this causes the CVAR_UPDATE event to be fired with this as its first argument (note that numbers work too)</param>
	</function>
	<function name="AscendStop">
		<summary>Called when the player releases the binding for Jump</summary>
	</function>
	<function name="SetGuildRosterSelection">
		<summary>Sets the selection in the guild roster</summary>
		<param name="index" type="number">The index in the guild roster</param>
	</function>
	<function name="GetNumQuestLeaderBoards">
		<summary>Gets the number of quest objectives for a given quest</summary>
		<param name="index" type="number" optional="true">The index of a quest in the quest log.  This will default to GetQuestLogSelection() if index isn't supplied</param>
		<return name="numObjectives" type="number">The number of trackable quest objectives</return>
	</function>
	<function name="SetBinding">
		<summary>Sets a key combination to a given binding.</summary>
		<param name="key" type="string">The name of a key or button to be bound.</param>
		<param name="command" type="string" optional="true">The command to be bound to the given key.  If not specified, the key binding will be unbound.</param>
		<return name="success" apitype="onenil">1 if the key binding (or unbinding) was successful, otherwise nil</return>
	</function>
	<function name="GetInventoryAlertStatus">
		<summary>Gets the durability level of a given inventory slot</summary>
		<param name="index" type="number">Inventory index to query.</param>
		<return name="status" type="number">Number 0,1 or 2 indicating alert status.</return>
	</function>
	<function name="CanGuildBankRepair">
		<summary>Returns whether or not the player can pay for repairs using guild bank funds</summary>
		<return name="canRepair" apitype="onenil">1 if the player is able to repair using guild bank funds, otherwise nil</return>
	</function>
	<function name="SetBattlefieldScoreFaction">
		<summary>Sets the faction of the battlefield scoreboard.</summary>
		<param name="faction" type="number">The faction to select.</param>
	</function>
	<function name="SetBaseMip">
		<summary>Sets the level of texture resolution rendered by the client</summary>
		<param name="value" type="number">The desired level of texture resolution rendered by the client</param>
	</function>
	<function name="SetBagPortraitTexture">
		<summary>Sets a texture to a circular rendering of the specified bag's icon</summary>
		<param name="texture" type="table">The texture object to change</param>
		<param name="slot" type="number">The bag slot used for the generated texture</param>
	</function>
	<function name="UnitIsCharmed">
		<summary>Returns whether or not a unit or player is currently charmed.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to query</param>
			<param name="fullname" type="string">The full name of the unit to query</param>
		</paramchoice>
		<return name="isCharmed" apitype="onenil">1 if the given unit is charmed, otherwise nil</return>
	</function>
	<function name="SetActionBarToggles">
		<summary>Configures the display of the additional ActionBars.</summary>
		<param name="SHOW_MULTI_ACTIONBAR_1" apitype="onenil">1 to show the bottom left ActionBar, nil otherwise</param>
		<param name="SHOW_MULTI_ACTIONBAR_2" apitype="onenil">1 to show the bottom right ActionBar, otherwise nil</param>
		<param name="SHOW_MULTI_ACTIONBAR_3" apitype="onenil">1 to show the right ActionBar, otherwise nil</param>
		<param name="SHOW_MULTI_ACTIONBAR_4" apitype="onenil">1 to show the second right ActionBar, otherwise nil</param>
		<param name="ALWAYS_SHOW_MULTIBARS" apitype="onenil">1 to always show the ActionBars, otherwise nil</param>
	</function>
	<function name="PetDismiss">
		<summary>Dismisses the currently controlled pet</summary>
	</function>
	<function name="GetTrackingInfo">
		<summary>Returns information about a given tracking option</summary>
		<param name="id" type="number">The tracking index to query</param>
		<return name="name" type="string">The name of the tracking option</return>
		<return name="texture" type="string">The path to the tracking option's icon texture</return>
		<return name="active" apitype="onenil">1 if the tracking option is active, otherwise nil</return>
		<return name="category" type="string">The tracking option's category</return>
	</function>
	<function name="UnitGUID">
		<summary>Gets the given unit's globally unique identifier</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="guid" type="string">The desired GUID</return>
	</function>
	<function name="PetAggressiveMode">
		<summary>Sets your pet to aggressive mode.</summary>
	</function>
	<function name="GetCurrentResolution">
		<summary>Gets the index of the current resolution</summary>
		<return name="index" type="number">The index of the current resolution</return>
	</function>
	<function name="VoiceChat_StopPlayingLoopbackSound">
		<summary>Stops the current playback of the loopback sound</summary>
	</function>
	<function name="GetQuestLogPushable">
		<summary>Determines if the currently selected quest can be shared with your party members.</summary>
		<return name="pushable" apitype="onenil">1 if the quest is shareable, nil otherwise</return>
	</function>
	<function name="GetRealNumPartyMembers">
		<summary>Gets the number of members in the player's "real" non-battleground party</summary>
		<return name="numMembers" type="number">The number of members in the player's actual party.  This function is necessary in order to distinguish between the player's actual party, and any parties they may belong to in a battleground/arena.</return>
	</function>
	<function name="SetMultisampleFormat">
		<summary>Sets the client's multisampling format</summary>
		<param name="index" type="number">The multisampling format's index</param>
	</function>
	<function name="GetManaRegen">
		<summary>Gets the mana regeneration statistics for the player. Return values are in mana per second.</summary>
		<return name="base" type="number">The amount of mana the player regens each tick while not casting</return>
		<return name="casting" type="number">The amount of mana the player regens each tick while casting</return>
	</function>
	<function name="SendChatMessage">
		<summary>Sends a chat message</summary>
		<param name="text" type="string">The message to be sent, maximum of 255 characters</param>
		<param name="type" type="string" optional="true">The type of chat message to be sent. Defaults to SAY</param>
		<param name="language" type="string" optional="true">The language to send the message in. Defaults to the common language for the faction (Common, for Alliance, Orcish for Horde)</param>
		<param name="channel" type="string" optional="true">The channel or player receiving the message for CHANNEL/WHISPER type communications. If sending to a channel, you must use the number. This field is required for CHANNEL/WHISPER type chats, and ignored for others</param>
	</function>
	<function name="SelectTrainerService">
		<summary>Selects the given trainer service in the class trainer frame</summary>
		<param name="index" type="number">The trainer service index to select</param>
	</function>
	<function name="Sound_GameSystem_GetInputDriverNameByIndex">
		<summary>Gets the name of the given game sound input driver</summary>
		<param name="index" type="number">The desired index</param>
	</function>
	<function name="SelectPackage">
		<summary>Not yet implemented</summary>
	</function>
	<function name="PutItemInBag">
		<summary>Attempts to place a item under the cursor inside the specified bag.</summary>
		<param name="bagId" type="number">The id of the target bag.</param>
		<return name="hadItem" apitype="onenil">1 if the cursor had a item, nil otherwise.</return>
	</function>
	<function name="GetQuestLogRequiredMoney">
		<summary>Gets the amount of money required for the selected quest</summary>
		<return name="money" type="number">The amount of required money for the selected quest</return>
	</function>
	<function name="UnitIsTappedByPlayer">
		<summary>Returns whether or not a unit is tapped by the player or their group.</summary>
		<param name="unit" type="string">The unit to be queried</param>
		<return name="isTapped" apitype="onenil">1 if the unit is tapped by the player, otherwise nil</return>
	</function>
	<function name="SelectGossipAvailableQuest">
		<summary>Selects the specified quest on the gossip frame for further processing.</summary>
		<param name="index" type="number">The index of the quest on the gossip frame.</param>
	</function>
	<function name="KBSetup_IsLoaded">
		<summary>Returns whether or not the knowledge base setup has loaded successfully</summary>
		<return name="isLoaded" type="boolean">
			<summary>
				This function returns true if the knowledge base setup has loaded successfully, otherwise it returns false.  This function has the following behavior:
				* On first login after opening the client, this function will return false until the knowledge base has been opened, and the KNOWLEDGE_BASE_SETUP_LOAD_SUCCESS event has fired.
				* When reloading the UI or changing characters, the value will initially be true.  If the knowledge base UI is opened the value will be set to false on the UPDATE_GM_STATUS event and set to true again after KNOWLEDGE_BASE_SETUP_LOAD_SUCCESS
			</summary>
		</return>
	</function>
	<function name="SecureCmdOptionParse">
		<summary>Parses a secure command (macro, slash command) into an action and possible target</summary>
		<param name="cmd" type="string">A command to be parsed (typically the body of a macro, macrotext attribute or slash command</param>
		<return name="action" type="string">The action to take</return>
		<return name="target" type="string">The target to use for the given action, or nil</return>
	</function>
	<function name="GetTradeSkillInvSlots">
		<summary>Returns a list of inventory slots the current tradeskill can craft for</summary>
		<return name="..." type="string">A list of inventory slots the tradeskill is capable of creating items for.  These values are used to populate the slot dropdown in the tradeskill window</return>
	</function>
	<function name="GetActionAutocast">
		<summary>Returns information about autocast actions</summary>
		<param name="slot" type="number">The action slot to check</param>
		<return name="autocast1" apitype="onenil" />
		<return name="autocast2" apitype="onenil" />
	</function>
	<function name="SetFriendNotes">
		<summary>Sets a note on a member of your friends list</summary>
		<paramchoice>
			<param name="index" type="number">Numerical friend index (from 1 to GetNumFriends())</param>
			<param name="&quot;name&quot;" type="string">Name of friend to modify</param>
		</paramchoice>
	</function>
	<function name="SaveBindings">
		<summary>Saves the current keybindings set to disk</summary>
		<param name="set" type="number">Which keybindings set the current settings should be saved to.</param>
	</function>
	<function name="RunScript">
		<summary>Runs a string as a Lua script</summary>
		<param name="script" type="string">A Lua script to be run</param>
	</function>
	<function name="SetChatWindowName">
		<summary>Set the name for a chat window in chat-cache.txt</summary>
		<param name="index" type="number">The index of a chat window</param>
		<param name="name" type="string">The name to give the chat window</param>
	</function>
	<function name="RunMacro" />
	<function name="GetNumSkillLines">
		<summary>Gets the number of skills to be listed in the Skills window.</summary>
		<return name="numSkills" type="number">The number of skills the player currently knows.</return>
	</function>
	<function name="GetNumQuestRewards">
		<summary>Gets the number of quest rewards for completing a quest</summary>
		<return name="numQuestRewards" type="number">The number of quest rewards you are guaranteed to get upon completion of the currently displayed quest.</return>
	</function>
	<function name="RollOnLoot">
		<summary>Perform a type of roll (pass/need/greed) on a given loot</summary>
		<param name="lootIndex" type="number">The index of the loot to roll on</param>
		<param name="rollType" type="number">The roll action to perform</param>
	</function>
	<function name="ReturnInboxItem">
		<summary>Gets the given inbox item to its sender.</summary>
		<param name="index" type="number">Inbox item to return to sender.</param>
	</function>
	<function name="SortArenaTeamRoster">
		<summary>Sorts the selected arena team's roster by the given sort type</summary>
		<param name="sortType" type="string">The column to sort the roster by</param>
	</function>
	<function name="ResurrectHasSickness">
		<summary>Determines if using a spirit healer to resurrect will give you resurrection sickness.</summary>
		<return name="hasSickness" apitype="onenil">1 if resurrecting at the spirit healer will give you resurrection sickness, nil otherwise.</return>
	</function>
	<function name="NextView">
		<summary>Change the camera view to the next predefined camera angle.</summary>
	</function>
	<function name="RestartGx">
		<summary>Restart the client's graphic subsystem</summary>
	</function>
	<function name="GetNumAddOns">
		<summary>Gets the number of addons in the addon listing</summary>
		<return name="numEntrys" type="number">The number of addons in the addon listing</return>
	</function>
	<function name="ClearLFMAutofill">
		<summary>Stops the LFM interface from auto-adding members to your group</summary>
	</function>
	<function name="DisableSpellAutocast">
		<summary>Disables auto-cast for a given pet spell</summary>
		<param name="spell" type="string">The name of a pet spell</param>
	</function>
	<function name="RequestInspectHonorData">
		<summary>Requests honor data for the currently inspected target</summary>
	</function>
	<function name="AddOrDelMute">
		<summary>Adds or removes a player/unit from the voice mute list</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unit to mute</param>
			<param name="name" type="string">The name of the player to mute</param>
		</paramchoice>
	</function>
	<function name="RequestBattlefieldScoreData">
		<summary>Requests the latest battlefield score from the server. The score is not directly returned by the function call, it'll dispatch the UPDATE_BATTLEFIELD_SCORE event instead.</summary>
	</function>
	<function name="ReportPlayerIsPVPAFK">
		<summary>Reports a player or unit as AFK in a PVP battleground</summary>
		<paramchoice>
			<param name="name" type="string">The name of the player to report</param>
			<param name="unit" type="string" apitype="unitid">The unit to report</param>
		</paramchoice>
	</function>
	<function name="AcceptXPLoss">
		<summary>Confirms the loss of 25% durability when resurrecting at the spirit healer, without confirmation</summary>
	</function>
	<function name="GetTradeSkillRecipeLink">
		<summary>Returns an item link for a tradeskill recipe</summary>
		<param name="index" type="number">The index of the trade skill recipe</param>
		<return name="link" type="string">A link for the given item recipe</return>
	</function>
	<function name="ReplaceTradeEnchant">
		<summary>Confirms the replacement of an existing enchant being applied in the trade window</summary>
	</function>
	<function name="ClickStablePet">
		<summary>Simulates a click on the given stable pet index</summary>
		<param name="index" type="number">The index of the stable slot.</param>
		<return name="selected" apitype="onenil">1 if the function selected a stabled pet, rather than placed a pet in the stable slot</return>
	</function>
	<function name="UnitIsFeignDeath">
		<summary>Returns whether or not a given unit is feigning death</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isFeign" apitype="onenil">1 if the unit is feigning death, otherwise nil</return>
	</function>
	<function name="RepairAllItems">
		<summary>Attempts to repair all items.  Requires the player to be at a merchant that repairs.  Passing 1 to the function will attempt to make use of guild bank money for repairs.</summary>
		<param name="useGuildMoney" apitype="onenil">1 to try and use guild bank money to repair, nil to use your own money</param>
	</function>
	<function name="RemoveFriend">
		<summary>Removes a friend from your friend's list</summary>
		<paramchoice>
			<param name="name" type="string">The name of a friend to remove</param>
			<param name="index" type="number">The index of an entry in the friends list</param>
		</paramchoice>
	</function>
	<function name="RemoveChatWindowMessages">
		<summary>Hides a group of messages from a chat frame</summary>
		<param name="index" type="number">The index of the chat frame (1-7)</param>
		<param name="messageGroup" type="string">The identifying string for the given message group</param>
	</function>
	<function name="MovieRecording_ToggleGUI">
		<summary>Toggles recording of the user interface when recording a video.</summary>
	</function>
	<function name="MovieRecording_SearchUncompressedMovie">
		<summary>Enables or disables a search for uncompressed movies</summary>
		<param name="enable" type="boolean">true to enable searching for uncompressed movies, false to end the running search</param>
	</function>
	<function name="RemoveChatWindowChannel">
		<summary>Removes a chat channel from the given </summary>
		<param name="index" type="number">The index of the chat frame</param>
		<param name="channel" type="string">The name of the channel to remove</param>
	</function>
	<function name="ReloadUI">
		<summary>Reloads the user interface</summary>
	</function>
	<function name="GetAttackPowerForStat">
		<summary>Calculates the amount of attack power that your current character would gain from having the given value for the specified stat.</summary>
		<param name="statIndex" type="number">The index of the stat to query</param>
		<param name="effectiveStat" type="number">The value of the stat to use in the attack power calculation</param>
		<return name="attackPower" type="number">The amount of attack power your character would gain from having the given amount of the selected stat</return>
	</function>
	<function name="GuildInfo">
		<summary>Queries the server for the player's guild information</summary>
	</function>
	<function name="TaxiNodeGetType">
		<summary>Gets the type of the Taxi Node slot requested.</summary>
		<param name="slot" type="number">TaxiNode slot on the current Taxi Map. Between 1 and NumTaxiNodes().</param>
		<return name="type" type="string">Type of the Taxi Node.</return>
	</function>
	<function name="GetGuildBankTabInfo">
		<summary>Returns information about a given guild bank tab.</summary>
		<param name="tab" type="number">The index of a guild bank tab</param>
		<return name="name" type="string">The name of the guild tab</return>
		<return name="icon" type="string">The path to the tab's icon texture</return>
		<return name="isViewable" apitype="onenil">1 if the guild tab is viewable, otherwise nil</return>
		<return name="canDeposit" apitype="onenil">1 if the player can deposit into the guild bank tab</return>
		<return name="numWithdrawals" type="number">The maximum number of withdrawals the player can do in the tab</return>
		<return name="remainingWithdrawals" type="number">The number of withdrawals the player can make in the tab</return>
	</function>
	<function name="ReadFile" />
	<function name="IsHelpfulItem">
		<summary>Returns whether or not the item is helpful</summary>
		<paramchoice>
			<param name="itemID" type="number">An item's ID</param>
			<param name="itemName" type="string">An item's name</param>
			<param name="itemLink" type="string">An item's link</param>
		</paramchoice>
		<return name="helpful" apitype="onenil">1 if the item is helpful, nil for invalid or non-helpful items.</return>
	</function>
	<function name="GetExistingSocketLink">
		<summary>Returns an item link for a socketed gem.</summary>
		<param name="index" type="number">The index of the item socket to query</param>
		<return name="link" type="string">The item link of the gem already in the given socket</return>
	</function>
	<function name="CommentatorSetMode" />
	<function name="RandomRoll">
		<summary>Rolls a random number between min and max</summary>
		<param name="min" type="thread">The minimum amount to roll</param>
		<param name="max" type="thread">The maximum amount to roll</param>
	</function>
	<function name="QuestChooseRewardError">
		<summary>Triggers the client's error when the player hasn't chosen a quest reward from the available choices</summary>
	</function>
	<function name="IsAutoRepeatSpell">
		<summary>Returns whether or not the given spell is an auto-repeat spell</summary>
		<param name="spellName" type="string">The name of the spell to query</param>
		<return name="isAutoRepeat" apitype="onenil">If the spell is an auto-repeating spell</return>
	</function>
	<function name="QueryGuildBankText">
		<summary>Queries the server for the info text of the specified guild bank tab</summary>
		<param name="tab" type="number">Guild bank tab to query.  Between 1 and GetNumGuildBankTabs().</param>
	</function>
	<function name="GetTradeSkillReagentItemLink">
		<summary>Gets the item link for a tradeskill's reagent</summary>
		<param name="skillIdx" type="number">The index of the skill to be queried</param>
		<param name="reagentIdx" type="number">The index of the reagent</param>
		<return name="link" type="string">The item link of the given reagent for a tradeskill</return>
	</function>
	<function name="CombatLogSetCurrentEntry">
		<summary>Sets the combat log cursor to the given index</summary>
		<param name="index" type="number">The target entry</param>
		<param name="ignoreFilter" type="boolean">Uses the entire unfiltered combat log history if true</param>
	</function>
	<function name="QueryGuildBankTab">
		<summary>Queries the server for the contents of the specified guildbank tab.</summary>
		<param name="tab">Guild bank tab to query.  Between 1 and GetNumGuildBankTabs().</param>
	</function>
	<function name="ConfirmLootRoll">
		<summary>Confirms a loot roll for a given item that will be bound to your character if you win the roll</summary>
		<param name="lootIndex" type="number">The index of the loot to roll on</param>
		<param name="rollType" type="number">The roll action to confirm</param>
	</function>
	<function name="BuyMerchantItem">
		<summary>Purchases an item available from a merchant, without confirmation</summary>
		<param name="index" type="number">The index of an item available at the merchant</param>
		<param name="quantity" type="number">The number of items to purchase</param>
	</function>
	<function name="GetRunningMacroButton">
		<summary>Gets the mouse button that was used to activate the running macro</summary>
		<return name="button" type="string">The mouse button that was used to activate the macro.  If the macro was triggered by a keybinding the mouse button will be "LeftButton".</return>
	</function>
	<function name="GetBaseMip">
		<summary>Gets the level of texture resolution rendered by the client</summary>
		<return name="baseMip" type="number">The level of texture resolution rendered by the client</return>
	</function>
	<function name="PositionMiniWorldMapArrowFrame" />
	<function name="CameraOrSelectOrMoveStart">
		<summary>Called when left-clicking in the 3-D world</summary>
	</function>
	<function name="GetHonorCurrency">
		<summary>Gets the number of honor points available to purchase rewards</summary>
		<return name="honorPoints" type="number">The number of honor points available to purchase rewards</return>
	</function>
	<function name="GetChannelList">
		<summary>Gets the list of channels the player currently belongs to</summary>
		<return name="channel" type="string">The name of the channel</return>
		<return name="index" type="number">The index of the channel</return>
		<return name="...">A list of results</return>
	</function>
	<function name="KBSetup_GetSubCategoryCount">
		<summary>Gets the number of available subcategories for a given category</summary>
		<param name="index" type="number">The index of the category</param>
		<return name="numSubCategories" type="number">The number of available subcategories</return>
	</function>
	<function name="SetLookingForGroup">
		<summary>Sets one of the three looking for group slots</summary>
		<param name="slot" type="number">The index of a slot in the LFG tab of the Looking For Group system.  There are three slots available, so this value should be a number 1 - 3.</param>
		<param name="type" type="number">The index of a type as listed from GetLFGTypes()</param>
		<param name="index" type="number">The index of a dungeon/quest entry as listed from GetLFGTypeEntries().</param>
	</function>
	<function name="CommentatorToggleMode" />
	<function name="CameraZoomIn">
		<summary>Zooms the camera in a specified distance</summary>
		<param name="distance" type="number">The distance to zoom in</param>
	</function>
	<function name="GetMerchantItemMaxStack">
		<summary>Determines how many of a merchant item you can purchase in one transaction</summary>
		<param name="index" type="number">The merchant index of the desired merchant item</param>
		<return name="maxStack" type="number">The largest quantity of the item you can purchase at once</return>
	</function>
	<function name="PlaySound">
		<summary>Plays a sound file. You have to specify the relative path from the WoW main directory.</summary>
		<param name="sound" type="string">The sound file to play.</param>
	</function>
	<function name="PlayMusic">
		<summary>Plays a music file</summary>
		<param name="musicfile" type="string">The path to a music file.  This can be a path in the MPQ files, or a file located within an addon directory.</param>
	</function>
	<function name="UnitIsFriend">
		<summary>Returns whether or not two units are friendly</summary>
		<param name="unit" type="string" apitype="unitid">The first unit to query</param>
		<param name="otherUnit" type="string" apitype="unitid">The second unit to query</param>
		<return name="isFriends" apitype="onenil">1 if the two units are friends, otherwise nil</return>
	</function>
	<function name="PlaceAction">
		<summary>Places the action held on the cursor in a specified action bar slot</summary>
		<param name="slot" type="number">Places the action held on the cursor in a specific action bar slot</param>
	</function>
	<function name="PitchUpStart" />
	<function name="DestroyTotem">
		<summary>Destroys the totem of the given element</summary>
		<param name="slot" type="number">The element of the totem you want to destroy</param>
	</function>
	<function name="PickupTradeMoney">
		<param name="amount" type="number">The amount of money to take from the trade window.</param>
	</function>
	<function name="SetSelectedAuctionItem">
		<summary>Selects a specific item in the auction house</summary>
		<param name="type" type="string">The type of auction house listing</param>
	</function>
	<function name="GetTrainerSelectionIndex">
		<summary>Gets the currently selected index in the trainer window</summary>
		<return name="selectionIndex" type="number">The currently selected index in the trainer window</return>
	</function>
	<function name="PetWait">
		<summary>Orders the player's pet into "Stay" mode.</summary>
	</function>
	<function name="PetStopAttack">
		<summary>Stops your pet auto-attacking.</summary>
	</function>
	<function name="DemoteAssistant">
		<summary>Demotes the given player from raid assistant status</summary>
		<param name="name" type="string">The name of the player</param>
	</function>
	<function name="PetHasActionBar">
		<summary>Returns whether or not the player's current pet has an action bar</summary>
		<return name="hasActionBar" apitype="onenil">Returns 1 if the player's current pet has an action bar, otherwise nil</return>
	</function>
	<function name="MouselookStop">
		<summary>Disables mouse-look mode, where cursor movement rotates the camera</summary>
	</function>
	<function name="GetLootMethod">
		<summary>Retrieves information about the groups loot setting.</summary>
		<return name="lootMethod" type="string">The currently active loot method.</return>
		<return name="partyMaster" type="number">The party unit id of the player currently being the loot master.</return>
		<return name="raidMaster" type="number">The raid unit id of the player currently being the loot master.</return>
	</function>
	<function name="PetCanBeRenamed">
		<summary>Returns whether or not the currently controlled pet can be renamed</summary>
		<return name="canRename" apitype="onenil">1 if the player can rename the currently controlled pet, otherwise nil</return>
	</function>
	<function name="PetCanBeAbandoned">
		<summary>Returns whether or not the player's pet can be abandoned</summary>
		<return name="canAbandon" apitype="onenil">1 if the player's pet can be abandoned, otherwise nil</return>
	</function>
	<function name="GetOwnerAuctionItems">
		<summary>Queries the server for a page of self-posted auctions.</summary>
		<param name="page" type="number">Which page of self-posted auctions to query.</param>
	</function>
	<function name="PetAttack">
		<summary>Instructs your pet to attack your current target. Requires a keypress</summary>
	</function>
	<function name="DeclineResurrect">
		<summary>Declines a resurrection spell</summary>
	</function>
	<function name="PetAbandon">
		<summary>Releases the players current pet back into freedom.</summary>
	</function>
	<function name="SocketInventoryItem">
		<summary>Opens the socketing UI for the given inventory item, if it has sockets</summary>
		<param name="slot" type="number">An inventory slot Id</param>
	</function>
	<function name="GetBattlefieldTimeWaited">
		<summary>Gets the amount of time the player has queued for the given battleground, in milliseconds</summary>
		<param name="index" type="number">The index of a battleground or arena as listed in the tooltip for the minimap battle status icon.</param>
		<return name="timeInQueue" type="number">The amount of time the player has been in a queue for the given battlefield, in milliseconds</return>
	</function>
	<function name="OpenTrainer">
		<summary>Closes the trainer window if it is open, otherwise appears to do nothing</summary>
	</function>
	<function name="CanSendLFGQuery">
		<summary>Returns whether or not the player can submit a LFG/LFM request for the given type and index</summary>
		<param name="type" type="number">The type of LFG query.  The valid values can be obtained from GetLFGTypes()</param>
		<param name="index" type="number">The specific LFG dungeon/quest index.  The valid values can be obtained from GetLFGTypeEntries()</param>
		<return name="canSend" type="boolean">true if the player can submit a LFG query for the given type/index, otherwise false</return>
	</function>
	<function name="OffhandHasWeapon">
		<summary>Determines whether the player has a weapon in the offhand slot</summary>
		<return name="hasWeapon" apitype="onenil">1 if the player has a weapon equipped in the offhand, nil otherwise</return>
	</function>
	<function name="SetGuildBankTabInfo">
		<summary>Sets the name and icon for a guild bank tab</summary>
		<param name="tab" type="number">The index of a guild bank tab</param>
		<param name="name" type="string">The name for the tab</param>
		<param name="iconIndex" type="number">The index of the icon to display.  This should be a number between 1 and GetNumMacroItemIcons()</param>
	</function>
	<function name="NumTaxiNodes">
		<summary>Gets the current number of taxi nodes defined.</summary>
		<return name="num_nodes" type="number">Number of nodes.</return>
	</function>
	<function name="ItemTextGetMaterial">
		<summary>Gets the texture for the current book/parchment being displayed in the ItemTextFrame. A return value of 'nil' means 'Parchment' is being used.</summary>
		<return name="material" type="string">Texture for the current book/parchment being displayed.</return>
	</function>
	<function name="NotifyInspect">
		<summary>Queries the server for an inspected unit's talent information</summary>
		<param name="unit" type="string" apitype="unitid">The unit to inspect</param>
	</function>
	<function name="MusicPlayer_PlayPause">
		<summary>Plays or pauses playback in iTunes</summary>
	</function>
	<function name="SummonFriend">
		<summary>internal</summary>
	</function>
	<function name="MovieRecording_MaxLength">
		<summary>Gets the maximum length of a recorded video</summary>
		<param name="width" type="number">The width in pixels of the video resolution</param>
		<param name="framerate" type="number">The framerate of the resulting video</param>
		<param name="capturesound" apitype="onenil">1 to capture sound, otherwise nil</param>
		<return name="time" type="string">The maximum length of a recorded video as a string (HH:MM:SS)</return>
	</function>
	<function name="GetNewSocketInfo">
		<summary>Returns information about a gem that would be socketed</summary>
		<param name="index" type="number">The socket index</param>
		<return name="name" type="string">The name of the gem that would be socketed</return>
		<return name="icon" type="string">The path to the new gem's icon texture</return>
		<return name="gemMatchesSocket" apitype="onenil">1 if the gem being socketed matches the socket color, otherwise nil</return>
	</function>
	<function name="ClosePetStables">
		<summary>Closes the Pet Stable UI window</summary>
	</function>
	<function name="ClosePetitionVendor">
		<summary>Closes the petition vendor window</summary>
	</function>
	<function name="RegisterForSave">
		<summary>Registers a variable to be saved between sessions</summary>
	</function>
	<function name="GetTalentLink">
		<summary>Gets a spell link for the given talent</summary>
		<param name="tabIndex" type="number">The tab of the talent (1-3)</param>
		<param name="talentIndex" type="number">The index of the talent (from 1 to GetNumTalents(tabIndex))</param>
		<param name="isInspect" type="boolean" optional="true">Determines the target of the request</param>
		<return name="link" type="string">The desired spell link</return>
	</function>
	<function name="MovieRecording_DeleteMovie">
		<summary>Deletes a movie currently pending compression</summary>
		<param name="filename" type="string">The full path to a movie's filename</param>
	</function>
	<function name="MoveViewUpStop" />
	<function name="UnitIsTrivial">
		<summary>Returns whether or not the given unit is trivial</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<return name="isTrivial" apitype="onenil">1 if the unit is considered trivial, otherwise nil</return>
	</function>
	<function name="GetNumLootItems">
		<summary>Gets the number of items available to be looted</summary>
		<return name="numItems" type="number">The number of the items available to be looted</return>
	</function>
	<function name="MoveViewOutStop" />
	<function name="GetNewSocketLink">
		<summary>Returns an item link for a gem to be socketed</summary>
		<param name="index" type="number">The index of the item socket to query</param>
		<return name="link" type="string">The item link of the gem to be set in the given socket</return>
	</function>
	<function name="GetSelectedIgnore">
		<summary>Gets the currently selected index in the ignore listing</summary>
		<return name="index" type="number">The currently selected ignore index</return>
	</function>
	<function name="GetOptOutOfLoot">
		<summary>Returns `1` if you are opting out of loot, otherwise `nil`.</summary>
	</function>
	<function name="DisableAllAddOns">
		<summary>Flags all addons as disabled for the current character</summary>
	</function>
	<function name="MoveViewOutStart" />
	<function name="ChangeChatColor">
		<summary>Changes the color of a message type in the chat windows</summary>
		<param name="messageType" type="string">The message type, as listed in chat-cache.txt.  Example values are "SAY" and "CHANNEL1".</param>
		<param name="red" type="number">The value of the red component color (0.0 - 1.0)</param>
		<param name="green" type="number">The value of the green component color (0.0 - 1.0)</param>
		<param name="blue" type="number">The value of the blue component color (0.0 - 1.0)</param>
	</function>
	<function name="GetMerchantItemCostInfo">
		<summary>Gets the cost of a merchant item, in honor points, arena points, and marks</summary>
		<param name="index" type="number">The index of the item to query</param>
		<return name="honorPoints" type="number">The cost of the item, in honor points</return>
		<return name="arenaPoints" type="number">The cost of the item, in arena points</return>
		<return name="itemCount" type="number">The cost of the item, in some item currency</return>
	</function>
	<function name="MoveViewLeftStop" />
	<function name="CancelTradeAccept">
		<summary>Cancels a trade that is currently pending accepting by the other party</summary>
	</function>
	<function name="MoveViewInStop" />
	<function name="TogglePlayerBounds" />
	<function name="ShowMerchantSellCursor">
		<summary>Shows the merchant "sell item" cursor</summary>
	</function>
	<function name="PetDefensiveMode">
		<summary>Sets the pet into defensive mode, only attacking when the player or itself is attacked</summary>
	</function>
	<function name="MouselookStart">
		<summary>Enables mouse-look mode, where cursor movement rotates the camera</summary>
	</function>
	<function name="SetTradeSkillInvSlotFilter">
		<summary>Enables or disables an inventory slot filter in the tradeskill window</summary>
		<param name="index" type="number">The index of an inventory slot filter</param>
		<param name="enable" apitype="onenil" optional="true">1 to enable the filter, otherwise nil</param>
		<param name="exclusive" apitype="onenil" optional="true">1 to enable the filter exclusively, otherwise nil</param>
	</function>
	<function name="LoggingCombat">
		<summary>Toggle combat logging to Logs/WoWCombatLog.txt. Toggle = true to turn on logging, Toggle = false to turn off logging, nil to query logging status.</summary>
		<param name="toggle" type="boolean">Toggle on or off, defaults to nil.</param>
		<return name="isLogging" apitype="onenil">Chat logging flag.</return>
	</function>
	<function name="UnitHasRelicSlot">
		<summary>Returns whether or not the queried unit has a relic slot.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="hasRelic" apitype="onenil">1 if the unit has a relic slot, nil if not.</return>
	</function>
	<function name="GetNumTrackingTypes">
		<summary>Gets the number of available tracking types</summary>
		<return name="count" type="number">The number of available tracking types</return>
	</function>
	<function name="LoadAddOn">
		<summary>Loads an AddOn manually if it is Load on Demand. Will also load the dependencies of an AdddOn.</summary>
		<paramchoice>
			<param name="index" type="number">AddOn index between 1 and GetNumAddOns().  Blizzard addons cannot be loaded by index.</param>
			<param name="name" type="string">Name of the add on to load. Not case-sensitive.  Uses the addon folder name, not the title from the TOC.</param>
		</paramchoice>
		<return name="loaded" type="number">1 is the addon is loaded, nil otherwise</return>
		<return name="reason" type="string">Will contain the reason when an addon fails to load</return>
	</function>
	<function name="CancelSkillUps" />
	<function name="LeaveParty">
		<summary>Call this function to leave the current party or raid</summary>
	</function>
	<function name="LeaveChannelByName">
		<summary>Leaves a channel by name</summary>
		<param name="name" type="string">The channel to leave</param>
	</function>
	<function name="GetMerchantNumItems">
		<summary>Gets the total number of items a merchant has to sell</summary>
		<return name="numMerchantItems" type="number">The number of items a merchant has to sell</return>
	</function>
	<function name="GetBindingByKey">
		<summary>Gets the actions bound to a specific key combination</summary>
		<param name="key" type="string">The key or key combination to query (e.g. "CTRL-2")</param>
		<return name="action" type="string">The action currently bound to the key combination</return>
	</function>
	<function name="LeaveBattlefield">
		<summary>Exits the current battleground</summary>
	</function>
	<function name="KBSystem_GetServerStatus">
		<summary>Gets the knowledge base server system status message</summary>
		<return name="statusMessage" type="string">The knowledge base server status message, or nil</return>
	</function>
	<function name="ItemTextGetItem">
		<summary>Gets the name of the currently viewed ItemText item</summary>
		<return name="text" type="string">The name of the currently viewed item</return>
	</function>
	<function name="GetNumGossipAvailableQuests">
		<summary>Gets the number of available quests in the gossip window</summary>
		<return name="num" type="number">The number of available quests in the gossip window</return>
	</function>
	<function name="CloseQuest">
		<summary>Closes the open quest frame</summary>
	</function>
	<function name="KBSystem_GetMOTD">
		<summary>Gets the currently knowledgebase MOTD</summary>
		<return name="text" type="string">The message of the day for the knowledge base system</return>
	</function>
	<function name="GetGuildBankMoneyTransaction">
		<summary>Returns information from the guildbank money log.</summary>
		<param name="index" type="number">Index in the money log.</param>
		<return name="type" type="string">Type of the log event</return>
		<return name="name" type="string">Player who did the withdrawal/deposit/repair.  'nil' for Unknown entries.</return>
		<return name="year" type="number">Amount of years ago this event occurred.</return>
		<return name="month" type="number">Amount of months ago this event occurred.</return>
		<return name="day" type="number">Amount of days ago this event occurred.</return>
		<return name="hour" type="number">Amount of hours ago this event occurred.</return>
	</function>
	<function name="CheckInteractDistance">
		<summary>Returns whether or not the player is close enough to interact with a unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<param name="distIndex" type="number">The distance to check</param>
		<return name="canInteract" apitype="onenil">1 if the player can perform the given interaction with the given unit, otherwise nil</return>
	</function>
	<function name="CommentatorGetNumMaps" />
	<function name="GetAddOnInfo">
		<summary>Returns information about an addon in the client's addon list</summary>
		<paramchoice>
			<param name="index" type="number">The index of the AddOn, must be in the range of 1 to GetNumAddOns().</param>
			<param name="name" type="string">The name of the AddOn, as it appears in its folder name.</param>
		</paramchoice>
		<return name="name" type="string">The name of the addon</return>
		<return name="title" type="string">The title of the addon</return>
		<return name="notes" type="string">The value of the "Notes" field from the table of contents</return>
		<return name="enabled" apitype="onenil">1 if the addon is enabled for the current character, otherwise nil</return>
		<return name="loadable" apitype="onenil">If the addon is capable of being loaded</return>
		<return name="reason" type="string">If the addon isn't loadable, what is the reason</return>
		<return name="security" type="string">"SECURE" if the addon is secure, otherwise "INSECURE".  A "secure" addon is one that is released by Blizzard and is digitally signed</return>
	</function>
	<function name="SelectActiveQuest">
		<summary>Selects an active quest in the QuestLog frame</summary>
		<param name="index" type="number">The index of a quest in the QuestFrame</param>
	</function>
	<function name="GetNumLFGResults">
		<summary>Gets the number of results from a LFG query</summary>
		<param name="type" type="number">The type of LFGQuery, obtained from GetLFGTypes()</param>
		<param name="index" type="number">The index of a LFG entry, obtained from GetLFGTypeEntries()</param>
		<return name="numResults" type="number">The number of results available</return>
		<return name="totalCount" type="number">The total number of results</return>
	</function>
	<function name="GetInventoryItemCount">
		<summary>Gets the number of items stacked in an inventory slot</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query.  This is typically "player" but this function also works for units that are being inspected</param>
		<param name="slotid" type="number">The inventory slot id</param>
		<return name="count" type="number">The amount of items stacked in the current inventory slot</return>
	</function>
	<function name="CanEditPublicNote">
		<summary>Returns whether or not the player can edit public notes</summary>
		<return name="canEdit" apitype="onenil">1 if the player can edit public notes, otherwise nil</return>
	</function>
	<function name="GetDebugStats" />
	<function name="GetMerchantItemInfo">
		<summary>Returns information about an item available at a merchant</summary>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="price" type="number">The price of the item, in copper</return>
		<return name="quantity" type="number">The number of items per stack</return>
		<return name="numAvailable" type="number">The number of items available for purchase</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable, otherwise nil</return>
		<return name="extendedCost" apitype="onenil">1 if the item has an extended cost (alternate currency) such as arena or honor points</return>
	</function>
	<function name="UpdateWorldMapArrowFrames" />
	<function name="PlayerHasSpells">
		<summary>Returns whether the player has any spells.  Effectively always returns 1 for all characters.</summary>
		<return name="hasSpells" apitype="onenil">Returns 1 if the player has any spells, nil otherwise.</return>
	</function>
	<function name="GetArenaCurrency">
		<summary>Gets the number of available arena currency points</summary>
		<return name="points" type="number">The number of available arena currency points</return>
	</function>
	<function name="GetAuctionItemInfo">
		<summary>Returns information about an item up for auction</summary>
		<param name="type" type="string">The auction listing type to query</param>
		<param name="index" type="number">The index of the item in the listing</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="count" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality level of the item</return>
		<return name="canUse" apitype="onenil">1 if the item can be used by the player, otherwise nil</return>
		<return name="level" type="number">The level of the item</return>
		<return name="minBid" type="number">The minimum bid required, in copper</return>
		<return name="minIncrement" type="number">The minimum required incremental bid, in copper</return>
		<return name="buyoutPrice" type="number">The buyout price, in copper</return>
		<return name="bidAmount" type="number">The current highest bid, or 0 if no one has bid</return>
		<return name="highestBidder" apitype="onenil">1 if the player is currently the highest bidder, otherwise nil</return>
		<return name="owner" type="string">The owner of the auction</return>
	</function>
	<function name="IsEquippedAction">
		<summary>Returns whether or not an action slot contains an equipped item.</summary>
		<param name="slot" type="number">The action bar slot</param>
		<return name="isEquipped" apitype="onenil">1 if the slot has an equipped item, otherwise nil</return>
	</function>
	<function name="GetSpellInfo">
		<summary>Returns a wide range of information about the given spell</summary>
		<paramchoice>
			<param name="spellID" type="number">The spell's ID</param>
			<param name="spellName" type="string">The spell's name. Must be in your spell book.</param>
		</paramchoice>
		<return name="name" type="string">The spell's name</return>
		<return name="rank" type="string">The rank of the spell (e.g."Rank 5", "Racial", etc.)</return>
		<return name="icon" type="string">The file path for the spell's icon</return>
		<return name="powerCost" type="number">The amount of mana, rage, energy, or focus required to cast the spell</return>
		<return name="isFunnel" type="boolean">True for spells with health funneling effects (like Health Funnel)</return>
		<return name="powerType" type="number">The type of power used to cast the spell</return>
		<return name="castingTime" type="number">The casting time of the spell in milliseconds</return>
		<return name="minRange" type="number">The minimum range from the target required to cast the spell</return>
		<return name="maxRange" type="number">The maximum range from the target at which you can cast the spell</return>
	</function>
	<function name="SetLFGType">
		<summary>Sets a filter for the LFG system in a specific slot</summary>
		<param name="slot" type="number">The slot to select (1-3)</param>
		<param name="type" type="number">The type of LFG query to select.  Valid options can be obtained by indexing the results of GetLFGTypes()</param>
	</function>
	<function name="IsLoggedIn">
		<summary>Returns whether or not the PLAYER_LOGIN event has already fired.</summary>
		<return name="loggedIn" apitype="onenil">1 if the PLAYER_LOGIN even has already happened, otherwise nil</return>
	</function>
	<function name="GetQuestLogTimeLeft">
		<summary>Gets the amount of time left on the current timed quest</summary>
		<return name="questTimer" type="number">The amount of time left on the current timed quest</return>
	</function>
	<function name="ClickAuctionSellItemButton">
		<summary>Causes the item currently being held by the cursor to be placed in the Auction House "Create Auction" item slot</summary>
	</function>
	<function name="KBSetup_GetArticleHeaderData">
		<summary>Returns header information about a "Top Issue" article</summary>
		<param name="index" type="number">The index of the article to query</param>
		<return name="articleId" type="number">A unique articleId for the article</return>
		<return name="title" type="string">The title of the article</return>
		<return name="isHotIssue" type="boolean">true if the article is a "Hot Issue", otherwise false</return>
		<return name="isRecentlyUpdated" type="boolean">true if the article has been recently updated, otherwise false</return>
	</function>
	<function name="GetNumStationeries">
		<summary>Gets the number of available stationeries</summary>
		<return name="numStationeries" type="number">The number of available stationeries</return>
	</function>
	<function name="CloseBattlefield">
		<summary>Closes the battlefield selection UI.</summary>
	</function>
	<function name="CombatLogClearEntries">
		<summary>Clears all current combat log entries.</summary>
	</function>
	<function name="SetOptOutOfLoot">
		<summary>Sets whether to opt out of random loot</summary>
		<param name="flag" type="boolean">The setting to make</param>
	</function>
	<function name="GetShapeshiftFormCooldown">
		<summary>Returns cooldown information about a given shapeshift slot</summary>
		<param name="slot" type="number">The shapeshift slot to query for cooldown information</param>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="GetTradeSkillReagentInfo">
		<summary>Returns information about tradeskill recipe's reagent</summary>
		<param name="reagentName" type="string">The name of the reagent</param>
		<param name="reagentTexture" type="string">The path to the reagent's icon texture</param>
		<param name="reagentCount" type="number">The number of required reagents</param>
		<param name="playerReagentCount" type="number">The number of reagents the player currently possesses</param>
		<return name="index" type="number">The index of the tradeskill recipe</return>
		<return name="reagentIndex" type="number">The index of the reagent to the tradeskill recipe</return>
	</function>
	<function name="GetMasterLootCandidate">
		<summary>Returns information about a given loot candidate</summary>
		<param name="index" type="number">party or raid index. 1-4 for party, 1-40 for raid.</param>
		<return name="candidate" type="string">Name of the candidate</return>
	</function>
	<function name="GetNumBuybackItems">
		<summary>Gets the number of items available on the buyback tab</summary>
		<return name="numBuybackItems" type="number">The number of items available to be re-purchased</return>
	</function>
	<function name="JoinBattlefield">
		<summary>Queues for a specific battlefield, optionally as a group</summary>
		<param name="index" type="number">The index of the specific battlefield to join.  A value of 0 will join the first available battlefield.</param>
		<param name="asGroup" apitype="onenil">1 will queue your entire group for the chosen battlefield, otherwise only the player will be queued.</param>
	</function>
	<function name="KBQuery_GetArticleHeaderData">
		<summary>Returns information about an article returned in a knowledge base query</summary>
		<param name="index" type="number">The index of the article to query</param>
		<return name="articleId" type="number">A unique articleId for the article</return>
		<return name="title" type="string">The title of the article</return>
		<return name="isHotIssue" type="boolean">true if the article is a "Hot Issue", otherwise false</return>
		<return name="isRecentlyUpdated" type="boolean">true if the article has been recently updated, otherwise false</return>
	</function>
	<function name="MoveViewRightStart">
		<summary>Starts your camera orbiting around you to the right (counterclockwise).</summary>
	</function>
	<function name="KBQuery_GetArticleHeaderCount">
		<summary>Gets the number of articles on the current knowledge base search result page</summary>
		<return name="articleHeaderCount" type="number">The number of articles on the current knowledge base search result base page</return>
	</function>
	<function name="IsSwimming">
		<summary>This function returns whether or not the player is currently swimming.</summary>
		<return name="isSwimming" apitype="onenil">1 if the player is currently swimming, otherwise nil</return>
	</function>
	<function name="SetAbandonQuest">
		<summary>Marks the currently selected quest to be abandoned.</summary>
	</function>
	<function name="CancelAuction">
		<summary>Cancels an auction that has been placed by the player</summary>
		<param name="index" type="number">The index of the auction in the "owner" listing</param>
	</function>
	<function name="MoveAndSteerStart" />
	<function name="TakeInboxItem">
		<summary>Takes an attachment from an inbox item without confirmation</summary>
		<param name="messageIndex" type="number">The index of the message</param>
		<param name="attachIndex" type="number">The index of the attachment</param>
	</function>
	<function name="ArenaTeamRoster">
		<summary>Queries the server for roster information about an Arena team</summary>
		<param name="team" type="number">The index of the team to be queried</param>
	</function>
	<function name="GetArenaTeamRosterSelection">
		<summary>Gets the currently selected arena team member for a given team</summary>
		<param name="team" type="number">The index of an arena team</param>
		<return name="index" type="number">The currently selected arena team member</return>
	</function>
	<function name="IsIgnoredOrMuted">
		<summary>Returns a true value if the queried unit is currently ignored or muted by the player</summary>
		<param name="unit" type="string" apitype="unitid">unit to query</param>
		<return name="isIgnoredOrMuted" apitype="onenil">1 if a unit is ignored or muted, nil otherwise</return>
	</function>
	<function name="SpellStopTargeting">
		<summary>Cancels the spell currently waiting for targeting.</summary>
	</function>
	<function name="GetGuildRosterLastOnline">
		<summary>Gets the amount of time since a guild members has been seen online</summary>
		<param name="index" type="number">The index of a member in the guild roster listing</param>
		<return name="years" type="number">The number of years since the player was last online</return>
		<return name="months" type="number">The number of months since the player was last online</return>
		<return name="days" type="number">The number of days since the player was last online</return>
		<return name="hours" type="number">The number of hours since the player was last online</return>
	</function>
	<function name="GetMapLandmarkInfo">
		<summary>Returns information about a map landmark</summary>
		<param name="index" type="number">The index of a map landmark, from 1 to GetNumMapLandmarks()</param>
		<return name="name" type="string">The name of the landmark</return>
		<return name="description" type="string">The description of the landmark.  This may contain dynamic information such as in the battlegrounds.</return>
		<return name="textureIndex" type="number">The index of the texture to be used for the landmark.  These indices map to the Interface/MinimapPOIIcons.blp graphic, starting with 1 in the upper left-hand corner of the image.</return>
		<return name="x" type="number">The x coordinate for the image's location as a proportion of the map's current width</return>
		<return name="y" type="number">The y coordinate for the image's location as a proportion of the map's current height</return>
	</function>
	<function name="CheckSpiritHealerDist">
		<summary>Returns whether or not the player is in range of a spirit healer</summary>
		<return name="inRange" apitype="onenil">1 if the player is in range of a spirit healer, otherwise nil</return>
	</function>
	<function name="GetModifiedClick">
		<summary>Gets the modifiers set (for example "CTRL-SHIFT") for the given modified click</summary>
		<param name="name" type="string">The name of the modified click to query</param>
		<return name="modifiers" type="string">The modifiers set for the given modified click (nil if the modified click could not be found)</return>
	</function>
	<function name="GetUnitMaxHealthModifier">
		<summary>Gets a modifier for calculating health gain from stamina</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="modifier" type="number">The modifier</return>
	</function>
	<function name="AcceptBattlefieldPort">
		<summary>Accepts the offered teleport to a battleground, or leaves the queue for a given battleground.</summary>
		<param name="index" type="number">The index of a battleground the player is currently queued for</param>
		<param name="accept" apitype="onenil">1 to accept the offered port, nil to leave the queue for the given battleground</param>
	</function>
	<function name="JoinChannelByName">
		<summary>Joins the given chat channel.  Deprecated, see JoinPermanentChannel.</summary>
		<param name="name" type="string">Channel name to join</param>
		<param name="password" type="string">Optional password required to join</param>
		<param name="id" type="number">ChatFrame id to display the channel in</param>
		<return name="zoneChannel" type="number">The index of the zone channel, or 0</return>
		<return name="channelName" type="string">The display name of the channel, if the channel was a zone channel</return>
	</function>
	<function name="KBArticle_BeginLoading">
		<summary>Requests a specific knowledge base article from the server</summary>
		<param name="articleId" type="number">The unique articleId to request</param>
		<param name="searchType" type="number">The search type of the request</param>
	</function>
	<function name="mod">
		<summary>An alias for math.fmod</summary>
	</function>
	<function name="JoinPermanentChannel">
		<summary>Joins a channel, saving any relevant settings in chat-cache.txt</summary>
		<param name="name" type="string">The name of the channel to join</param>
		<param name="password" type="string" optional="true">The password to use when joining</param>
		<param name="chatFrameIndex" type="number" optional="true">The index of a chat frame.</param>
		<param name="enableVoice" apitype="onenil" optional="true">1 to enable voice in the channel, otherwise nil</param>
		<return name="zoneChannel" type="number">The index of the zone channel, or 0</return>
		<return name="channelName" type="string">The display name of the channel, if the channel was a zone channel</return>
	</function>
	<function name="CanEditGuildInfo">
		<summary>Returns whether or not the player can edit the guild information</summary>
		<return name="canEdit" apitype="onenil">1 if the player can edit the guild information, otherwise nil</return>
	</function>
	<function name="GetLootSlotLink">
		<summary>Returns an item link for a given loot window slot</summary>
		<param name="slot" type="number">A slot index in the loot window</param>
		<return name="link" type="string">An item link for the given item</return>
	</function>
	<function name="ForceLogout">
		<summary>Forces the client to logout</summary>
	</function>
	<function name="IsQuestCompletable">
		<summary>Returns whether or not the currently viewed quest is completable</summary>
		<return name="isCompletable" apitype="onenil">1 if the currently viewed quest is completable, otherwise nil</return>
	</function>
	<function name="GetDefaultDungeonDifficulty">
		<summary>Gets the default dungeon difficulty level for the player</summary>
		<return name="difficulty" type="number">The dungeon difficulty</return>
	</function>
	<function name="ItemTextHasNextPage">
		<summary>Determines if the currently open book has another page following the current one.</summary>
		<return name="next" apitype="onenil">1 if the currently open book has a page following the current one, nil otherwise.</return>
	</function>
	<function name="DeclineGroup">
		<summary>Declines a group invitation</summary>
	</function>
	<function name="ChannelVoiceOff">
		<summary>Disables voice chat in the given channel</summary>
		<param />
	</function>
	<function name="ItemTextGetText">
		<summary>Gets the test associated with the open item.</summary>
		<return name="text" type="string">The text associated with the open item</return>
	</function>
	<function name="GetCombatRatingBonus">
		<summary>Gets the percentage bonus for a given combat rating.</summary>
		<param name="ratingIndex" type="number">The index of the rating to be queried</param>
		<return name="ratingBonus" type="number">The percentage increase the rating confers</return>
	</function>
	<function name="IsDressableItem">
		<summary>Determines whether the given item can be put on in the dressing room</summary>
		<paramchoice>
			<param name="itemID" type="number">The item's ID</param>
			<param name="&quot;itemName&quot;" type="string">The item's name</param>
			<param name="&quot;itemLink&quot;" type="string">The item's link</param>
		</paramchoice>
		<return name="isDressable" apitype="onenil">1 if you can try the item on, otherwise nil</return>
	</function>
	<function name="ClearCursor">
		<summary>Removes whatever is currently attached to the cursor</summary>
	</function>
	<function name="ClosePetition">
		<summary>Close the petition window</summary>
	</function>
	<function name="CloseLoot">
		<summary>Closes the loot window</summary>
	</function>
	<function name="GetActiveVoiceChannel">
		<summary>Gets the currently active voice channel</summary>
		<return name="id" type="number">The id of the currently active voice channel</return>
	</function>
	<function name="GetTradeSkillInvSlotFilter">
		<summary>Returns whether or not a given tradeskill inventory slot filter is enabled</summary>
		<param name="index" type="number">The index of an inventory slot tradeskill filter, or 0 for the "All Slots" filter</param>
		<return name="enabled" apitype="onenil">1 if the filter is enabled, otherwise nil</return>
	</function>
	<function name="GetAuctionInvTypes">
		<summary>Returns a list of the inventory subtypes for a given auction house item subclass .</summary>
		<param name="classIndex" type="number">The class index to query.  The only section of the auction house that currently has a third level of drill-down when selecting is "Armor" which is classIndex 2</param>
		<param name="subClassIndex" type="number">The subClass to query.  This corresponds to the indices in the auction house listing, as subclasses for "Armor".  The special subclasses "Shields", "Librams", "Idols" and "Totems" do not have any sub-inventory types.</param>
		<return name="token" type="string">An inventory type token such as INVTYPE_FINGER</return>
		<return name="display" apitype="onenil">1 if the inventory type should be displayed in the auction house listing for this subcategory.  This is used in the auction house UI to hide inventory types that shouldn't appear under the given subclass (e.g. INVTYPE_TRINKET only shows up under the "Miscellaneous" subclass).</return>
		<return name="...">A repeating list of token, display pairs.</return>
	</function>
	<function name="UnSilenceMember" />
	<function name="IsFactionInactive">
		<summary>Returns whether or not a faction is flagged as "inactive"</summary>
		<param name="index" type="number">The index of a faction to query</param>
		<return name="isInactive" apitype="onenil">1 if the faction is currently flagged as "inactive" otherwise nil</return>
	</function>
	<function name="ActionHasRange">
		<summary>Returns whether or not an action has a range restriction</summary>
		<param name="slot" type="number">The action bar slot</param>
		<return name="hasRange" apitype="onenil">1 if the action has a range restriction, otherwise nil</return>
	</function>
	<function name="GetSelectedSkill">
		<summary>Gets the currently selected skill index, as listed in the Skills window</summary>
		<return name="skillIndex" type="number">The currently selected skill index, as listed in the Skills window.  The skill lines are numbered including the headers.</return>
	</function>
	<function name="SetGuildBankTabWithdraw">
		<summary>Sets the number of withdrawals allowed for the currently selected guild rank, on the given guild bank tab</summary>
		<param name="tab" type="number">The index of a guild tab</param>
		<param name="amount" type="number">The number of withdrawals allowed for the current guild rank, on the given tab</param>
	</function>
	<function name="IsVoiceChatAllowedByServer">
		<summary>Returns 1 if voice chat is allowed on the server, otherwise nil.</summary>
	</function>
	<function name="IsAltKeyDown">
		<summary>Returns whether or not an Alt key on the keyboard is held down.</summary>
		<return name="isDown" apitype="onenil">1 if an Alt key on the keyboard is currently held down</return>
	</function>
	<function name="IsUsableItem">
		<summary>Determine the usability of an item.</summary>
		<paramchoice>
			<param name="itemID" type="number">An item's ID</param>
			<param name="itemName" type="string">An item's name</param>
			<param name="itemLink" type="string">An item's link</param>
		</paramchoice>
		<return name="isUsable" apitype="onenil">1 if the item is currently usable, otherwise nil</return>
		<return name="unknown">Unknown purpose.  May be used to indicate why an item is not usable, but cannot determine.</return>
	</function>
	<function name="GetMapContinents">
		<summary>Returns a list of the map continents</summary>
		<return name="..." type="string">The names of all valid continent names, as a list of strings</return>
	</function>
	<function name="GetAbandonQuestName">
		<summary>Gets the name of the quest being abandoned</summary>
		<return name="name" type="string">The name of the quest being abandoned</return>
	</function>
	<function name="GetBattlefieldPortExpiration">
		<summary>Gets the time left on a battleground or arena invitation</summary>
		<param name="index" type="number">The index of the battleground or arena as listed in the tooltip for the minimap battle status icon.</param>
		<return name="expiration" type="number">Time until your invitation expires (in milliseconds)</return>
	</function>
	<function name="GetMacroBody">
		<summary>Gets the body of a given macro index</summary>
		<param name="index" type="number">The macro index to query.  The "global" macro ids are 1-18, while the player specific macros are stored in 19-36.</param>
		<return name="body" type="string">The body of the macro, as a text string</return>
	</function>
	<function name="ChannelToggleAnnouncements">
		<summary>Toggles channel announcements for a given channel.</summary>
		<param name="channel" type="string">The channel to enable or disable channel announcements for</param>
	</function>
	<function name="IsTrainerServiceSkillStep">
		<summary>Returns whether or not the given trainer service is a skill step, rather than a recipe.</summary>
		<param name="index" type="number">The index of a skill in the trainer window.  This index is affected by filtering, so the first shown skill is index 1.</param>
		<return name="isSkillStep" apitype="onenil">1 if the service offered by the trainer is one that will affect the player's skill (such as Journeyman Leatherworking, or Apprentice First Aid.</return>
	</function>
	<function name="UnitIsPlayer">
		<summary>Returns whether or not a given unit is the player's unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="isPlayer" apitype="onenil">1 if the unit is the player, otherwise nil</return>
	</function>
	<function name="IsTradeskillTrainer">
		<summary>Returns whether or not the currently open training window is a tradeskill trainer</summary>
		<return name="isTradeskill" apitype="onenil">1 if the currently open training window is a tradeskill trainer</return>
	</function>
	<function name="GetGuildEventInfo">
		<summary>Returns information on the guild log.</summary>
		<param name="index" type="number">Guild event log index between 1 and GetNumGuildEvens()</param>
		<return name="type" type="string">Event Type</return>
		<return name="player1" type="string">First actor in the log</return>
		<return name="player2" type="string">Second actor in the log</return>
		<return name="rank" type="string">Rank if applicable to the 'type' of the event.</return>
		<return name="year" type="number">Amount of years ago this event occurred.</return>
		<return name="month" type="number">Amount of months ago this event occurred.</return>
		<return name="day" type="number">Amount of days ago this event occurred.</return>
		<return name="hour" type="number">Amount of hours ago this event occurred.</return>
	</function>
	<function name="GetGuildInfoText">
		<summary>Gets the information text for the player's guild.</summary>
		<return name="guildInfoText" type="string">A string containing the guild information text (including newline characters)</return>
	</function>
	<function name="SetChatWindowDocked">
		<summary>Sets the value of the docked setting for the given chat window in chat-cache.txt</summary>
		<param name="index" type="number">The index of the chat window to modify</param>
		<param name="docked" apitype="onenil">1 if the chat frame is docked with the main frame, otherwise nil</param>
	</function>
	<function name="GetActiveLevel" />
	<function name="IsHelpfulSpell">
		<summary>Returns whether or not a given spell is helpful</summary>
		<param name="spell" type="string">The name of the spell to query</param>
		<return name="isHelpful" apitype="onenil">1 if the spell is helpful, otherwise nil</return>
	</function>
	<function name="CanEditGuildTabInfo">
		<summary>Returns whether or not the player can edit a given guild tab info</summary>
		<param name="tab" type="number">The index of the guild tab</param>
		<return name="canEdit" apitype="onenil">1 if the player can edit the given guild tab, otherwise nil</return>
	</function>
	<function name="GetNumTrainerServices">
		<summary>Gets the number of available trainer services</summary>
		<return name="numServices" type="number">The number of available trainer service</return>
	</function>
	<function name="GetGMStatus" />
	<function name="IsStackableAction">
		<summary>Returns whether or not a given action slot contains a stackable action.</summary>
		<param name="slot" type="number">The number of an action slot</param>
		<return name="isStackable" apitype="onenil">1 if the action is a stackable action, otherwise nil</return>
	</function>
	<function name="GetNumBattlefieldPositions">
		<summary>Gets the number of team members currently on the battlefield</summary>
		<return name="numTeamMembers" type="number">Number of Team Members currently on the battlefield</return>
	</function>
	<function name="GetTabardInfo" />
	<function name="GrantLevel" />
	<function name="IsSilenced">
		<summary>Returns whether or not the given unit is silenced for Voice Chat on a channel</summary>
		<param name="name" type="string">The name of the player to query</param>
		<param name="channel" type="string">The channel to query</param>
		<return name="isSilenced" apitype="onenil">1 if the player is silenced on the given channel, or nil</return>
	</function>
	<function name="HasPetSpells">
		<summary>Returns whether or not the player's current active pet has spells or not.</summary>
		<return name="hasPetSpells" apitype="onenil">1 if the player has an active pet with spells/abilities currently, nil otherwise</return>
		<return name="petType" type="string">Type of pet used.</return>
	</function>
	<function name="GetActionBarPage">
		<summary>Gets the current action bar page</summary>
		<return name="page" type="number">The current action bar page</return>
	</function>
	<function name="SortAuctionClearSort">
		<summary>Clears any current sorting rules for the given auction house listing</summary>
		<param name="type" type="string">The auction house listing to clear</param>
	</function>
	<function name="GetRealNumRaidMembers">
		<summary>Gets the number of members in the player's "real" non-battleground raid group</summary>
		<return name="numMembers" type="number">The number of members in the player's actual raid group.  This function is necessary in order to distinguish between the player's actual raid group, and any raid group they may belong to in a battleground/arena.</return>
	</function>
	<function name="GetNumQuestLogRewards">
		<summary>Gets the count of the rewards for a particular quest</summary>
		<return name="numRewards" type="number">The number of rewards for this quest</return>
	</function>
	<function name="SendWho">
		<summary>Sends a who request to the server</summary>
		<param name="filter" type="string">A filter for the who results.  A filter can be any combination of the possible values, but can only have one filter of each type, per request.  A blank filter (the empty string) can be submitted, but a filter argument must be supplied.</param>
	</function>
	<function name="ChannelSilenceVoice">
		<summary>Silences the given character for voice chat on the channel.  Can only be done as a raid/party/bg leader or assistant</summary>
		<param name="channel" type="string">Channel to silence the character on</param>
		<param name="name" type="string">Name of the character to silence</param>
	</function>
	<function name="GetGuildBankWithdrawLimit">
		<summary>Gets the guildbank gold withdraw limit for the current rank being viewed in the guild control pane.</summary>
		<return name="goldWithdrawLimit" type="number">Gold withdrawal limit. -1 being unlimited.</return>
	</function>
	<function name="EditMacro">
		<summary>Edit Macro command/button</summary>
		<param name="index" type="number">Macro index number</param>
		<param name="name" type="string">Name of the macro to be shown in the UI. Current limit is 16 characters</param>
		<param name="icon" type="number">An iconTextureID from 1 to GetNumMacroIcons()</param>
		<param name="body" type="string">The macro command to be executed. Current limit used is 255 characters</param>
		<param name="local" type="number">Indicates if the macro is stored locally or on the server.  This return value is currently unused</param>
		<param name="perCharacter" type="number">0 for a per account macro, 1 for a per character one</param>
		<return name="macroID" type="number">The index of the macro</return>
	</function>
	<function name="RequestBattlefieldPositions">
		<summary>Requests new battlefield position information from the server</summary>
	</function>
	<function name="CommentatorUpdatePlayerInfo" />
	<function name="ConfirmLootSlot">
		<summary>Confirms the looting of a bind-on-pickup item</summary>
		<param name="slot" type="number">The index of the loot slot</param>
	</function>
	<function name="IsResting">
		<summary>Gets the player's resting status</summary>
		<return name="resting" type="boolean">Whether the player is resting</return>
	</function>
	<function name="HasWandEquipped">
		<summary>Returns whether or not the player has a wand equipped</summary>
		<return name="isEquipped" apitype="onenil">1 if a wand is equipped, otherwise nil</return>
	</function>
	<function name="GetStablePetInfo">
		<summary>Returns information about a currently stabled pet</summary>
		<param name="index" type="number">The index of the stable pet</param>
		<return name="icon" type="string">The path to the pet's icon texture</return>
		<return name="name" type="string">The name of the pet</return>
		<return name="level" type="number">The level of the pet</return>
		<return name="family" type="string">The family of the pet in the current locale</return>
		<return name="loyalty" type="string">The loyalty level of the pet, as a localized string</return>
	</function>
	<function name="VoiceChat_StopRecordingLoopbackSound">
		<summary>Stops the recording of the loopback sounds</summary>
	</function>
	<function name="GetPetActionCooldown">
		<summary>Returns cooldown information about a given pet action slot</summary>
		<param name="slot" type="number">The pet action slot to query for cooldown information</param>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="PurchaseSlot">
		<summary>Purchases a bank slot without confirmation.</summary>
	</function>
	<function name="IsRaidOfficer">
		<summary>Returns whether or not the player is a Raid Officer or not</summary>
		<return name="isRaidOfficer" type="boolean">Whether or not the player is a Raid Officer</return>
	</function>
	<function name="IsRaidLeader">
		<summary>Returns whether or not the player is the leader of their current raid</summary>
		<return name="isLeader" apitype="onenil">1 if the player is the leader of their current raid, otherwise nil</return>
	</function>
	<function name="CheckBinderDist">
		<summary>Returns whether or not the player is in range of an NPC that can bind their hearthstone</summary>
		<return name="inRange" apitype="onenil">1 if the player is in range of a hearthstone binder, otherwise nil</return>
	</function>
	<function name="GetQuestLogTitle">
		<summary>Returns information about a quest in your quest log</summary>
		<param name="questID" type="number">The index of the quest you wish to get information about</param>
		<return name="questLogTitleText" type="string">The title of the quest or nil if the index is out of range</return>
		<return name="level" type="number">The level of the quest</return>
		<return name="questTag" type="string">The type of quest</return>
		<return name="suggestedGroup" type="number">If the questTag is Group, the positive number of players suggested for the quest, or nil</return>
		<return name="isHeader" apitype="onenil">Whether the entry is a header</return>
		<return name="isCollapsed" apitype="onenil">Whether the entry is a collapsed header</return>
		<return name="isComplete" type="number">Whether the quest is complete</return>
		<return name="isDaily" apitype="onenil">Whether the quest is a daily</return>
	</function>
	<function name="ConfirmBindOnUse">
		<summary>Confirms the "Bind on Use" dialog when using a new item</summary>
	</function>
	<function name="CalendarGetDate" />
	<function name="GetQuestItemLink">
		<summary>Returns an item link for a quest item (reward or requirement)</summary>
		<param name="type" type="string">The type of quest item</param>
		<return name="link" type="string">The item link for the quest item</return>
	</function>
	<function name="AcceptTrade">
		<summary>Accepts a proposed trade</summary>
	</function>
	<function name="IsPossessBarVisible">
		<summary>Returns whether or not the PossessBar should be visible</summary>
		<return name="isVisible" apitype="onenil">if the possessionbar should be visible, otherwise nil.</return>
	</function>
	<function name="GuildDisband">
		<summary>Disbands your guild without confirmation.  Can only be done by the guildleader.</summary>
	</function>
	<function name="CancelShapeshiftForm">
		<summary>Cancels the current shapeshift form</summary>
	</function>
	<function name="AddIgnore">
		<summary>Adds a player or unit to the ignore list</summary>
		<paramchoice>
			<param name="name" type="string">The full name of a player to add to the ignore list</param>
			<param name="unit" type="string" apitype="unitid">The unitid of the player to add to the ignore list</param>
		</paramchoice>
	</function>
	<function name="IsPassiveSpell">
		<summary>Returns whether or not a given spell is passive (i.e. cannot be cast)</summary>
		<param name="id" type="number">The index of the spell being queried</param>
		<param name="bookType" type="string">A string indicating which spellbook type should be queried.  This is either the value BOOKTYPE_SPELL, or BOOKTYPE_PET which correspond to the strings "spell" and "pet".</param>
		<return name="isPassive" apitype="onenil">1 if the spell is passive, otherwise nil</return>
	</function>
	<function name="IsOutdoors">
		<summary>This function returns whether or not the player is currently outdoors.</summary>
		<return name="isOutdoors" apitype="onenil">1 if the player is currently outdoors, otherwise nil</return>
	</function>
	<function name="IsOutOfBounds">
		<summary>Returns whether or not the player is currently outside the bounds of the world</summary>
		<return name="outOfBounds" apitype="onenil">1 if the player is currently outside the bounds of the world, otherwise nil</return>
	</function>
	<function name="AutoStoreGuildBankItem">
		<summary>Withdraws an item from the guild bank, automatically storing it in your inventory</summary>
		<param name="tab" type="number">The index of a guild bank tab</param>
		<param name="slot" type="number">A slot in the guild bank tab</param>
	</function>
	<function name="IsAddOnLoaded">
		<summary>Query if an addon is loaded (running)</summary>
		<param name="index">The addon index to query.  Between 1 and GetNumAddOns().  Blizzard addons cannot be queried by index.  Addon index is OS specific, in some versions of Windows it is alphabetically sorted on folder name.</param>
		<param name="name" type="string">Name of the addon to query.  Not case-sensitive.  Uses the addon folder name, not the title from the TOC.</param>
		<return name="loaded" apitype="onenil">1 is the addon is loaded, nil otherwise</return>
	</function>
	<function name="BuybackItem">
		<summary>Purchases an item from the buyback tab</summary>
		<param name="slot" type="number">The slot on the buyback tab</param>
	</function>
	<function name="GetCVarBool">
		<summary>Gets the value of the CVar as 1 or nil instead of requiring you to compare the cvar value with "0" or "1"</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="value" apitype="onenil">1 if the given CVar is set to "1", otherwise nil</return>
	</function>
	<function name="ToggleSpellAutocast">
		<summary>Toggles a spellbook spell as auto-cast</summary>
		<param name="spellId" type="number">The index of a spell in the spellbook</param>
		<param name="bookType" type="string">The type of spellbook</param>
	</function>
	<function name="IsMouselooking">
		<summary>Returns whether or not mouselook mode is active</summary>
		<return name="isLooking" type="boolean">Returns true if mouselook mode is active, false otherwise</return>
	</function>
	<function name="IsMounted">
		<summary>Returns whether or not your character is mounted.</summary>
		<return name="mounted" apitype="onenil">1 if the player is mounted, otherwise nil</return>
	</function>
	<function name="IsModifiedClick">
		<summary>Determines if the modifiers specified in the click-type had been held down while the button click occurred.</summary>
		<param name="type" type="string">The name of the click-type.</param>
		<return name="modifiedClick" apitype="onenil">1 if the click was modified, nil otherwise</return>
	</function>
	<function name="GetGuildBankItemLink">
		<summary>Gets the item link of the item at a specific position in the guild bank.</summary>
		<param name="tab" type="number">The tab index to check</param>
		<param name="slot" type="number">The slot within the tab to check</param>
		<return name="item" type="string">The item link of the item at the specified position.</return>
	</function>
	<function name="GetPVPSessionStats">
		<summary>Gets the pvp stats for the current session</summary>
		<return name="honorKills" type="number">The estimated number of honor kills for the given session</return>
		<return name="honorPoints" type="number">The estimated number of honor points for the given session</return>
	</function>
	<function name="GetInboxHeaderInfo">
		<summary>Returns information an inbox item</summary>
		<param name="index" type="number">The index of the mail message to be queried</param>
		<return name="packageIcon" type="string">The icon of the item or package being sent.  If the mail contains just gold or a message this will be nil.</return>
		<return name="stationeryIcon" type="string">The icon for the message stationery</return>
		<return name="sender" type="string">The name of the sender</return>
		<return name="subject" type="string">The subject of the message</return>
		<return name="money" type="number">The amount of money in the message, in copper</return>
		<return name="CODAmount" type="number">The cost of the COD message, in copper</return>
		<return name="daysLeft" type="number">The amount of time left on the message, in days</return>
		<return name="itemCount" type="number">The number of items attached to the message</return>
		<return name="wasRead" apitype="onenil">1 if the message has been read, otherwise nil</return>
		<return name="wasReturned" apitype="onenil">1 if the message has been returned to the player, otherwise nil</return>
		<return name="textCreated" apitype="onenil">1 if a copy of the message text has been made, otherwise nil</return>
		<return name="canReply" apitype="onenil">1 if the player can reply to the message, otherwise nil</return>
		<return name="isGM" apitype="onenil">1 if the message is from a game master, otherwise nil</return>
		<return name="itemQuantity" type="number">The number of items in the stack.  This is only returned when the mail only has a single item attachment</return>
	</function>
	<function name="CanSummonFriend" />
	<function name="CommentatorEnterInstance" />
	<function name="AcceptGroup">
		<summary>Accepts an invitation to a party</summary>
	</function>
	<function name="GetWorldStateUIInfo">
		<summary>Returns information about a WorldState UI element</summary>
		<param name="index" type="number">An index between 1 and GetNumStateWorldUI()</param>
		<return name="uiType" type="number">A value of 1 indicates a conditional UI element, whereas any other value will always be displayed</return>
		<return name="state" apitype="onenil">1 if the objective is displayed, otherwise nil</return>
		<return name="text" type="string">The text of the objective</return>
		<return name="icon" type="string">The path to the objective's icon texture</return>
		<return name="dynamicIcon" type="string">The path to the objective's dynamic icon texture</return>
		<return name="extendedUI" type="string">"CAPTUREPOINT" to display a progress bar for a capture point, otherwise the empty string</return>
		<return name="extendedUIState1" type="number">The index of the capture bar index</return>
		<return name="extendedUIState2" type="number">The current progressbar position, 0 is the right edge, 100 is the left edge.</return>
		<return name="extendedUIState3" type="number">The width of the neutral zone as a percentage (0 - 100).  If the neutral zone is 50, then 25% of the bar is Horde, 25% of the bar is Alliance and there is 50% of the bar in the middle as neutral.</return>
	</function>
	<function name="ChannelUnmute">
		<summary>Unmutes the specified player on that channel</summary>
		<param name="channel" type="string">The channel to unmute the player in.</param>
		<param name="player" type="string">The player to unmute,</param>
	</function>
	<function name="InitiateTrade">
		<summary>Initiates a trade with a given unit</summary>
		<param name="unit" type="string" apitype="unitid">The unit to initiate a trade with</param>
	</function>
	<function name="UnitClassBase">
		<summary>Queries a unit's class</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="class" type="string">The localized name of the queried unit's class</return>
		<return name="englishClass" type="string">The english name of the queried unit's class, as an uppercase string</return>
	</function>
	<function name="IsIndoors">
		<summary>Returns whether or not the player is currently indoors</summary>
		<return name="inside" apitype="onenil">1 if the player is currently indoors, otherwise nil</return>
	</function>
	<function name="IsInInstance">
		<summary>Returns whether or not the player is currently in an instance, and if so what type</summary>
		<return name="isInstance" apitype="onenil">1 if the player is in an instance, otherwise nil</return>
		<return name="instType" type="string">Instance type the player is in: "none", "pvp", "arena", "party", "raid", otherwise nil</return>
		<remarks>
			"none" when outside an instance
			"pvp" when in a battleground
			"arena" when in an arena
			"party" when in a 5-man instance
			"raid" when in a raid instance
		</remarks>
	</function>
	<function name="UpdateMapHighlight">
		<summary>Returns information about the texture used to highlight subregions of the world map</summary>
		<param name="x" type="number">The X position of the cursor, as a proportion of WorldMapDetailFrame's width</param>
		<param name="y" type="number">The Y position of the cursor, as a proportion of WorldMapDetailFrame's height</param>
		<return name="name" type="string">The name of the zone being highlighted</return>
		<return name="fileName" type="string">The filename to use for the highlight texture</return>
		<return name="texCoordX" type="number">The right texCoord value for the highlight texture</return>
		<return name="texCoordY" type="number">The bottom texCoord value for the highlight texture</return>
		<return name="textureX" type="number">The width of the texture as a proportion of WorldMapDetailFrame's width</return>
		<return name="textureY" type="number">The height of the texture as a proportion of WorldMapDetailFrame's height</return>
		<return name="scrollChildX" type="number">The X coordinate for the TOPLEFT anchor point of the texture, as a proportion of WorldMapDetailFrame's width</return>
		<return name="scrollChildY" type="number">The X coordinate for the TOPLEFT anchor point of the texture, as a proportion of WorldMapDetailFrame's width</return>
	</function>
	<function name="HasSoulstone">
		<summary>Returns whether or not the player has a soulstone resurrection available</summary>
		<return name="text" type="string">The text to be displayed on the dialog box if the player has a soulstone resurrection available, otherwise nil</return>
	</function>
	<function name="GetNumGuildEvents">
		<summary>Gets the number of available guild events for the guild log</summary>
		<return name="numEvents" type="number">Gets the number of guild log events available.  These entries are only made available via event callback from the function QueryGuildEventLog().</return>
	</function>
	<function name="GetLootThreshold">
		<summary>Gets the current loot threshold setting.</summary>
		<return name="threshold" type="number">Loot threshold</return>
	</function>
	<function name="CommentatorGetPlayerInfo" />
	<function name="IsConsumableItem">
		<summary>Whether or not a given item is consumable.</summary>
		<paramchoice>
			<param name="itemID" type="number">An item's ID</param>
			<param name="itemName" type="string">An item's name</param>
			<param name="itemLink" type="string">An item's link</param>
		</paramchoice>
		<return name="consumable" apitype="onenil">1 if the item is a consumable, nil for invalid or non-consumable items.</return>
	</function>
	<function name="GetContainerNumSlots">
		<summary>Gets the number of slots for a given container</summary>
		<param name="index" type="number">The index of a container</param>
		<return name="numSlots" type="number">The number of slots for the given container</return>
	</function>
	<function name="CloseTrainer">
		<summary>Closes the trainer window</summary>
	</function>
	<function name="GetMaxDailyQuests">
		<summary>Gets the maximum number of daily quests that can be completed each day.</summary>
		<return name="max" type="number">The maximum number of daily quests that can be completed each day</return>
	</function>
	<function name="ResetChatWindows">
		<summary>Resets the chat windows to hardcoded defaults</summary>
	</function>
	<function name="GetChannelName">
		<summary>Returns information about a given chat channel.</summary>
		<paramchoice>
			<param name="channelIndex" type="number">A channel ID</param>
			<param name="channelName" type="string">A channel name</param>
		</paramchoice>
		<return name="channel" type="number">The ID of the channel.</return>
		<return name="channelName" type="string">The name of the channel.</return>
		<return name="instanceID" type="number">The channel's instance ID, or 0 if there are not separate instances of the channel.</return>
	</function>
	<function name="SetDungeonDifficulty">
		<summary>Sets the dungeon difficulty mode</summary>
		<param name="difficulty" type="number">The level of difficulty</param>
	</function>
	<function name="IsCurrentQuestFailed">
		<summary>Queries the failed state for the currently selected quest.</summary>
		<return name="isFailed" apitype="onenil">1 if the current quest is failed, otherwise nil</return>
	</function>
	<function name="VoiceEnumerateOutputDevices">
		<summary>Gets the name of a given voice output device</summary>
		<param name="index" type="number">The index of an output device</param>
		<return name="device" type="string">The name of the output device</return>
	</function>
	<function name="GetInventoryItemBroken">
		<summary>Returns whether or not the given inventory item is broken</summary>
		<param name="unit" type="string" apitype="unitid">The unitid to query</param>
		<param name="inventoryID" type="number">The inventoryID to query</param>
		<return name="isBroken" apitype="onenil">1 if the item is broken, otherwise nil</return>
	</function>
	<function name="random">
		<summary>An alias for math.random</summary>
	</function>
	<function name="GetMacroItemIconInfo">
		<summary>Gets the texture for macro item icons</summary>
		<param name="index" type="number">The index of the icon to query</param>
		<return name="texture" type="string">The path to the item's icon texture</return>
	</function>
	<function name="GetLootRollTimeLeft">
		<summary>Gets the amount of time left on the given loot roll, in milliseconds.</summary>
		<param name="id" type="number">The index of the loot roll.  Each new item that is rolled on increments this number by one so two items won't have the same roll index.</param>
		<return name="timeLeft" type="number">The amount of time left on given the loot roll, in milliseconds</return>
	</function>
	<function name="QueryGuildEventLog">
		<summary>Queries the server for the guild event log.</summary>
	</function>
	<function name="GetTradePlayerItemInfo">
		<summary>Returns information about an item that the player has placed in the trade window</summary>
		<param name="index" type="number">The index in the trade window</param>
		<return name="name" type="string">The name of the item</return>
		<return name="texture" type="string">The path to the item's icon texture</return>
		<return name="numItems" type="number">The number of items in the stack</return>
		<return name="quality" type="number">The quality level of the item</return>
		<return name="isUsable" apitype="onenil">1 if the item is usable by the player, otherwise nil</return>
		<return name="enchantment" type="string">The name of the enchantment being applied to the item, if applicable</return>
	</function>
	<function name="FlagTutorial">
		<summary>Flags a tutorial step as already viewed, so it doesn't appears again.</summary>
		<param name="tutorial" type="string">The identifier for the tutorial step</param>
	</function>
	<function name="CloseMail">
		<summary>Closes the mail window</summary>
	</function>
	<function name="GetUnitManaRegenRateFromSpirit">
		<summary>Gets the mana regeneration rate per second the unit has from the spirit stat</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="regen" type="number">The amount of mana regeneration the unit gains each second from spirit, while not casting.</return>
	</function>
	<function name="GetAddOnDependencies">
		<summary>Get all dependencies of the queried addon. Returns nil if no dependencies are listed.</summary>
		<paramchoice>
			<param name="index" type="number">The index of the AddOn, must be in the range of 1 to GetNumAddOns().</param>
			<param name="name" type="string">The name of the AddOn as it appears in its folder name.</param>
		</paramchoice>
		<return name="...">A list of all AddOns the queried AddOn depends on.</return>
	</function>
	<function name="CancelDuel">
		<summary>Cancels a proposed duel, or declines a duel that has been offered</summary>
	</function>
	<function name="EnableSpellAutocast">
		<summary>Enabled auto-cast for a given pet spell</summary>
		<param name="spell" type="string">The name of a pet spell</param>
	</function>
	<function name="GetBinding">
		<summary>Returns information about a key binding.</summary>
		<param name="index" type="number">The index in the key bindings window (headings are included)</param>
		<return name="commandName" type="string">The name of the command, used in the key binding functions</return>
		<return name="binding1" type="string">The primary key binding for the command, or nil</return>
		<return name="binding2" type="string">The secondary key binding for the command, or nil</return>
	</function>
	<function name="GetDefaultLanguage">
		<summary>Gets the default language that the character speaks</summary>
		<return name="language" type="string">The default language the player's character speaks</return>
	</function>
	<function name="KBSetup_GetSubCategoryData">
		<summary>Returns information a knowledge base subcategory</summary>
		<param name="index" type="number">The index of the category</param>
		<param name="subindex" type="number">The index of the subcategory</param>
		<return name="categoryId" type="number">The unique categoryId for the given subcategory</return>
		<return name="name" type="string">The name of the subcategory</return>
	</function>
	<function name="GetGuildInfo">
		<summary>Retrieves information about a players guild.</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="guildName" type="string">The name of the guild.</return>
		<return name="guildRankName" type="string">The players guild rank.</return>
		<return name="guildRankIndex" type="number">The index of the players guild rank.</return>
	</function>
	<function name="GetGuildBankTabCost">
		<summary>Gets the cost of the next available guild bank tab</summary>
		<return name="tabCost" type="number">The cost of the next guild bank tab, in copper</return>
	</function>
	<function name="GetPetFoodTypes">
		<summary>Returns a list of strings enumerating the food types your current pet can eat.</summary>
		<return name="..." type="string">A list of available food types for the current pet or nil if no food types available</return>
	</function>
	<function name="CancelItemTempEnchantment">
		<summary>Cancels a temporary item enchant</summary>
		<param name="slot" type="number">1 to cancel the mainhand item enchant, 2 to cancel the offhand item enchant</param>
	</function>
	<function name="GetTalentTabInfo">
		<summary>Returns information about the specified talent tree from either the player or the unit that is being inspected. </summary>
		<param name="index" type="number">The index of the talent tab.</param>
		<param name="isInspect" apitype="onenil">1 if inspecting someone, nil otherwise</param>
		<return name="name" type="string">The name of the talent tree.</return>
		<return name="texture" type="string">The texture of the talent tree.</return>
		<return name="points" type="number">The number of talent points spent in the talent tree.</return>
		<return name="fileName" type="string">The file name to the background texture for the talent tree.</return>
	</function>
	<function name="IsActiveBattlefieldArena">
		<summary>Returns whether or not the current battlefield is an arena match</summary>
		<return name="isArena" apitype="onenil">1 if the current battlefield is an Arena match</return>
		<return name="isRegistered" apitype="onenil">1 if the current arena match is a ranked match</return>
	</function>
	<function name="AbandonQuest">
		<summary>Confirms abandoning a quest in your log</summary>
	</function>
	<function name="GetBonusBarOffset">
		<summary>Gets the bar offset for the bonus bar.</summary>
		<return name="offset" type="number">The offset amount that should be used for the bonus action bar.</return>
	</function>
	<function name="InitWorldMapPing">
		<summary>Resets the position of the ping frame (WorldMapPing) on the WorldMap.  There is no real reason to use this.</summary>
	</function>
	<function name="EquipItemByName">
		<summary>Equips an item by name, item link or item id</summary>
		<param />
	</function>
	<function name="ChannelModerator">
		<summary>Grants a player moderator status on the given channel</summary>
		<param name="channel" type="string">The name of the channel</param>
		<param name="fullname" type="string">The name of the player to give moderator status</param>
	</function>
	<function name="GetItemSpell">
		<summary>Returns information about the spell cast when using a given item</summary>
		<paramchoice>
			<param name="itemName" type="string">The name of the item to query</param>
			<param name="itemId" type="number">An itemId to query</param>
		</paramchoice>
		<return name="name" type="string">The name of the spell that is cast when using the given item.  These are internal spell names that can't be cast directly.</return>
		<return name="rank" type="string">The rank of the spell cast</return>
	</function>
	<function name="GetVideoCaps">
		<summary>Returns information about the video subsystem</summary>
		<return name="hasAnisotropic" type="number" />
		<return name="hasPixelShaders" type="number">Indicates if the video subsystem has pixel shaders</return>
		<return name="hasVertexShaders" type="number">Indicates if the video subsystem has vertex shaders</return>
		<return name="hasTrilinear" type="number" />
		<return name="hasTripleBufering" type="number">Indicates if the video subsystem supports triple buffering</return>
		<return name="maxAnisotropy" type="number" />
		<return name="hasHardwareCursor" type="number">Indicates if the video subsystem supports a hardware cursor</return>
	</function>
	<function name="GetQuestGreenRange">
		<summary>Gets the "green" range for quests</summary>
		<return name="range" type="number">The maximum level difference for a quest to show "green"</return>
	</function>
	<function name="InCinematic">
		<summary>Returns whether or not the character is viewing a cinematic.</summary>
		<return name="inCinematic" apitype="onenil">Is the character viewing a cinematic or not.</return>
	</function>
	<function name="GetTradePlayerItemLink">
		<summary>Returns a link for an item offered by the player in the trade window</summary>
		<param name="index" type="number">The index of the player's trade slot</param>
		<return name="link" type="string">The link for the given trade item</return>
	</function>
	<function name="GetLootRollItemLink">
		<summary>Returns an item link for the specified item</summary>
		<param name="id" type="number">The index of the loot roll.  Each new item that is rolled on increments this number by one so two items won't have the same roll index</param>
		<return name="link" type="string">An item link for the given loot roll item</return>
	</function>
	<function name="CommentatorSetTargetHeightOffset" />
	<function name="GetNumAuctionItems">
		<summary>Gets the number of auction items for a given type of listing</summary>
		<param name="type" type="string">The type of auction listing to query</param>
		<return name="numBatchAuctions" type="number">The number of auctions in the current page of the listing</return>
		<return name="totalAuctions" type="number">The number of total auctions available for the given listing</return>
	</function>
	<function name="CommentatorUpdateMapInfo" />
	<function name="UnstablePet">
		<summary>Unstables the pet in a given stable slot.</summary>
		<param name="slot" type="number">The pet stable slot.</param>
	</function>
	<function name="CloseTradeSkill">
		<summary>Closes the tradeskill window, if it is open</summary>
	</function>
	<function name="BuySkillTier" />
	<function name="CanWithdrawGuildBankMoney">
		<summary>Returns whether or not the player can withdraw money from the guild bank</summary>
		<return name="canWithdraw" apitype="onenil">1 if the player can withdraw money from the guild bank, otherwise nil</return>
	</function>
	<function name="GetNumFactions">
		<summary>Gets the number of factions the player has encountered</summary>
		<return name="numFactions" type="number">The number of factions the player has encountered.</return>
	</function>
	<function name="GuildUninvite">
		<summary>Uninvites a player from the guild</summary>
		<param name="name" type="string">The name of the player to uninvite</param>
	</function>
	<function name="ToggleCollisionDisplay" />
	<function name="GuildPromote">
		<summary>Promotes a given player to the next highest guild rank</summary>
		<param name="name" type="string">The name of the player to promote</param>
	</function>
	<function name="RunBinding">
		<summary>Runs a keybinding by name</summary>
		<param name="COMMAND" type="string">The keybinding command or action to run</param>
	</function>
	<function name="GuildInvite">
		<summary>Invites a player to your guild</summary>
		<param name="name" type="string">The name of the player to invite to your guild</param>
	</function>
	<function name="ConvertToRaid">
		<summary>Converts a party to a raid.  Does nothing if not in a party or not the party leader.</summary>
	</function>
	<function name="GuildDemote">
		<summary>Demotes a guild member by one guild rank</summary>
		<param name="name" type="string">A guild member's name</param>
	</function>
	<function name="GetQuestTimers">
		<summary>Returns a list of the remaining time of all active quest timers. </summary>
		<return name="..." type="number">A list of all active quest timers.</return>
	</function>
	<function name="CancelPendingLFG">
		<summary>Removes the player from all open LookingForGroup queues.</summary>
	</function>
	<function name="GuildControlSaveRank">
		<summary>Saves the settings for a guild rank</summary>
		<param name="name" type="string">The name of the guild rank</param>
	</function>
	<function name="ProcessMapClick">
		<summary>Possibly changes the WorldMap based on a mouse click</summary>
		<param name="x" type="number">The x coordinate of the click, as a number between 0 and 1</param>
		<param name="y" type="number">The y coordinate of the click, as a number between 0 and 1</param>
	</function>
	<function name="UnitIsConnected">
		<summary>Returns whether or not the given unit or player is connect (i.e. not Offline)</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of a player to query</param>
		</paramchoice>
		<return name="isConnected" apitype="onenil">1 if the player is connected, otherwise nil</return>
	</function>
	<function name="GetNumGossipActiveQuests">
		<summary>Gets the number of currently active quests in the gossip window</summary>
		<return name="num" type="number">The number of currently active quests in the gossip window</return>
	</function>
	<function name="GetTrainerServiceDescription">
		<summary>Gets the description of a given trainer service (spell, tradeskill, etc.)</summary>
		<param name="index" type="number">The index of a trainer service (class spell, tradeskill, etc.) to query</param>
		<return name="text" type="string">The description of the service</return>
	</function>
	<function name="GetActionCount">
		<summary>Gets the number of uses remaining for the given action slot</summary>
		<param name="slot" type="number">The action slot to check (1-120)</param>
		<return name="count" type="number">The number of uses left</return>
	</function>
	<function name="BuyGuildBankTab">
		<summary>Purchases the next available guild bank tab, without confirmation</summary>
	</function>
	<function name="GetMirrorTimerInfo">
		<summary>Returns information about a mirror timer bar</summary>
		<param name="index" type="number">The index of the timer to query</param>
		<return name="timer" type="string">The name of the timer</return>
		<return name="value" type="number">The current value of the timer</return>
		<return name="maxvalue" type="number">The maximum value of the timer</return>
		<return name="scale" type="number">The scale to multiply the timer by</return>
		<return name="paused" type="number">If the timer is paused</return>
		<return name="label" type="string">The label to be displayed on the timer</return>
	</function>
	<function name="AcceptLFGMatch">
		<summary>Accepts a proposed LFG match</summary>
	</function>
	<function name="CommentatorExitInstance" />
	<function name="ConfirmPetUnlearn">
		<summary>Confirms unlearning a pet's skills</summary>
	</function>
	<function name="SetSelectedBattlefield">
		<summary>Selects a given battlefield in the battlemaster window</summary>
		<param name="index" type="number">The battlefield index to select</param>
	</function>
	<function name="UnitAttackPower">
		<summary>Gets the unit's melee attack power and modifiers</summary>
		<param name="unit" type="string">The unit to get information from. (Does not work for 'target')</param>
		<return name="base" type="number">The unit's base attack power</return>
		<return name="posBuff" type="number">The total effect of positive buffs to attack power</return>
		<return name="negBuff" type="number">The total effect of negative buffs to attack power</return>
	</function>
	<function name="MovieRecording_IsCodecSupported">
		<summary>Returns whether or not a given video recording codec is supported by the client</summary>
		<param name="codecName" type="string">The name of a video compression codec</param>
		<return name="isSupported" type="boolean">true if the codec is supported by the client, otherwise false</return>
	</function>
	<function name="CanGuildPromote">
		<summary>Returns whether or not the player has the ability to promote other players within the guild.</summary>
		<return name="canPromote" apitype="onenil">1 if the player has the ability to promote within the guild, otherwise nil</return>
	</function>
	<function name="randomseed">
		<summary>An alias for math.randomseed</summary>
	</function>
	<function name="EquipCursorItem">
		<summary>Attempts to equip the item held on the cursor into a specific inventory slot</summary>
		<param name="slot" type="number">An inventory slot id</param>
	</function>
	<function name="IsFlying">
		<summary>Returns whether or not the player is currently flying</summary>
		<return name="isFlying" apitype="onenil">1 if the player is currently flying, otherwise nil</return>
	</function>
	<function name="GetVoiceCurrentSessionID">
		<summary>Returns a identifier for your current voice session</summary>
		<return name="id" type="number">The voice session ID</return>
	</function>
	<function name="max">
		<summary>An alias for math.max</summary>
	</function>
	<function name="SetEuropeanNumbers">
		<summary>Enables using comma as the decimal separator</summary>
		<param name="enable" type="boolean">true to enable European numbers, otherwise nil</param>
	</function>
	<function name="GetSocketTypes">
		<summary>Gets the color of a given gem socket in the socketing UI</summary>
		<param name="index" type="number">The index of the socket to query</param>
		<return name="gemColor" type="string">The color of the given gem socket</return>
	</function>
	<function name="GetQuestLogQuestText">
		<summary>Retrieves the text fields for the quest log details panel of the currently active quest.</summary>
		<return name="questDescription" type="string">The description of the quest.</return>
		<return name="questObjectives" type="string">The objectives of the quest.</return>
	</function>
	<function name="GetActionCooldown">
		<summary>Returns cooldown information about a given action slot</summary>
		<param name="slot" type="number">The action slot to query for cooldown information</param>
		<return name="start" type="number">The value of GetTime() at the moment the cooldown began, or 0</return>
		<return name="duration" type="number">The length of the cooldown, or 0</return>
		<return name="enable" type="number">1 if the cooldown is enabled, otherwise 0</return>
	</function>
	<function name="SetChatWindowShown">
		<summary>Sets if a chat window is shown in chat-cache.txt</summary>
		<param name="index" type="number">The index of the chat window</param>
		<param name="shown" apitype="onenil">1 to show the window, nil to hide</param>
	</function>
	<function name="GetNumGuildBankTabs">
		<summary>Gives the number of purchased tabs for the guildbank</summary>
		<return name="numTabs" type="number">Number of purchased guildbank tabs.  This value returns 0 if the player is unguilded.</return>
	</function>
	<function name="ClickTargetTradeButton">
		<summary>Simulates clicking on a specific slot in the target trade window.</summary>
		<param name="index" type="number">The index of a trade slot on the target's side of the trade window</param>
	</function>
	<function name="GetPartyMember">
		<summary>Returns whether or not a given party index is exists in the player's party</summary>
		<param name="index" type="number">The index of the party member to query (1-4)</param>
		<return name="hasMember" apitype="onenil">1 if there is a party member at the given index of the player's party, otherwise nil</return>
	</function>
	<function name="GetCurrentMapContinent">
		<summary>Gets the current map continent.</summary>
		<return name="continent" type="number">The continent the player is currently viewing on the world map, or the continent the player currently resides on.</return>
	</function>
	<function name="SetGuildRosterShowOffline">
		<summary>Sets the value for the "Show Offline" guild setting</summary>
		<param name="showOffline" apitype="onenil">The value to set for the "Show Offline" guild setting</param>
	</function>
	<function name="GetQuestLogRewardTitle">
		<summary>Gets the title you will be rewarded for completing the currently-displayed quest</summary>
	</function>
	<function name="DeclineArenaTeam">
		<summary>Declines an arena team invitation</summary>
	</function>
	<function name="GetBattlefieldWinner">
		<summary>Gets the winner of the current battleground or arena match</summary>
		<return name="wWinner" type="number">The index of the winning team, or nil if not in a match or the match is not yet over.</return>
	</function>
	<function name="GetReadyCheckTimeLeft">
		<summary>Gets the amount of time left on the current ready check</summary>
	</function>
	<function name="GetTrainerServiceLevelReq">
		<summary>Gets the level requirement for a trainer service</summary>
		<param name="index" type="number">The index of the trainer service</param>
		<return name="reqLevel" type="number">The required level to learn a given service, otherwise nil</return>
	</function>
	<function name="GetTrainerServiceItemLink">
		<summary>Returns an item link for a given trainer service item</summary>
		<param name="index" type="number">The index of a service in the trainer window</param>
		<return name="link" type="string">The item link for the given trainer service, or nil</return>
	</function>
	<function name="CanEditMOTD">
		<summary>Returns whether or not the player can edit the guild MOTD</summary>
		<return name="canEdit" apitype="onenil">1 if the player can edit the guild MOTD, otherwise nil</return>
	</function>
	<function name="GetPartyLeaderIndex">
		<summary>Gets the index of the current party leader</summary>
		<return name="index" type="number">The index of the party leader, or 0.</return>
	</function>
	<function name="PickupContainerItem">
		<summary>Picks up an item from a container and holds it on the cursor</summary>
		<param name="index" type="number">The index of the container that holds the item to be picked up</param>
		<param name="slot" type="number">The slot that contains the item to be picked up</param>
	</function>
	<function name="CloseAuctionHouse">
		<summary>Closes the auction house UI and stops all data retrieval.</summary>
	</function>
	<function name="UnitIsSilenced">
		<summary>Returns whether or not the player is silenced on the specified voice channel.</summary>
		<param name="name" type="string">The name of the player to query</param>
		<param name="channel" type="string">Channel to query for voice status.</param>
		<return name="silenced" apitype="onenil">1 if the unit is silenced on this channel, nil if not.</return>
	</function>
	<function name="SetMapZoom">
		<summary>Sets the worldmap to a specific continent or zone within that continent.</summary>
		<param name="continentIndex" type="number">Content index identifier. Use GetMapContinents() for a list. 0 and -1 are valid inputs for Azeroth and the cosmic map.</param>
		<param name="zoneIndex" type="number">Optional argument to display a specific zone within a continent. Use GetMapZones(continentIndex) for a list.</param>
	</function>
	<function name="ReportBug" />
	<function name="GetGMTicket">
		<summary>Requests a GM ticket update from the server</summary>
	</function>
	<function name="GetAuctionItemSubClasses">
		<summary>Returns a list of subclasses that are valid for a specific auction item class (e.g. One-Handed Axes, Two-Handed Axes, Bows, Guns under Weapons; Miscellaneous, Cloth, Leather and others under Armor, etc.).</summary>
		<param name="index" type="number">The index of the Auction Item Class you want to query for Sub-Classes. The number is from 1 to #{GetAuctionItemClasses()}</param>
		<return name="..." type="string">A list of the sub classes attached to the queried auction class, or nil for classes which have no subclasses.</return>
	</function>
	<function name="GetTradeSkillItemLevelFilter">
		<summary>Gets the current values for the tradeskill item level filter</summary>
		<return name="minLevel" type="number">Lowest required level of items to show in filtered TradeSkill list</return>
		<return name="maxLevel" type="number">Highest required level of items to show in filtered TradeSkill list</return>
	</function>
	<function name="IsInventoryItemLocked">
		<summary>Returns whether or not the given inventory slot is locked</summary>
		<param name="slot" type="number">An inventory slot id</param>
		<return name="isLocked" apitype="onenil">1 if the item in the inventory slot is locked, otherwise nil</return>
	</function>
	<function name="GetTrackingTexture">
		<summary>Gets the texture of the active tracking buff, if one is active</summary>
		<return name="texture" type="string">The path of the active tracking buff, if there is one.</return>
	</function>
	<function name="GetTitleText">
		<summary>Gets the title text for the currently displayed quest.</summary>
		<return name="text" type="string">The title text for the currently displayed quest</return>
	</function>
	<function name="GetTotemInfo">
		<summary>Returns information on a currently active totem</summary>
		<param name="slot" type="number">The element of the totem you want to destroy</param>
		<return name="haveTotem" type="boolean">Indicates whether you have an active totem of the given type</return>
		<return name="name" type="string">The name of the totem</return>
		<return name="startTime" type="number">The value of GetTime() when the totem was created</return>
		<return name="duration" type="number">The total duration the totem will last (in seconds)</return>
		<return name="icon" type="string">The texture path to the totem's icon</return>
	</function>
	<function name="GetActionTexture">
		<summary>Gets the texture for the given action slot</summary>
		<param name="slot" type="number">Action ID to query.</param>
		<return name="texture" type="string">Texture of the slot.</return>
	</function>
	<function name="GetNumBattlefieldStats">
		<summary>Gets the number of battlefield specific columns to be displayed in the final score frame</summary>
		<return name="numStats" type="number">The number of battlefield specific columns to be displayed in the final score frame</return>
	</function>
	<function name="GetCurrentMultisampleFormat">
		<summary>Gets the index of the currently selected multi-sample format</summary>
		<return name="index" type="number">The index of the currently selected multi-sample format.</return>
	</function>
	<function name="CanGuildDemote">
		<summary>Returns whether or not the player can demote lower ranked guild members</summary>
		<return name="canDemote" apitype="onenil">1 if the player can demote lower ranked guild members.  This is determined by the player's guild rank permissions</return>
	</function>
	<function name="SortAuctionSetSort">
		<summary>Sets the server-side sort to be applied to the items returned by an Auction House Query</summary>
		<param name="type" type="string">The auction house listing to edit</param>
		<param name="sort" type="string">The sort type you want to apply</param>
		<param name="reversed" type="boolean">True if you want the sort to be an inverse one (Z -&gt; A), false if you want it to be normal (A -&gt; Z)</param>
	</function>
	<function name="GetGossipText">
		<summary>Gets the text that is displayed when initially conversing with an NPC</summary>
		<return name="text" type="string">The NPC gossip text, displayed in the initial conversation dialog</return>
	</function>
	<function name="GetGuildBankTransaction">
		<summary>Returns information about a specific guild bank item transaction</summary>
		<param name="tab" type="number">The index of the guild bank tab</param>
		<param name="index" type="number">The index of the log entry</param>
		<return name="type" type="string">The type of transaction</return>
		<return name="name" type="string">The name of the player who completed the transaction</return>
		<return name="itemLink" type="string">The item link for the item involved</return>
		<return name="count" type="number">The number of items in the stack</return>
		<return name="tab1" type="number">The source tab if the item was moved from one tab to another</return>
		<return name="tab2" type="number">The destination tab if the item was moved from one tab to another</return>
		<return name="year" type="number">The number of years ago the transaction occurred</return>
		<return name="month" type="number">The number of months ago the transaction occurred</return>
		<return name="day" type="number">The number of days ago the transaction occurred</return>
		<return name="hour" type="number">The number of hours ago the transaction occurred</return>
	</function>
	<function name="GetExistingLocales">
		<summary>Gets the locale packs currently available to the client</summary>
		<return name="..." type="string">A list of the locale packs currently available to the client</return>
	</function>
	<function name="CanGuildInvite">
		<summary>Returns whether or not the player can invite members to their guild</summary>
		<return name="canInvite" apitype="onenil">1 if the player can invite members to their guild, otherwise nil</return>
	</function>
	<function name="GetSpellCritChanceFromIntellect">
		<summary>Gets the percent chance to crit granted by Intellect</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query.  This function appears to only work for "player" units</param>
		<return name="critChance" type="number">The percent chance to crit granted by the player's Intellect stat</return>
	</function>
	<function name="CastSpell">
		<param name="spellID" type="number">The index of a spell in the spellbook</param>
		<param name="bookType" type="string">The type of spellbook to use</param>
	</function>
	<function name="IsLeftAltKeyDown">
		<summary>Returns whether or not the left Alt key is currently held down</summary>
		<return name="isDown" apitype="onenil">1 if the left Alt key on the keyboard is currently held down</return>
	</function>
	<function name="GetMacroIconInfo">
		<summary>Gets the texture for a given macro icon index</summary>
		<param name="index" type="number">The index of a macro icon</param>
		<return name="texture" type="string">The path to the macro's icon texture</return>
	</function>
	<function name="GetShapeshiftForm">
		<summary>Gets the current shapeshift form index</summary>
		<return name="index" type="number">The current shapeshift form</return>
	</function>
	<function name="SetChannelWatch" />
	<function name="GetArenaTeam">
		<summary>Returns information about one of the player's arena teams.</summary>
		<param name="index" type="number">The index of the arena team.  These are indexed from smallest to largest, with the first team (normally 2v2) being 1.</param>
		<return name="teamName" type="string">The name of the arena team</return>
		<return name="teamSize" type="number">The size of the team (2 for 2v2, 3 for 2v2, etc.)</return>
		<return name="teamRating" type="number">The team's rating</return>
		<return name="teamPlayed" type="number">The number of games played in the current arena period</return>
		<return name="teamWins" type="number">The number of games won in the current arena period</return>
		<return name="seasonTeamPlayer" type="number">The number of games played in the current arena season</return>
		<return name="seasonTeamWins" type="number">The number of games won in the current arena season</return>
		<return name="playerPlayed" type="number">The number of games the player has played in the current arena period</return>
		<return name="seasonPlayerPlayed" type="number">The number of games the player has played in the current arena season</return>
		<return name="teamRank" type="number">The current team ranking</return>
		<return name="playerRating" type="number">The player's personal rating</return>
		<return name="bg_red" type="number">The red component color value for the background (0.0-1.0)</return>
		<return name="bg_green" type="number">The green component color value for the background (0.0-1.0)</return>
		<return name="bg_blue" type="number">The blue component color value for the background (0.0-1.0)</return>
		<return name="emblem" type="number">The index of the team's emblem graphic</return>
		<return name="emblem_red" type="number">The red component color value for the emblem (0.0-1.0)</return>
		<return name="emblem_green" type="number">The green component color value for the emblem (0.0-1.0)</return>
		<return name="emblem_blue" type="number">The blue component color value for the emblem (0.0-1.0)</return>
		<return name="border" type="number">The index of the team's border graphic</return>
		<return name="border_red" type="number">The red component color value for the border (0.0-1.0)</return>
		<return name="border_green" type="number">The green component color value for the border (0.0-1.0)</return>
		<return name="border_blue" type="number">The blue component color value for the border (0.0-1.0)</return>
	</function>
	<function name="SetRaidTarget">
		<summary>Sets a raid target marker on the given unit</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitId of the unit to mark</param>
			<param name="name" type="string">The full name of the player to mark</param>
		</paramchoice>
	</function>
	<function name="GetSelectedBattlefield">
		<summary>Gets the currently selected battlefield index</summary>
		<return name="index" type="number">The current selected battlefield index, in the battlemaster window</return>
	</function>
	<function name="GetSelectedAuctionItem">
		<summary>Gets the index of the currently selected auction house item</summary>
		<param name="type" type="string">The type of auction house listing</param>
		<return name="index" type="number">The index of the currently selected auction item</return>
	</function>
	<function name="GetScreenWidth">
		<summary>Query the width of the screen.</summary>
		<return name="screenWidth" type="number">The width of the client's screen, in pixels.  Note that this may not be the width you expect from the video settings, for example '1680x1050' reports back a screen width of 1595.844</return>
	</function>
	<function name="GetNumPartyMembers">
		<summary>Gets the number of players in your party.</summary>
		<return name="numPartyMembers" type="number">Number of members in your party.</return>
	</function>
	<function name="PositionWorldMapArrowFrame">
		<param name="point" type="string">The anchor point on the WorldMapArrowFrame</param>
		<param name="frame" type="string">The frame that WorldMapArrowFrame should be anchored relative to</param>
		<param name="relativePoint" type="string" optional="true">The anchor point on the relative frame</param>
		<param name="offsetX" type="number" optional="true">The horizontal offset from the given anchor position, in pixels</param>
		<param name="offsetY" type="number" optional="true">The vertical offset from the given anchor position, in pixels</param>
	</function>
	<function name="GetNumBindings">
		<summary>Gets the number of key binding actions listed in the Key Bindings window.</summary>
		<return name="numBindings" type="number">The number of key binding actions available to be bound to key combinations</return>
	</function>
	<function name="KBSetup_GetTotalArticleCount">
		<summary>Gets the number of "Top Issues" articles</summary>
		<return name="numArticles" type="number">The total number of "Top Issues" articles</return>
	</function>
	<function name="GetCVarAbsoluteMax">
		<summary>Gets the absolute maximum value allowed for a given CVar</summary>
		<param name="cvar" type="string">The name of the CVar to query</param>
		<return name="min" type="number">The absolute maximum value allowed for the given CVar</return>
	</function>
	<function name="CloseGuildRoster">
		<summary>Closes the Guild Roster UI frame</summary>
	</function>
	<function name="debugprofilestart">
		<summary>Starts and resets the high resolution debug timer</summary>
	</function>
	<function name="GetCritChanceFromAgility">
		<summary>Gets the amount of critical strike chance given by the agility stat</summary>
		<param name="unit" type="string" apitype="unitid">The unit to query</param>
		<return name="critChance" type="number">The percentage crit chance granted by the agility stat</return>
	</function>
	<function name="GetPetActionsUsable">
		<summary>Returns whether or not the pet's actions are usable</summary>
		<return name="petActionsUsable" apitype="onenil">1 if the pet's actions are usable, otherwise nil</return>
	</function>
	<function name="GetNumActiveQuests">
		<summary>Gets the number of currently active quests by this player for this NPC</summary>
		<return name="numActiveQuests" type="number">Number of currently active quests from this NPC</return>
	</function>
	<function name="IsRealPartyLeader">
		<summary>Returns whether or not the player is the leader of their "real party"</summary>
		<return name="isLeader" apitype="onenil">1 if the player is the party leader of the "real party", otherwise nil</return>
	</function>
	<function name="GetTrainerServiceSkillReq">
		<summary>Gets the skill requirement for a a given trainer service</summary>
		<param name="index" type="number">The index of a trainer service</param>
		<return name="skill" type="string">The name of the required skill</return>
		<return name="rank" type="number">The rank required</return>
		<return name="hasReq" apitype="onenil">1 if the player fulfills the requirement, otherwise nil</return>
	</function>
	<function name="ClearSendMail">
		<summary>Clears the send mail window, removing all items, money, text</summary>
	</function>
	<function name="GetPartyAssignment">
		<summary>Returns whether or not a player is assigned a specific role (maintank, mainassist)</summary>
		<paramchoice>
			<param name="unit" type="string" apitype="unitid">The unitid to query</param>
			<param name="name" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="isAssigned" apitype="onenil">1 if the player is assigned the specified role, otherwise nil</return>
	</function>
	<function name="GetNumGossipOptions">
		<summary>Gets the number of options in the current gossip frame</summary>
		<return name="numOptions" type="number">Number of gossip options available in the current instance</return>
	</function>
	<function name="ShowingCloak">
		<summary>Returns whether or not the "Show Cloak" setting is currently checked</summary>
		<return name="isShown" apitype="onenil">1 if the cloak is currently set to be shown, otherwise nil</return>
	</function>
	<function name="ResetCursor">
		<summary>Resets the mouse cursor to the default glove pointer</summary>
	</function>
	<function name="CloseTabardCreation">
		<summary>Closes the tabard creation window</summary>
	</function>
	<function name="GetNumWhoResults">
		<summary>Gets the number of results from a who request</summary>
		<return name="numResults" type="number">The number of results returned</return>
		<return name="totalCount" type="number">The number of actual results</return>
	</function>
	<function name="AcceptArenaTeam">
		<summary>Accept an invitation to join an arena team</summary>
	</function>
	<function name="GetTrainerServiceInfo">
		<summary>Returns information about a service in the trainer window</summary>
		<param name="index" type="number">The index of a line in the trainer window</param>
		<return name="serviceName" type="string">The name of the service</return>
		<return name="serviceSubText" type="string">The subtext (rank) of the service</return>
		<return name="serviceType" type="string">The type of the service</return>
	</function>
	<function name="CursorHasMoney">
		<summary>Returns whether or not the cursor is currently holding money</summary>
		<return name="hasMoney" apitype="onenil">1 if the cursor is currently holding money, otherwise nil</return>
	</function>
	<function name="GetNumSavedInstances">
		<summary>Gets the number of instances the player is saved to</summary>
		<return name="savedInstances" type="number">The number of instances the player is currently saved to</return>
	</function>
	<function name="GetActionBarToggles">
		<summary>Gets the current visibility settings for the four secondary action bars</summary>
		<return name="showBar1" apitype="onenil">1 if the interface option is set to show the Bottom Left ActionBar, otherwise nil</return>
		<return name="showBar2" apitype="onenil">1 if the interface option is set to show the Bottom Right ActionBar, otherwise nil</return>
		<return name="showBar3" apitype="onenil">1 if the interface option is set to show the Right ActionBar, otherwise nil</return>
		<return name="showBar4" apitype="onenil">1 if the interface option is set to show the Right ActionBar 2, otherwise nil</return>
	</function>
	<function name="SetFarclip">
		<summary>Sets the value of the "Terrain Distance" slider in the Video Options</summary>
		<param name="value" type="number">The value of the "Terrain Distance" slider in the Video Options</param>
	</function>
	<function name="GetAdjustedSkillPoints" />
	<function name="GetActiveTitle">
		<summary>Gets the name of an active quest in the QuestFrame.</summary>
		<param name="index" type="number">The index of an active quest in the QuestFrame</param>
		<return name="title" type="string">Title of the active quest.</return>
	</function>
	<function name="PitchDownStart" />
	<function name="GetReadyCheckStatus">
		<summary>Gets the given player's response to a ready check</summary>
		<param name="unit" type="string" apitype="unitid">The unit in question</param>
		<return name="status" type="string" />
	</function>
	<function name="GetGuildRosterShowOffline">
		<summary>Returns whether or not the "Show Offline" setting is enabled in the Guild tab</summary>
		<return name="showOffline" apitype="onenil">1 if the "Show Offline" setting is enabled in the Guild tab, otherwise nil</return>
	</function>
	<function name="IsAttackSpell">
		<summary>Returns whether or not a given spell is an "attack spell"</summary>
		<paramchoice>
			<param name="spellId" type="number">The index of a spell in the spellbook</param>
			<param name="name" type="string">The name of a spell</param>
		</paramchoice>
		<return name="isAttack" apitype="onenil">1 if the spell is an "attack spell", otherwise nil. This is used by the default user interface to indicate if the spell should flash when attacking</return>
	</function>
	<function name="MovieRecording_IsCompressing">
		<summary>Returns whether or not the client is currently compressing a recording</summary>
		<return name="isCompressing" type="boolean">true if the client is currently compressing a recording, otherwise false</return>
	</function>
	<function name="GetMuteStatus">
		<summary>Returns whether or not the given player or unitId is muted</summary>
		<paramchoice>
			<param name="unitId" type="string" apitype="unitid">The unitId to query</param>
			<param name="fullname" type="string">The name of the player to query</param>
		</paramchoice>
		<return name="muteStatus" apitype="onenil">1 if the player is muted, otherwise nil</return>
	</function>
	<function name="GetMultisampleFormats">
		<summary>Gets the available multi-sample formats</summary>
		<return name="color" type="number">The color depth as a number.  Possible values would include 16 for 16-bit color depth, 24 for 24-bit, etc.</return>
		<return name="depth" type="number">The video depth in bits</return>
		<return name="multisample" type="number">The multisampling setting</return>
		<return name="...">A list of color, depth, multisample values listing the available multi-sample formats available to the client</return>
	</function>
	<function name="GetArmorPenetration">
		<summary>Gets the player's current armor penetration</summary>
	</function>
	<function name="CastPetAction">
		<summary>Casts a pet action on a specific target</summary>
		<param name="index" type="number">The index of a pet action, in the pet's action bar</param>
		<param name="target" type="string" apitype="unitid">The unit to use as the target of the given action</param>
	</function>
	<function name="GetFarclip">
		<summary>Gets the value of the "Terrain Distance" video option</summary>
		<return name="distance" type="number">The distance that corresponds to Terrain Distance option in Video Options</return>
	</function>
	<function name="ListChannels">
		<summary>Prints a list of the channels to which the player currently belongs to DEFAULT_CHAT_FRAME</summary>
	</function>
	<function name="GetMacroIndexByName">
		<summary>Converts a macro name to macro index</summary>
		<param name="name" type="string">The name of a macro</param>
		<return name="index" type="number">The index of the given named macro, or 0</return>
	</function>
	<function name="DepositGuildBankMoney">
		<summary>Deposits money into the guild bank</summary>
		<param name="money" type="number">The amount of money to deposit in copper</param>
	</function>
	<function name="GetBuybackItemLink">
		<summary>Gets the item link for an item in the buyback window</summary>
		<param name="slot" type="number">The index of a slot in the vendor buyback window</param>
		<return name="link" type="string">The item link for the item in the given buyback slot</return>
	</function>
	<function name="SelectGossipOption">
		<summary>Selects an option in the NPC dialog (gossip) window</summary>
		<param name="index" type="number">The option in the NPC gossip window to select, from 1 to GetNumGossipOptions()</param>
		<param name="text" type="string" optional="true">The text of the string to send on confirmation.</param>
		<param name="confirm" type="boolean" optional="true">true to confirm, false or nil to not confirm</param>
	</function>
	<function name="GetInventoryItemDurability">
		<summary>Gets the durability stats for a given item</summary>
		<param name="slot" type="number">The inventory slotid to query.  This slotid should be generated using the GetInventorySlotInfo function.</param>
		<return name="durability" type="number">The current durability</return>
		<return name="max" type="number">The maximum durability</return>
	</function>
	<function name="GuildControlGetNumRanks">
		<summary>Gets the number of guild ranks in the guild including the guild master.</summary>
		<return name="numRanks" type="number">Number of guild ranks</return>
	</function>
	<function name="DoTradeSkill">
		<summary>Casts a trade skill, optionally multiple times</summary>
		<param name="index" type="number">The index of the skill</param>
		<param name="repeat" type="number" optional="true">The number of time to repeat the craft</param>
	</function>
	<function name="RegisterForSavePerCharacter" />
	<function name="GetAddOnMemoryUsage">
		<summary>Gets the amount of memory used by a given addon</summary>
		<paramchoice>
			<param name="index" type="number">The index of the addon, must be in the range of 1 to GetNumAddons().</param>
			<param name="name" type="string">The name of the addon, as it appears in its folder name.</param>
		</paramchoice>
		<return name="mem" type="number">The memory usage of the addon, in kilobytes</return>
	</function>
	<function name="GetCurrentTitle">
		<summary>Gets the currently selected player title</summary>
		<return name="currentTitle" type="number">The currently selected title.  If the player has no available titles this will return 0.  If the player has available titles and has none selected, this will return -1.</return>
	</function>
	<function name="IsWindowsClient">
		<summary>Checks if the client's OS is Windows</summary>
		<return name="isWindows" type="boolean">True if the user runs Windows, false if Mac or Linux</return>
	</function>
	<function name="GetTimeToWellRested">
		<return name="seconds" type="number">The number of seconds until the player would reach full rested state</return>
	</function>
	<function name="CastSpellByName">
		<param name="name" type="string">The name of a spell to cast</param>
		<param name="target" type="string" apitype="unitid">The unit to use as the target of the given action</param>
	</function>
</doc>